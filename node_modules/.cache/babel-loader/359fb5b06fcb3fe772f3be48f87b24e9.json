{"ast":null,"code":"import types, { GET_ALL_HAPPENINGS_REQUEST, GET_ALL_HAPPENINGS_SUCCESS, GET_ALL_HAPPENINGS_FAILURE, GET_HAPPENINGS_REQUEST, GET_HAPPENINGS_SUCCESS, GET_HAPPENINGS_FAILURE, CREATE_HAPPENING_REQUEST, CREATE_HAPPENING_SUCCESS, CREATE_HAPPENING_FAILURE, UPDATE_HAPPENING_REQUEST, UPDATE_HAPPENING_SUCCESS, UPDATE_HAPPENING_FAILURE, DELETE_HAPPENING_REQUEST, DELETE_HAPPENING_SUCCESS, DELETE_HAPPENING_FAILURE } from '../actions/types';\nconst INITIAL_STATE = {\n  happeningList: [],\n  getHappeningsLoading: false,\n  allHappeningList: [],\n  getAllHappeningsLoading: false,\n  createHappeningLoading: false,\n  updateHappeningLoading: false,\n  deleteHappeningLoading: false,\n  symptomList: [],\n  getSymptomsLoading: false\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_ALL_HAPPENINGS_REQUEST:\n      {\n        return {\n          ...state,\n          getAllHappeningsLoading: true\n        };\n      }\n    case GET_ALL_HAPPENINGS_SUCCESS:\n      {\n        return {\n          ...state,\n          getAllHappeningsLoading: false,\n          allHappeningList: action.payload\n        };\n      }\n    case GET_ALL_HAPPENINGS_FAILURE:\n      {\n        return {\n          ...state,\n          getAllHappeningsLoading: false\n        };\n      }\n    case GET_HAPPENINGS_REQUEST:\n      {\n        return {\n          ...state,\n          getHappeningsLoading: true\n        };\n      }\n    case GET_HAPPENINGS_SUCCESS:\n      {\n        return {\n          ...state,\n          getHappeningsLoading: false,\n          happeningList: action.payload\n        };\n      }\n    case GET_HAPPENINGS_FAILURE:\n      {\n        return {\n          ...state,\n          getHappeningsLoading: false\n        };\n      }\n    case CREATE_HAPPENING_REQUEST:\n      {\n        return {\n          ...state,\n          createHappeningLoading: true\n        };\n      }\n    case CREATE_HAPPENING_SUCCESS:\n      {\n        return {\n          ...state,\n          createHappeningLoading: false\n        };\n      }\n    case CREATE_HAPPENING_FAILURE:\n      {\n        return {\n          ...state,\n          createHappeningLoading: false\n        };\n      }\n    case UPDATE_HAPPENING_REQUEST:\n      {\n        return {\n          ...state,\n          updateHappeningLoading: true\n        };\n      }\n    case UPDATE_HAPPENING_SUCCESS:\n      {\n        return {\n          ...state,\n          updateHappeningLoading: false\n        };\n      }\n    case UPDATE_HAPPENING_FAILURE:\n      {\n        return {\n          ...state,\n          updateHappeningLoading: false\n        };\n      }\n    case DELETE_HAPPENING_REQUEST:\n      {\n        return {\n          ...state,\n          deleteHappeningLoading: true\n        };\n      }\n    case DELETE_HAPPENING_SUCCESS:\n      {\n        return {\n          ...state,\n          deleteHappeningLoading: false\n        };\n      }\n    case DELETE_HAPPENING_FAILURE:\n      {\n        return {\n          ...state,\n          deleteHappeningLoading: false\n        };\n      }\n    case types.GET_SYMPTOMS_REQUEST:\n      {\n        return {\n          ...state,\n          getSymptomsLoading: true\n        };\n      }\n    case types.GET_SYMPTOMS_SUCCESS:\n      {\n        return {\n          ...state,\n          getSymptomsLoading: false,\n          symptomList: action.payload\n        };\n      }\n    case types.GET_SYMPTOMS_FAILURE:\n      {\n        return {\n          ...state,\n          getSymptomsLoading: false\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"names":["types","GET_ALL_HAPPENINGS_REQUEST","GET_ALL_HAPPENINGS_SUCCESS","GET_ALL_HAPPENINGS_FAILURE","GET_HAPPENINGS_REQUEST","GET_HAPPENINGS_SUCCESS","GET_HAPPENINGS_FAILURE","CREATE_HAPPENING_REQUEST","CREATE_HAPPENING_SUCCESS","CREATE_HAPPENING_FAILURE","UPDATE_HAPPENING_REQUEST","UPDATE_HAPPENING_SUCCESS","UPDATE_HAPPENING_FAILURE","DELETE_HAPPENING_REQUEST","DELETE_HAPPENING_SUCCESS","DELETE_HAPPENING_FAILURE","INITIAL_STATE","happeningList","getHappeningsLoading","allHappeningList","getAllHappeningsLoading","createHappeningLoading","updateHappeningLoading","deleteHappeningLoading","symptomList","getSymptomsLoading","state","arguments","length","undefined","action","type","payload","GET_SYMPTOMS_REQUEST","GET_SYMPTOMS_SUCCESS","GET_SYMPTOMS_FAILURE"],"sources":["H:/BAKCO/pj/data reconciliation/src/infection-chain/reducers/happening.js"],"sourcesContent":["import types, {\n  GET_ALL_HAPPENINGS_REQUEST,\n  GET_ALL_HAPPENINGS_SUCCESS,\n  GET_ALL_HAPPENINGS_FAILURE,\n  GET_HAPPENINGS_REQUEST,\n  GET_HAPPENINGS_SUCCESS,\n  GET_HAPPENINGS_FAILURE,\n  CREATE_HAPPENING_REQUEST,\n  CREATE_HAPPENING_SUCCESS,\n  CREATE_HAPPENING_FAILURE,\n  UPDATE_HAPPENING_REQUEST,\n  UPDATE_HAPPENING_SUCCESS,\n  UPDATE_HAPPENING_FAILURE,\n  DELETE_HAPPENING_REQUEST,\n  DELETE_HAPPENING_SUCCESS,\n  DELETE_HAPPENING_FAILURE,\n} from '../actions/types';\n\nconst INITIAL_STATE = {\n  happeningList: [],\n  getHappeningsLoading: false,\n  allHappeningList: [],\n  getAllHappeningsLoading: false,\n  createHappeningLoading: false,\n  updateHappeningLoading: false,\n  deleteHappeningLoading: false,\n  symptomList: [],\n  getSymptomsLoading: false,\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case GET_ALL_HAPPENINGS_REQUEST: {\n      return {\n        ...state,\n        getAllHappeningsLoading: true,\n      };\n    }\n    case GET_ALL_HAPPENINGS_SUCCESS: {\n      return {\n        ...state,\n        getAllHappeningsLoading: false,\n        allHappeningList: action.payload,\n      };\n    }\n    case GET_ALL_HAPPENINGS_FAILURE: {\n      return {\n        ...state,\n        getAllHappeningsLoading: false,\n      };\n    }\n    case GET_HAPPENINGS_REQUEST: {\n      return {\n        ...state,\n        getHappeningsLoading: true,\n      };\n    }\n    case GET_HAPPENINGS_SUCCESS: {\n      return {\n        ...state,\n        getHappeningsLoading: false,\n        happeningList: action.payload,\n      };\n    }\n    case GET_HAPPENINGS_FAILURE: {\n      return {\n        ...state,\n        getHappeningsLoading: false,\n      };\n    }\n    case CREATE_HAPPENING_REQUEST: {\n      return {\n        ...state,\n        createHappeningLoading: true,\n      };\n    }\n    case CREATE_HAPPENING_SUCCESS: {\n      return {\n        ...state,\n        createHappeningLoading: false,\n      };\n    }\n    case CREATE_HAPPENING_FAILURE: {\n      return {\n        ...state,\n        createHappeningLoading: false,\n      };\n    }\n    case UPDATE_HAPPENING_REQUEST: {\n      return {\n        ...state,\n        updateHappeningLoading: true,\n      };\n    }\n    case UPDATE_HAPPENING_SUCCESS: {\n      return {\n        ...state,\n        updateHappeningLoading: false,\n      };\n    }\n    case UPDATE_HAPPENING_FAILURE: {\n      return {\n        ...state,\n        updateHappeningLoading: false,\n      };\n    }\n    case DELETE_HAPPENING_REQUEST: {\n      return {\n        ...state,\n        deleteHappeningLoading: true,\n      };\n    }\n    case DELETE_HAPPENING_SUCCESS: {\n      return {\n        ...state,\n        deleteHappeningLoading: false,\n      };\n    }\n    case DELETE_HAPPENING_FAILURE: {\n      return {\n        ...state,\n        deleteHappeningLoading: false,\n      };\n    }\n    case types.GET_SYMPTOMS_REQUEST: {\n      return {\n        ...state,\n        getSymptomsLoading: true,\n      };\n    }\n    case types.GET_SYMPTOMS_SUCCESS: {\n      return {\n        ...state,\n        getSymptomsLoading: false,\n        symptomList: action.payload,\n      };\n    }\n    case types.GET_SYMPTOMS_FAILURE: {\n      return {\n        ...state,\n        getSymptomsLoading: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}