{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\treatment\\\\components\\\\employee\\\\EmployeeTable.js\";\n/* eslint-disable react/prop-types */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { DataTable } from 'app/components/shared';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuth } from 'app/hooks';\nimport { deleteEmployee, getEmployees } from 'treatment/actions/employee';\nimport { getFacilityInfo } from 'treatment/actions/facility';\nimport { getEmployeeTypes } from 'treatment/actions/employee-type';\nimport { checkFilter } from 'app/utils/helpers';\nimport { FiEdit2, FiPlus, FiTrash2 } from 'react-icons/fi';\nimport { showConfirmModal } from 'app/actions/global';\nimport EmployeeModal from './EmployeeModal';\nimport EmployeeFilter from './EmployeeFilter';\nconst EmployeeTable = () => {\n  const {\n    isHcdcDtr\n  } = useAuth();\n  const dispatch = useDispatch();\n  const [filter, setFilter] = useState({});\n  const [employeeModal, setEmployeeModal] = useState(false);\n  const [selectingRow, setSelectingRow] = useState({});\n  const facilityInfo = useSelector(s => s.treatment.facility.facilityInfo);\n  const getFacilityInfoLoading = useSelector(s => s.treatment.facility.getFacilityInfoLoading);\n  const employeeTypeList = useSelector(s => s.treatment.employeeType.employeeTypeList);\n  const getEmployeeTypesLoading = useSelector(s => s.treatment.employeeType.getEmployeeTypesLoading);\n  const employeeList = useSelector(s => s.treatment.employee.employeeList);\n  const getDataLoading = useSelector(s => s.treatment.employee.getEmployeeListLoading);\n  useEffect(() => {\n    dispatch(getEmployeeTypes());\n    dispatch(getFacilityInfo());\n  }, [dispatch]);\n  const getData = useCallback(() => {\n    if ((facilityInfo === null || facilityInfo === void 0 ? void 0 : facilityInfo.id) || isHcdcDtr) {\n      dispatch(getEmployees({\n        ...filter,\n        facilityId: isHcdcDtr ? filter.facilityId : facilityInfo.id\n      }));\n    }\n  }, [dispatch, isHcdcDtr, facilityInfo, filter]);\n  useEffect(getData, [getData]);\n  const columns = useMemo(() => [{\n    Header: '#',\n    accessor: 'index'\n  }, {\n    Header: 'Thông tin cán bộ',\n    formatter: _ref => {\n      let {\n        code,\n        name\n      } = _ref;\n      return `${code} - ${name}`;\n    }\n  }, {\n    Header: 'Chức năng',\n    formatter: _ref2 => {\n      var _employeeTypeList$fin;\n      let {\n        employeeTypeId\n      } = _ref2;\n      return (_employeeTypeList$fin = employeeTypeList.find(et => et.id === employeeTypeId)) === null || _employeeTypeList$fin === void 0 ? void 0 : _employeeTypeList$fin.description;\n    }\n  }, {\n    Header: 'Số điện thoại',\n    accessor: 'phone'\n  }, {\n    Header: 'Email',\n    accessor: 'email'\n  }], [employeeTypeList]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EmployeeFilter, {\n    onChange: d => checkFilter(filter, d) && setFilter(d),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DataTable, {\n    title: \"Danh s\\xE1ch c\\xE1n b\\u1ED9 y t\\u1EBF trong c\\u01A1 s\\u1EDF\",\n    columns: columns,\n    data: employeeList.map((d, i) => ({\n      ...d,\n      index: i + 1\n    })),\n    loading: getFacilityInfoLoading || getDataLoading || getEmployeeTypesLoading,\n    actions: [{\n      title: 'Tạo tài khoản',\n      color: 'green',\n      icon: /*#__PURE__*/React.createElement(FiPlus, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }),\n      onClick: () => {\n        setEmployeeModal(true);\n        setSelectingRow({});\n      },\n      globalAction: true\n    }, {\n      title: 'Cập nhật',\n      color: 'violet',\n      icon: /*#__PURE__*/React.createElement(FiEdit2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }\n      }),\n      onClick: r => {\n        setEmployeeModal(true);\n        setSelectingRow(r);\n      }\n    }, {\n      title: 'Xoá',\n      color: 'red',\n      icon: /*#__PURE__*/React.createElement(FiTrash2, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }),\n      onClick: _ref3 => {\n        let {\n          id\n        } = _ref3;\n        dispatch(showConfirmModal('Xóa tài khoản của cán bộ y tế này?', async () => {\n          await dispatch(deleteEmployee(id));\n          getData();\n        }));\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EmployeeModal, {\n    key: employeeModal ? 'OpenEmployeeModal' : 'CloseEmployeeModal',\n    open: employeeModal,\n    onClose: () => setEmployeeModal(false),\n    data: selectingRow,\n    getData: getData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }));\n};\nexport default EmployeeTable;","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","DataTable","useDispatch","useSelector","useAuth","deleteEmployee","getEmployees","getFacilityInfo","getEmployeeTypes","checkFilter","FiEdit2","FiPlus","FiTrash2","showConfirmModal","EmployeeModal","EmployeeFilter","EmployeeTable","isHcdcDtr","dispatch","filter","setFilter","employeeModal","setEmployeeModal","selectingRow","setSelectingRow","facilityInfo","s","treatment","facility","getFacilityInfoLoading","employeeTypeList","employeeType","getEmployeeTypesLoading","employeeList","employee","getDataLoading","getEmployeeListLoading","getData","id","facilityId","columns","Header","accessor","formatter","_ref","code","name","_ref2","_employeeTypeList$fin","employeeTypeId","find","et","description","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","d","title","data","map","i","index","loading","actions","color","icon","onClick","globalAction","r","_ref3","key","open","onClose"],"sources":["H:/BAKCO/pj/data reconciliation/src/treatment/components/employee/EmployeeTable.js"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { DataTable } from 'app/components/shared';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuth } from 'app/hooks';\nimport { deleteEmployee, getEmployees } from 'treatment/actions/employee';\nimport { getFacilityInfo } from 'treatment/actions/facility';\nimport { getEmployeeTypes } from 'treatment/actions/employee-type';\n\nimport { checkFilter } from 'app/utils/helpers';\n\nimport { FiEdit2, FiPlus, FiTrash2 } from 'react-icons/fi';\nimport { showConfirmModal } from 'app/actions/global';\n\nimport EmployeeModal from './EmployeeModal';\nimport EmployeeFilter from './EmployeeFilter';\n\nconst EmployeeTable = () => {\n  const { isHcdcDtr } = useAuth();\n  const dispatch = useDispatch();\n\n  const [filter, setFilter] = useState({});\n\n  const [employeeModal, setEmployeeModal] = useState(false);\n  const [selectingRow, setSelectingRow] = useState({});\n\n  const facilityInfo = useSelector((s) => s.treatment.facility.facilityInfo);\n  const getFacilityInfoLoading = useSelector(\n    (s) => s.treatment.facility.getFacilityInfoLoading,\n  );\n\n  const employeeTypeList = useSelector(\n    (s) => s.treatment.employeeType.employeeTypeList,\n  );\n  const getEmployeeTypesLoading = useSelector(\n    (s) => s.treatment.employeeType.getEmployeeTypesLoading,\n  );\n\n  const employeeList = useSelector((s) => s.treatment.employee.employeeList);\n  const getDataLoading = useSelector(\n    (s) => s.treatment.employee.getEmployeeListLoading,\n  );\n\n  useEffect(() => {\n    dispatch(getEmployeeTypes());\n    dispatch(getFacilityInfo());\n  }, [dispatch]);\n\n  const getData = useCallback(() => {\n    if (facilityInfo?.id || isHcdcDtr) {\n      dispatch(\n        getEmployees({\n          ...filter,\n          facilityId: isHcdcDtr ? filter.facilityId : facilityInfo.id,\n        }),\n      );\n    }\n  }, [dispatch, isHcdcDtr, facilityInfo, filter]);\n\n  useEffect(getData, [getData]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: '#',\n        accessor: 'index',\n      },\n      {\n        Header: 'Thông tin cán bộ',\n        formatter: ({ code, name }) => `${code} - ${name}`,\n      },\n      {\n        Header: 'Chức năng',\n        formatter: ({ employeeTypeId }) =>\n          employeeTypeList.find((et) => et.id === employeeTypeId)?.description,\n      },\n      {\n        Header: 'Số điện thoại',\n        accessor: 'phone',\n      },\n      {\n        Header: 'Email',\n        accessor: 'email',\n      },\n    ],\n    [employeeTypeList],\n  );\n\n  return (\n    <div>\n      <EmployeeFilter\n        onChange={(d) => checkFilter(filter, d) && setFilter(d)}\n      />\n      <DataTable\n        title=\"Danh sách cán bộ y tế trong cơ sở\"\n        columns={columns}\n        data={employeeList.map((d, i) => ({ ...d, index: i + 1 }))}\n        loading={\n          getFacilityInfoLoading || getDataLoading || getEmployeeTypesLoading\n        }\n        actions={[\n          {\n            title: 'Tạo tài khoản',\n            color: 'green',\n            icon: <FiPlus />,\n            onClick: () => {\n              setEmployeeModal(true);\n              setSelectingRow({});\n            },\n            globalAction: true,\n          },\n          {\n            title: 'Cập nhật',\n            color: 'violet',\n            icon: <FiEdit2 />,\n            onClick: (r) => {\n              setEmployeeModal(true);\n              setSelectingRow(r);\n            },\n          },\n          {\n            title: 'Xoá',\n            color: 'red',\n            icon: <FiTrash2 />,\n            onClick: ({ id }) => {\n              dispatch(\n                showConfirmModal(\n                  'Xóa tài khoản của cán bộ y tế này?',\n                  async () => {\n                    await dispatch(deleteEmployee(id));\n                    getData();\n                  },\n                ),\n              );\n            },\n          },\n        ]}\n      />\n\n      <EmployeeModal\n        key={employeeModal ? 'OpenEmployeeModal' : 'CloseEmployeeModal'}\n        open={employeeModal}\n        onClose={() => setEmployeeModal(false)}\n        data={selectingRow}\n        getData={getData}\n      />\n    </div>\n  );\n};\n\nexport default EmployeeTable;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAExE,SAASC,SAAS,QAAQ,uBAAuB;AAEjD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,cAAc,EAAEC,YAAY,QAAQ,4BAA4B;AACzE,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,gBAAgB,QAAQ,iCAAiC;AAElE,SAASC,WAAW,QAAQ,mBAAmB;AAE/C,SAASC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,gBAAgB;AAC1D,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAM;IAAEC;EAAU,CAAC,GAAGb,OAAO,EAAE;EAC/B,MAAMc,QAAQ,GAAGhB,WAAW,EAAE;EAE9B,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExC,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACuB,YAAY,EAAEC,eAAe,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpD,MAAMyB,YAAY,GAAGtB,WAAW,CAAEuB,CAAC,IAAKA,CAAC,CAACC,SAAS,CAACC,QAAQ,CAACH,YAAY,CAAC;EAC1E,MAAMI,sBAAsB,GAAG1B,WAAW,CACvCuB,CAAC,IAAKA,CAAC,CAACC,SAAS,CAACC,QAAQ,CAACC,sBAAsB,CACnD;EAED,MAAMC,gBAAgB,GAAG3B,WAAW,CACjCuB,CAAC,IAAKA,CAAC,CAACC,SAAS,CAACI,YAAY,CAACD,gBAAgB,CACjD;EACD,MAAME,uBAAuB,GAAG7B,WAAW,CACxCuB,CAAC,IAAKA,CAAC,CAACC,SAAS,CAACI,YAAY,CAACC,uBAAuB,CACxD;EAED,MAAMC,YAAY,GAAG9B,WAAW,CAAEuB,CAAC,IAAKA,CAAC,CAACC,SAAS,CAACO,QAAQ,CAACD,YAAY,CAAC;EAC1E,MAAME,cAAc,GAAGhC,WAAW,CAC/BuB,CAAC,IAAKA,CAAC,CAACC,SAAS,CAACO,QAAQ,CAACE,sBAAsB,CACnD;EAEDtC,SAAS,CAAC,MAAM;IACdoB,QAAQ,CAACV,gBAAgB,EAAE,CAAC;IAC5BU,QAAQ,CAACX,eAAe,EAAE,CAAC;EAC7B,CAAC,EAAE,CAACW,QAAQ,CAAC,CAAC;EAEd,MAAMmB,OAAO,GAAGxC,WAAW,CAAC,MAAM;IAChC,IAAI,CAAA4B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEa,EAAE,KAAIrB,SAAS,EAAE;MACjCC,QAAQ,CACNZ,YAAY,CAAC;QACX,GAAGa,MAAM;QACToB,UAAU,EAAEtB,SAAS,GAAGE,MAAM,CAACoB,UAAU,GAAGd,YAAY,CAACa;MAC3D,CAAC,CAAC,CACH;IACH;EACF,CAAC,EAAE,CAACpB,QAAQ,EAAED,SAAS,EAAEQ,YAAY,EAAEN,MAAM,CAAC,CAAC;EAE/CrB,SAAS,CAACuC,OAAO,EAAE,CAACA,OAAO,CAAC,CAAC;EAE7B,MAAMG,OAAO,GAAGzC,OAAO,CACrB,MAAM,CACJ;IACE0C,MAAM,EAAE,GAAG;IACXC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,MAAM,EAAE,kBAAkB;IAC1BE,SAAS,EAAEC,IAAA;MAAA,IAAC;QAAEC,IAAI;QAAEC;MAAK,CAAC,GAAAF,IAAA;MAAA,OAAM,GAAEC,IAAK,MAAKC,IAAK,EAAC;IAAA;EACpD,CAAC,EACD;IACEL,MAAM,EAAE,WAAW;IACnBE,SAAS,EAAEI,KAAA;MAAA,IAAAC,qBAAA;MAAA,IAAC;QAAEC;MAAe,CAAC,GAAAF,KAAA;MAAA,QAAAC,qBAAA,GAC5BlB,gBAAgB,CAACoB,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACb,EAAE,KAAKW,cAAc,CAAC,cAAAD,qBAAA,uBAAvDA,qBAAA,CAAyDI,WAAW;IAAA;EACxE,CAAC,EACD;IACEX,MAAM,EAAE,eAAe;IACvBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,MAAM,EAAE,OAAO;IACfC,QAAQ,EAAE;EACZ,CAAC,CACF,EACD,CAACZ,gBAAgB,CAAC,CACnB;EAED,oBACElC,KAAA,CAAAyD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE/D,KAAA,CAAAyD,aAAA,CAACtC,cAAc;IACb6C,QAAQ,EAAGC,CAAC,IAAKpD,WAAW,CAACU,MAAM,EAAE0C,CAAC,CAAC,IAAIzC,SAAS,CAACyC,CAAC,CAAE;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACxD,eACF/D,KAAA,CAAAyD,aAAA,CAACpD,SAAS;IACR6D,KAAK,EAAC,6DAAmC;IACzCtB,OAAO,EAAEA,OAAQ;IACjBuB,IAAI,EAAE9B,YAAY,CAAC+B,GAAG,CAAC,CAACH,CAAC,EAAEI,CAAC,MAAM;MAAE,GAAGJ,CAAC;MAAEK,KAAK,EAAED,CAAC,GAAG;IAAE,CAAC,CAAC,CAAE;IAC3DE,OAAO,EACLtC,sBAAsB,IAAIM,cAAc,IAAIH,uBAC7C;IACDoC,OAAO,EAAE,CACP;MACEN,KAAK,EAAE,eAAe;MACtBO,KAAK,EAAE,OAAO;MACdC,IAAI,eAAE1E,KAAA,CAAAyD,aAAA,CAAC1C,MAAM;QAAA2C,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,EAAG;MAChBY,OAAO,EAAEA,CAAA,KAAM;QACbjD,gBAAgB,CAAC,IAAI,CAAC;QACtBE,eAAe,CAAC,CAAC,CAAC,CAAC;MACrB,CAAC;MACDgD,YAAY,EAAE;IAChB,CAAC,EACD;MACEV,KAAK,EAAE,UAAU;MACjBO,KAAK,EAAE,QAAQ;MACfC,IAAI,eAAE1E,KAAA,CAAAyD,aAAA,CAAC3C,OAAO;QAAA4C,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,EAAG;MACjBY,OAAO,EAAGE,CAAC,IAAK;QACdnD,gBAAgB,CAAC,IAAI,CAAC;QACtBE,eAAe,CAACiD,CAAC,CAAC;MACpB;IACF,CAAC,EACD;MACEX,KAAK,EAAE,KAAK;MACZO,KAAK,EAAE,KAAK;MACZC,IAAI,eAAE1E,KAAA,CAAAyD,aAAA,CAACzC,QAAQ;QAAA0C,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,EAAG;MAClBY,OAAO,EAAEG,KAAA,IAAY;QAAA,IAAX;UAAEpC;QAAG,CAAC,GAAAoC,KAAA;QACdxD,QAAQ,CACNL,gBAAgB,CACd,oCAAoC,EACpC,YAAY;UACV,MAAMK,QAAQ,CAACb,cAAc,CAACiC,EAAE,CAAC,CAAC;UAClCD,OAAO,EAAE;QACX,CAAC,CACF,CACF;MACH;IACF,CAAC,CACD;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACF,eAEF/D,KAAA,CAAAyD,aAAA,CAACvC,aAAa;IACZ6D,GAAG,EAAEtD,aAAa,GAAG,mBAAmB,GAAG,oBAAqB;IAChEuD,IAAI,EAAEvD,aAAc;IACpBwD,OAAO,EAAEA,CAAA,KAAMvD,gBAAgB,CAAC,KAAK,CAAE;IACvCyC,IAAI,EAAExC,YAAa;IACnBc,OAAO,EAAEA,OAAQ;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACjB,CACE;AAEV,CAAC;AAED,eAAe3C,aAAa"},"metadata":{},"sourceType":"module"}