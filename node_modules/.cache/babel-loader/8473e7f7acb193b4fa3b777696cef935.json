{"ast":null,"code":"/* eslint-disable no-nested-ternary */\n/* eslint-disable no-case-declarations */\nimport types from '../actions/types';\nconst INITIAL_STATE = {\n  selectedRows: [],\n  sessionData: {},\n  getSessionsLoading: false,\n  createSessionLoading: false,\n  updateSessionLoading: false,\n  deleteSessionLoading: false,\n  plateAutoFill: [],\n  getPlateAutoFillLoading: false,\n  exportPlateLoading: false,\n  uploadPlateResultLoading: false,\n  uploadPlateResultProgress: 0,\n  sessionDetail: null,\n  getSessionDetailLoading: false,\n  updateSessionResultLoading: false,\n  sessionTestingLoading: false,\n  createAndUpdateResultLoading: false\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.SELECT_EXAMS:\n      const {\n        pageIndex\n      } = action.payload;\n      let result = [];\n      if (state.selectedRows.filter(r => r.pageIndex === pageIndex).length !== 0) {\n        result = state.selectedRows.map(r => r.pageIndex === pageIndex ? action.payload : r);\n      } else {\n        result = [...state.selectedRows, action.payload];\n      }\n      return {\n        ...state,\n        selectedRows: result\n      };\n    case types.CLEAR_EXAMS:\n      return {\n        ...state,\n        selectedRows: []\n      };\n    case types.GET_SESSIONS_REQUEST:\n      return {\n        ...state,\n        getSessionsLoading: true\n      };\n    case types.GET_SESSIONS_SUCCESS:\n      return {\n        ...state,\n        sessionData: action.payload,\n        getSessionsLoading: false\n      };\n    case types.GET_SESSIONS_FAILURE:\n      return {\n        ...state,\n        getSessionsLoading: false\n      };\n    case types.CREATE_SESSION_REQUEST:\n      return {\n        ...state,\n        createSessionLoading: true\n      };\n    case types.CREATE_SESSION_SUCCESS:\n    case types.CREATE_SESSION_FAILURE:\n      return {\n        ...state,\n        createSessionLoading: false\n      };\n    case types.UPDATE_SESSION_REQUEST:\n      return {\n        ...state,\n        updateSessionLoading: true\n      };\n    case types.UPDATE_SESSION_SUCCESS:\n    case types.UPDATE_SESSION_FAILURE:\n      return {\n        ...state,\n        updateSessionLoading: false\n      };\n    case types.DELETE_SESSION_REQUEST:\n      return {\n        ...state,\n        deleteSessionLoading: true\n      };\n    case types.DELETE_SESSION_SUCCESS:\n    case types.DELETE_SESSION_FAILURE:\n      return {\n        ...state,\n        deleteSessionLoading: false\n      };\n    case types.GET_PLATE_AUTO_FILL_REQUEST:\n      return {\n        ...state,\n        getPlateAutoFillLoading: true\n      };\n    case types.GET_PLATE_AUTO_FILL_SUCCESS:\n      return {\n        ...state,\n        plateAutoFill: action.payload,\n        getPlateAutoFillLoading: false\n      };\n    case types.GET_PLATE_AUTO_FILL_FAILURE:\n      return {\n        ...state,\n        getPlateAutoFillLoading: false\n      };\n    case types.GET_SESSION_DETAIL_REQUEST:\n      return {\n        ...state,\n        getSessionDetailLoading: true\n      };\n    case types.GET_SESSION_DETAIL_SUCCESS:\n      return {\n        ...state,\n        sessionDetail: action.payload,\n        getSessionDetailLoading: false\n      };\n    case types.GET_SESSION_DETAIL_FAILURE:\n      return {\n        ...state,\n        getSessionDetailLoading: false\n      };\n    case types.EXPORT_PLATE_REQUEST:\n      {\n        return {\n          ...state,\n          exportPlateLoading: true\n        };\n      }\n    case types.EXPORT_PLATE_SUCCESS:\n    case types.EXPORT_PLATE_FAILURE:\n      return {\n        ...state,\n        exportPlateLoading: false\n      };\n    case types.EXPORT_PLATE_RESULT_REQUEST:\n      {\n        return {\n          ...state,\n          exportPlateResultLoading: true\n        };\n      }\n    case types.EXPORT_PLATE_RESULT_SUCCESS:\n    case types.EXPORT_PLATE_RESULT_FAILURE:\n      return {\n        ...state,\n        exportPlateResultLoading: false\n      };\n    case types.SET_UPLOAD_PLATE_RESULT_PROGRESS:\n      {\n        return {\n          ...state,\n          uploadPlateResultProgress: action.payload\n        };\n      }\n    case types.UPLOAD_PLATE_RESULT_REQUEST:\n      return {\n        ...state,\n        uploadPlateResultLoading: true,\n        uploadPlateResultProgress: 0\n      };\n    case types.UPLOAD_PLATE_RESULT_SUCCESS:\n    case types.UPLOAD_PLATE_RESULT_FAILURE:\n      return {\n        ...state,\n        uploadPlateResultLoading: false\n      };\n    case types.UPDATE_SESSION_RESULT_REQUEST:\n      return {\n        ...state,\n        updateSessionResultLoading: true\n      };\n    case types.UPDATE_SESSION_RESULT_SUCCESS:\n    case types.UPDATE_SESSION_RESULT_FAILURE:\n      return {\n        ...state,\n        updateSessionResultLoading: false\n      };\n    case types.SESSION_TESTING_REQUEST:\n      return {\n        ...state,\n        sessionTestingLoading: true\n      };\n    case types.SESSION_TESTING_SUCCESS:\n    case types.SESSION_TESTING_FAILURE:\n      return {\n        ...state,\n        sessionTestingLoading: false\n      };\n    case types.CREATE_AND_UPDATE_RESULT_REQUEST:\n      return {\n        ...state,\n        createAndUpdateResultLoading: true\n      };\n    case types.CREATE_AND_UPDATE_RESULT_SUCCESS:\n    case types.CREATE_AND_UPDATE_RESULT_FAILURE:\n      return {\n        ...state,\n        createAndUpdateResultLoading: false\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["types","INITIAL_STATE","selectedRows","sessionData","getSessionsLoading","createSessionLoading","updateSessionLoading","deleteSessionLoading","plateAutoFill","getPlateAutoFillLoading","exportPlateLoading","uploadPlateResultLoading","uploadPlateResultProgress","sessionDetail","getSessionDetailLoading","updateSessionResultLoading","sessionTestingLoading","createAndUpdateResultLoading","state","arguments","length","undefined","action","type","SELECT_EXAMS","pageIndex","payload","result","filter","r","map","CLEAR_EXAMS","GET_SESSIONS_REQUEST","GET_SESSIONS_SUCCESS","GET_SESSIONS_FAILURE","CREATE_SESSION_REQUEST","CREATE_SESSION_SUCCESS","CREATE_SESSION_FAILURE","UPDATE_SESSION_REQUEST","UPDATE_SESSION_SUCCESS","UPDATE_SESSION_FAILURE","DELETE_SESSION_REQUEST","DELETE_SESSION_SUCCESS","DELETE_SESSION_FAILURE","GET_PLATE_AUTO_FILL_REQUEST","GET_PLATE_AUTO_FILL_SUCCESS","GET_PLATE_AUTO_FILL_FAILURE","GET_SESSION_DETAIL_REQUEST","GET_SESSION_DETAIL_SUCCESS","GET_SESSION_DETAIL_FAILURE","EXPORT_PLATE_REQUEST","EXPORT_PLATE_SUCCESS","EXPORT_PLATE_FAILURE","EXPORT_PLATE_RESULT_REQUEST","exportPlateResultLoading","EXPORT_PLATE_RESULT_SUCCESS","EXPORT_PLATE_RESULT_FAILURE","SET_UPLOAD_PLATE_RESULT_PROGRESS","UPLOAD_PLATE_RESULT_REQUEST","UPLOAD_PLATE_RESULT_SUCCESS","UPLOAD_PLATE_RESULT_FAILURE","UPDATE_SESSION_RESULT_REQUEST","UPDATE_SESSION_RESULT_SUCCESS","UPDATE_SESSION_RESULT_FAILURE","SESSION_TESTING_REQUEST","SESSION_TESTING_SUCCESS","SESSION_TESTING_FAILURE","CREATE_AND_UPDATE_RESULT_REQUEST","CREATE_AND_UPDATE_RESULT_SUCCESS","CREATE_AND_UPDATE_RESULT_FAILURE"],"sources":["H:/BAKCO/pj/data reconciliation/src/medical-test/reducers/session.js"],"sourcesContent":["/* eslint-disable no-nested-ternary */\n/* eslint-disable no-case-declarations */\nimport types from '../actions/types';\n\nconst INITIAL_STATE = {\n  selectedRows: [],\n  sessionData: {},\n  getSessionsLoading: false,\n  createSessionLoading: false,\n  updateSessionLoading: false,\n  deleteSessionLoading: false,\n  plateAutoFill: [],\n  getPlateAutoFillLoading: false,\n  exportPlateLoading: false,\n  uploadPlateResultLoading: false,\n  uploadPlateResultProgress: 0,\n  sessionDetail: null,\n  getSessionDetailLoading: false,\n  updateSessionResultLoading: false,\n  sessionTestingLoading: false,\n  createAndUpdateResultLoading: false,\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case types.SELECT_EXAMS:\n      const { pageIndex } = action.payload;\n      let result = [];\n      if (\n        state.selectedRows.filter((r) => r.pageIndex === pageIndex).length !== 0\n      ) {\n        result = state.selectedRows.map((r) =>\n          r.pageIndex === pageIndex ? action.payload : r,\n        );\n      } else {\n        result = [...state.selectedRows, action.payload];\n      }\n      return {\n        ...state,\n        selectedRows: result,\n      };\n    case types.CLEAR_EXAMS:\n      return {\n        ...state,\n        selectedRows: [],\n      };\n    case types.GET_SESSIONS_REQUEST:\n      return {\n        ...state,\n        getSessionsLoading: true,\n      };\n    case types.GET_SESSIONS_SUCCESS:\n      return {\n        ...state,\n        sessionData: action.payload,\n        getSessionsLoading: false,\n      };\n    case types.GET_SESSIONS_FAILURE:\n      return {\n        ...state,\n        getSessionsLoading: false,\n      };\n    case types.CREATE_SESSION_REQUEST:\n      return {\n        ...state,\n        createSessionLoading: true,\n      };\n    case types.CREATE_SESSION_SUCCESS:\n    case types.CREATE_SESSION_FAILURE:\n      return {\n        ...state,\n        createSessionLoading: false,\n      };\n    case types.UPDATE_SESSION_REQUEST:\n      return {\n        ...state,\n        updateSessionLoading: true,\n      };\n    case types.UPDATE_SESSION_SUCCESS:\n    case types.UPDATE_SESSION_FAILURE:\n      return {\n        ...state,\n        updateSessionLoading: false,\n      };\n    case types.DELETE_SESSION_REQUEST:\n      return {\n        ...state,\n        deleteSessionLoading: true,\n      };\n    case types.DELETE_SESSION_SUCCESS:\n    case types.DELETE_SESSION_FAILURE:\n      return {\n        ...state,\n        deleteSessionLoading: false,\n      };\n    case types.GET_PLATE_AUTO_FILL_REQUEST:\n      return {\n        ...state,\n        getPlateAutoFillLoading: true,\n      };\n    case types.GET_PLATE_AUTO_FILL_SUCCESS:\n      return {\n        ...state,\n        plateAutoFill: action.payload,\n        getPlateAutoFillLoading: false,\n      };\n    case types.GET_PLATE_AUTO_FILL_FAILURE:\n      return {\n        ...state,\n        getPlateAutoFillLoading: false,\n      };\n    case types.GET_SESSION_DETAIL_REQUEST:\n      return {\n        ...state,\n        getSessionDetailLoading: true,\n      };\n    case types.GET_SESSION_DETAIL_SUCCESS:\n      return {\n        ...state,\n        sessionDetail: action.payload,\n        getSessionDetailLoading: false,\n      };\n    case types.GET_SESSION_DETAIL_FAILURE:\n      return {\n        ...state,\n        getSessionDetailLoading: false,\n      };\n    case types.EXPORT_PLATE_REQUEST: {\n      return {\n        ...state,\n        exportPlateLoading: true,\n      };\n    }\n    case types.EXPORT_PLATE_SUCCESS:\n    case types.EXPORT_PLATE_FAILURE:\n      return {\n        ...state,\n        exportPlateLoading: false,\n      };\n    case types.EXPORT_PLATE_RESULT_REQUEST: {\n      return {\n        ...state,\n        exportPlateResultLoading: true,\n      };\n    }\n    case types.EXPORT_PLATE_RESULT_SUCCESS:\n    case types.EXPORT_PLATE_RESULT_FAILURE:\n      return {\n        ...state,\n        exportPlateResultLoading: false,\n      };\n    case types.SET_UPLOAD_PLATE_RESULT_PROGRESS: {\n      return {\n        ...state,\n        uploadPlateResultProgress: action.payload,\n      };\n    }\n    case types.UPLOAD_PLATE_RESULT_REQUEST:\n      return {\n        ...state,\n        uploadPlateResultLoading: true,\n        uploadPlateResultProgress: 0,\n      };\n    case types.UPLOAD_PLATE_RESULT_SUCCESS:\n    case types.UPLOAD_PLATE_RESULT_FAILURE:\n      return {\n        ...state,\n        uploadPlateResultLoading: false,\n      };\n    case types.UPDATE_SESSION_RESULT_REQUEST:\n      return {\n        ...state,\n        updateSessionResultLoading: true,\n      };\n    case types.UPDATE_SESSION_RESULT_SUCCESS:\n    case types.UPDATE_SESSION_RESULT_FAILURE:\n      return {\n        ...state,\n        updateSessionResultLoading: false,\n      };\n    case types.SESSION_TESTING_REQUEST:\n      return {\n        ...state,\n        sessionTestingLoading: true,\n      };\n    case types.SESSION_TESTING_SUCCESS:\n    case types.SESSION_TESTING_FAILURE:\n      return {\n        ...state,\n        sessionTestingLoading: false,\n      };\n    case types.CREATE_AND_UPDATE_RESULT_REQUEST:\n      return {\n        ...state,\n        createAndUpdateResultLoading: true,\n      };\n    case types.CREATE_AND_UPDATE_RESULT_SUCCESS:\n    case types.CREATE_AND_UPDATE_RESULT_FAILURE:\n      return {\n        ...state,\n        createAndUpdateResultLoading: false,\n      };\n    default:\n      return state;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,kBAAkB;AAEpC,MAAMC,aAAa,GAAG;EACpBC,YAAY,EAAE,EAAE;EAChBC,WAAW,EAAE,CAAC,CAAC;EACfC,kBAAkB,EAAE,KAAK;EACzBC,oBAAoB,EAAE,KAAK;EAC3BC,oBAAoB,EAAE,KAAK;EAC3BC,oBAAoB,EAAE,KAAK;EAC3BC,aAAa,EAAE,EAAE;EACjBC,uBAAuB,EAAE,KAAK;EAC9BC,kBAAkB,EAAE,KAAK;EACzBC,wBAAwB,EAAE,KAAK;EAC/BC,yBAAyB,EAAE,CAAC;EAC5BC,aAAa,EAAE,IAAI;EACnBC,uBAAuB,EAAE,KAAK;EAC9BC,0BAA0B,EAAE,KAAK;EACjCC,qBAAqB,EAAE,KAAK;EAC5BC,4BAA4B,EAAE;AAChC,CAAC;AAED,eAAe,YAAyC;EAAA,IAA/BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGlB,aAAa;EAAA,IAAEqB,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKvB,KAAK,CAACwB,YAAY;MACrB,MAAM;QAAEC;MAAU,CAAC,GAAGH,MAAM,CAACI,OAAO;MACpC,IAAIC,MAAM,GAAG,EAAE;MACf,IACET,KAAK,CAAChB,YAAY,CAAC0B,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACJ,SAAS,KAAKA,SAAS,CAAC,CAACL,MAAM,KAAK,CAAC,EACxE;QACAO,MAAM,GAAGT,KAAK,CAAChB,YAAY,CAAC4B,GAAG,CAAED,CAAC,IAChCA,CAAC,CAACJ,SAAS,KAAKA,SAAS,GAAGH,MAAM,CAACI,OAAO,GAAGG,CAAC,CAC/C;MACH,CAAC,MAAM;QACLF,MAAM,GAAG,CAAC,GAAGT,KAAK,CAAChB,YAAY,EAAEoB,MAAM,CAACI,OAAO,CAAC;MAClD;MACA,OAAO;QACL,GAAGR,KAAK;QACRhB,YAAY,EAAEyB;MAChB,CAAC;IACH,KAAK3B,KAAK,CAAC+B,WAAW;MACpB,OAAO;QACL,GAAGb,KAAK;QACRhB,YAAY,EAAE;MAChB,CAAC;IACH,KAAKF,KAAK,CAACgC,oBAAoB;MAC7B,OAAO;QACL,GAAGd,KAAK;QACRd,kBAAkB,EAAE;MACtB,CAAC;IACH,KAAKJ,KAAK,CAACiC,oBAAoB;MAC7B,OAAO;QACL,GAAGf,KAAK;QACRf,WAAW,EAAEmB,MAAM,CAACI,OAAO;QAC3BtB,kBAAkB,EAAE;MACtB,CAAC;IACH,KAAKJ,KAAK,CAACkC,oBAAoB;MAC7B,OAAO;QACL,GAAGhB,KAAK;QACRd,kBAAkB,EAAE;MACtB,CAAC;IACH,KAAKJ,KAAK,CAACmC,sBAAsB;MAC/B,OAAO;QACL,GAAGjB,KAAK;QACRb,oBAAoB,EAAE;MACxB,CAAC;IACH,KAAKL,KAAK,CAACoC,sBAAsB;IACjC,KAAKpC,KAAK,CAACqC,sBAAsB;MAC/B,OAAO;QACL,GAAGnB,KAAK;QACRb,oBAAoB,EAAE;MACxB,CAAC;IACH,KAAKL,KAAK,CAACsC,sBAAsB;MAC/B,OAAO;QACL,GAAGpB,KAAK;QACRZ,oBAAoB,EAAE;MACxB,CAAC;IACH,KAAKN,KAAK,CAACuC,sBAAsB;IACjC,KAAKvC,KAAK,CAACwC,sBAAsB;MAC/B,OAAO;QACL,GAAGtB,KAAK;QACRZ,oBAAoB,EAAE;MACxB,CAAC;IACH,KAAKN,KAAK,CAACyC,sBAAsB;MAC/B,OAAO;QACL,GAAGvB,KAAK;QACRX,oBAAoB,EAAE;MACxB,CAAC;IACH,KAAKP,KAAK,CAAC0C,sBAAsB;IACjC,KAAK1C,KAAK,CAAC2C,sBAAsB;MAC/B,OAAO;QACL,GAAGzB,KAAK;QACRX,oBAAoB,EAAE;MACxB,CAAC;IACH,KAAKP,KAAK,CAAC4C,2BAA2B;MACpC,OAAO;QACL,GAAG1B,KAAK;QACRT,uBAAuB,EAAE;MAC3B,CAAC;IACH,KAAKT,KAAK,CAAC6C,2BAA2B;MACpC,OAAO;QACL,GAAG3B,KAAK;QACRV,aAAa,EAAEc,MAAM,CAACI,OAAO;QAC7BjB,uBAAuB,EAAE;MAC3B,CAAC;IACH,KAAKT,KAAK,CAAC8C,2BAA2B;MACpC,OAAO;QACL,GAAG5B,KAAK;QACRT,uBAAuB,EAAE;MAC3B,CAAC;IACH,KAAKT,KAAK,CAAC+C,0BAA0B;MACnC,OAAO;QACL,GAAG7B,KAAK;QACRJ,uBAAuB,EAAE;MAC3B,CAAC;IACH,KAAKd,KAAK,CAACgD,0BAA0B;MACnC,OAAO;QACL,GAAG9B,KAAK;QACRL,aAAa,EAAES,MAAM,CAACI,OAAO;QAC7BZ,uBAAuB,EAAE;MAC3B,CAAC;IACH,KAAKd,KAAK,CAACiD,0BAA0B;MACnC,OAAO;QACL,GAAG/B,KAAK;QACRJ,uBAAuB,EAAE;MAC3B,CAAC;IACH,KAAKd,KAAK,CAACkD,oBAAoB;MAAE;QAC/B,OAAO;UACL,GAAGhC,KAAK;UACRR,kBAAkB,EAAE;QACtB,CAAC;MACH;IACA,KAAKV,KAAK,CAACmD,oBAAoB;IAC/B,KAAKnD,KAAK,CAACoD,oBAAoB;MAC7B,OAAO;QACL,GAAGlC,KAAK;QACRR,kBAAkB,EAAE;MACtB,CAAC;IACH,KAAKV,KAAK,CAACqD,2BAA2B;MAAE;QACtC,OAAO;UACL,GAAGnC,KAAK;UACRoC,wBAAwB,EAAE;QAC5B,CAAC;MACH;IACA,KAAKtD,KAAK,CAACuD,2BAA2B;IACtC,KAAKvD,KAAK,CAACwD,2BAA2B;MACpC,OAAO;QACL,GAAGtC,KAAK;QACRoC,wBAAwB,EAAE;MAC5B,CAAC;IACH,KAAKtD,KAAK,CAACyD,gCAAgC;MAAE;QAC3C,OAAO;UACL,GAAGvC,KAAK;UACRN,yBAAyB,EAAEU,MAAM,CAACI;QACpC,CAAC;MACH;IACA,KAAK1B,KAAK,CAAC0D,2BAA2B;MACpC,OAAO;QACL,GAAGxC,KAAK;QACRP,wBAAwB,EAAE,IAAI;QAC9BC,yBAAyB,EAAE;MAC7B,CAAC;IACH,KAAKZ,KAAK,CAAC2D,2BAA2B;IACtC,KAAK3D,KAAK,CAAC4D,2BAA2B;MACpC,OAAO;QACL,GAAG1C,KAAK;QACRP,wBAAwB,EAAE;MAC5B,CAAC;IACH,KAAKX,KAAK,CAAC6D,6BAA6B;MACtC,OAAO;QACL,GAAG3C,KAAK;QACRH,0BAA0B,EAAE;MAC9B,CAAC;IACH,KAAKf,KAAK,CAAC8D,6BAA6B;IACxC,KAAK9D,KAAK,CAAC+D,6BAA6B;MACtC,OAAO;QACL,GAAG7C,KAAK;QACRH,0BAA0B,EAAE;MAC9B,CAAC;IACH,KAAKf,KAAK,CAACgE,uBAAuB;MAChC,OAAO;QACL,GAAG9C,KAAK;QACRF,qBAAqB,EAAE;MACzB,CAAC;IACH,KAAKhB,KAAK,CAACiE,uBAAuB;IAClC,KAAKjE,KAAK,CAACkE,uBAAuB;MAChC,OAAO;QACL,GAAGhD,KAAK;QACRF,qBAAqB,EAAE;MACzB,CAAC;IACH,KAAKhB,KAAK,CAACmE,gCAAgC;MACzC,OAAO;QACL,GAAGjD,KAAK;QACRD,4BAA4B,EAAE;MAChC,CAAC;IACH,KAAKjB,KAAK,CAACoE,gCAAgC;IAC3C,KAAKpE,KAAK,CAACqE,gCAAgC;MACzC,OAAO;QACL,GAAGnD,KAAK;QACRD,4BAA4B,EAAE;MAChC,CAAC;IACH;MACE,OAAOC,KAAK;EAAC;AAEnB"},"metadata":{},"sourceType":"module"}