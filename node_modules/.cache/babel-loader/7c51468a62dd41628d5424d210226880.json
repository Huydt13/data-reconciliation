{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\infection-chain\\\\components\\\\subject\\\\information\\\\form-sections\\\\MinimizeGeneralInformation.js\";\n/* eslint-disable no-nested-ternary */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfile, updateProfile } from 'profile/actions/profile';\nimport locations from 'app/assets/mock/locations.json';\nimport { formatToDate, formatToYear } from 'app/utils/helpers';\nimport EditableLabel from 'app/components/shared/EditableLabel';\nconst Wrapper = styled.div`\n  margin-top: 12px;\n`;\nconst Flex = styled.div`\n  display: flex;\n`;\nconst genderOptions = [{\n  text: 'Nam',\n  value: 1\n}, {\n  text: 'Nữ',\n  value: 0\n}, {\n  text: 'Khác',\n  value: 2\n}];\nconst MinimizeGeneralInformation = _ref => {\n  var _locations$find, _locations$find2, _locations$find2$dist;\n  let {\n    data,\n    disabled\n  } = _ref;\n  const {\n    fullName,\n    cmnd,\n    phoneNumber,\n    gender,\n    cccd,\n    passportNumber,\n    healthInsuranceNumber,\n    dateOfBirth,\n    hasYearOfBirthOnly,\n    addressesInVietnam\n  } = data;\n  const [selectingKey, setSelectingKey] = useState(undefined);\n  const address = addressesInVietnam[0] || MinimizeGeneralInformation.defaultProps.data.addressesInVietnam[0];\n  const generalLabels = [{\n    rowIndex: 0,\n    col: [{\n      name: 'fullName',\n      label: 'Họ và tên:',\n      value: fullName === null || fullName === void 0 ? void 0 : fullName.toUpperCase(),\n      maxLength: 50,\n      required: true,\n      disabled\n    }, {\n      name: 'dateOfBirth',\n      label: hasYearOfBirthOnly ? 'Năm sinh' : 'Ngày sinh',\n      value: hasYearOfBirthOnly ? formatToYear(dateOfBirth) : formatToDate(dateOfBirth),\n      description: hasYearOfBirthOnly,\n      required: true,\n      disabled\n    }, {\n      name: 'gender',\n      type: 'select',\n      label: 'Giới tính:',\n      value: gender,\n      dropdownOptions: genderOptions,\n      disabled\n    }, {\n      name: 'phoneNumber',\n      label: 'Số điện thoại:',\n      value: phoneNumber,\n      required: true,\n      disabled\n    }]\n  }, {\n    rowIndex: 1,\n    col: [{\n      name: 'cccd',\n      label: 'Căn cước công dân:',\n      value: cccd,\n      randomable: true,\n      disabled\n    }, {\n      name: 'cmnd',\n      label: 'Chứng minh nhân dân:',\n      value: cmnd,\n      randomable: true,\n      disabled\n    }, {\n      name: 'passportNumber',\n      label: 'Hộ chiếu:',\n      value: passportNumber,\n      randomable: true,\n      disabled\n    }, {\n      name: 'healthInsuranceNumber',\n      label: 'Bảo hiểm y tế:',\n      value: healthInsuranceNumber,\n      randomable: true,\n      disabled\n    }]\n  }];\n  const addressLabels = [{\n    rowIndex: 1,\n    col: [{\n      name: 'locationType',\n      label: 'Loại hình:',\n      value: address.locationType,\n      disabled\n    }, {\n      name: 'name',\n      label: 'Tên địa điểm:',\n      value: address.name,\n      disabled\n    }]\n  }, {\n    rowIndex: 2,\n    col: [{\n      name: 'provinceValue',\n      type: 'select',\n      dropdownOptions: locations.map(p => ({\n        value: p.value,\n        text: p.label\n      })),\n      label: 'Tỉnh/Thành:',\n      value: address.provinceValue,\n      disabled\n    }, {\n      name: 'districtValue',\n      type: 'select',\n      dropdownOptions: address.provinceValue ? locations === null || locations === void 0 ? void 0 : (_locations$find = locations.find(p => p.value === address.provinceValue)) === null || _locations$find === void 0 ? void 0 : _locations$find.districts.map(p => ({\n        value: p.value,\n        text: p.label\n      })) : [],\n      label: 'Quận/Huyện:',\n      value: address.districtValue,\n      disabled\n    }, {\n      name: 'wardValue',\n      type: 'select',\n      dropdownOptions: address.districtValue ? locations === null || locations === void 0 ? void 0 : (_locations$find2 = locations.find(p => p.value === address.provinceValue)) === null || _locations$find2 === void 0 ? void 0 : (_locations$find2$dist = _locations$find2.districts.find(d => d.value === address.districtValue)) === null || _locations$find2$dist === void 0 ? void 0 : _locations$find2$dist.wards.map(p => ({\n        value: p.value,\n        text: p.label\n      })) : [],\n      label: 'Phường/Xã:',\n      value: address.wardValue,\n      disabled\n    }, {\n      name: 'streetHouseNumber',\n      label: 'Địa chỉ:',\n      value: address.streetHouseNumber,\n      required: true,\n      disabled\n    }]\n  }, {\n    rowIndex: 3,\n    col: [{\n      name: 'quarter',\n      label: 'Thôn/Ấp/Khu phố:',\n      value: address.quarter,\n      disabled\n    }, {\n      name: 'quarterGroup',\n      label: 'Tổ dân phố:',\n      value: address.quarterGroup,\n      disabled\n    }, {\n      name: 'block',\n      label: 'Khu, lô:',\n      value: address.block,\n      disabled\n    }, {\n      name: 'floor',\n      label: 'Tầng:',\n      value: address.floor,\n      disabled\n    }, {\n      name: 'room',\n      label: 'Phòng:',\n      value: address.room,\n      disabled\n    }]\n  }];\n  const dispatch = useDispatch();\n  const getProfileLoading = useSelector(s => s.profile.getProfileLoading);\n  const updateProfileLoading = useSelector(s => s.profile.updateProfileLoading);\n  const handleUpdateProfile = async (_ref2, isYear) => {\n    let {\n      name,\n      data: d\n    } = _ref2;\n    try {\n      await dispatch(updateProfile({\n        ...data,\n        [name]: name === 'dateOfBirth' && (isYear || !d.includes('-')) ? `${d}-01-01` : d,\n        hasYearOfBirthOnly: Boolean(isYear)\n      }));\n    } catch (e) {\n      toast.warn(e);\n    }\n    await dispatch(getProfile(data.id));\n  };\n  const handleUpdateAddress = async _ref3 => {\n    let {\n      name,\n      data: d\n    } = _ref3;\n    try {\n      await dispatch(updateProfile({\n        ...data,\n        addressesInVietnam: [{\n          ...data.addressesInVietnam[0],\n          [name]: d\n        }]\n      }));\n    } catch (e) {\n      toast.warn(e);\n    }\n    await dispatch(getProfile(data.id));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, \"Th\\xF4ng tin chung:\"), generalLabels.map(r => /*#__PURE__*/React.createElement(Flex, {\n    key: r.rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }\n  }, r.col.map(f => /*#__PURE__*/React.createElement(EditableLabel\n  // style props\n  , {\n    key: f.name,\n    color: f.color,\n    header: f.label,\n    content: f.value,\n    description: f === null || f === void 0 ? void 0 : f.description,\n    maxLength: f === null || f === void 0 ? void 0 : f.maxLength\n    // logic props\n    ,\n    name: f.name,\n    disabled: f === null || f === void 0 ? void 0 : f.disabled,\n    type: f === null || f === void 0 ? void 0 : f.type,\n    randomable: f === null || f === void 0 ? void 0 : f.randomable,\n    loading: getProfileLoading || updateProfileLoading,\n    dropdownOptions: f === null || f === void 0 ? void 0 : f.dropdownOptions,\n    selectingKey: selectingKey,\n    setSelectingKey: setSelectingKey,\n    onChange: (d, isYear) => handleUpdateProfile({\n      name: f.name,\n      data: d\n    }, isYear)\n    // validate props\n    ,\n    required: f === null || f === void 0 ? void 0 : f.required,\n    validate: f === null || f === void 0 ? void 0 : f.validate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 9\n    }\n  }, \"\\u0110\\u1ECBa ch\\u1EC9 nh\\xE0:\")), addressLabels.map(r => /*#__PURE__*/React.createElement(Flex, {\n    key: r.rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, r.col.map(f => /*#__PURE__*/React.createElement(EditableLabel\n  // style props\n  , {\n    key: f.name,\n    color: f.color,\n    header: f.label,\n    content: f.value,\n    maxLength: f === null || f === void 0 ? void 0 : f.maxLength\n    // logic props\n    ,\n    name: f.name,\n    type: f === null || f === void 0 ? void 0 : f.type,\n    disabled: f === null || f === void 0 ? void 0 : f.disabled,\n    loading: getProfileLoading || updateProfileLoading,\n    dropdownOptions: f === null || f === void 0 ? void 0 : f.dropdownOptions,\n    selectingKey: selectingKey,\n    setSelectingKey: setSelectingKey,\n    onChange: d => handleUpdateAddress({\n      name: f.name,\n      data: d\n    })\n    // validate props\n    ,\n    required: f === null || f === void 0 ? void 0 : f.required,\n    validate: f === null || f === void 0 ? void 0 : f.validate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  })))));\n};\nMinimizeGeneralInformation.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  data: PropTypes.shape({\n    id: PropTypes.number,\n    cccd: PropTypes.string,\n    cmnd: PropTypes.string,\n    healthInsuranceNumber: PropTypes.string,\n    code: PropTypes.string,\n    privateAlias: PropTypes.string,\n    alias: PropTypes.string,\n    fullName: PropTypes.string,\n    nationality: PropTypes.string,\n    gender: PropTypes.number,\n    email: PropTypes.string,\n    passportNumber: PropTypes.string,\n    phoneNumber: PropTypes.string,\n    dateOfBirth: PropTypes.string,\n    religion: PropTypes.string,\n    job: PropTypes.string,\n    hasYearOfBirthOnly: PropTypes.bool,\n    addressesInVietnam: PropTypes.arrayOf(PropTypes.shape({\n      block: PropTypes.string,\n      districtValue: PropTypes.string,\n      floor: PropTypes.string,\n      guid: PropTypes.string,\n      locationType: PropTypes.string,\n      name: PropTypes.string,\n      provinceValue: PropTypes.string,\n      quarter: PropTypes.string,\n      quarterGroup: PropTypes.string,\n      room: PropTypes.string,\n      streetHouseNumber: PropTypes.string,\n      wardValue: PropTypes.string\n    }))\n  })\n};\nMinimizeGeneralInformation.defaultProps = {\n  data: {\n    id: 0,\n    addressesInVietnam: [{\n      block: '',\n      districtValue: '',\n      floor: '',\n      guid: '',\n      locationType: '',\n      name: '',\n      provinceValue: '',\n      quarter: '',\n      quarterGroup: '',\n      room: '',\n      streetHouseNumber: '',\n      wardValue: ''\n    }]\n  }\n};\nexport default MinimizeGeneralInformation;","map":{"version":3,"names":["React","useState","PropTypes","styled","toast","useDispatch","useSelector","getProfile","updateProfile","locations","formatToDate","formatToYear","EditableLabel","Wrapper","div","Flex","genderOptions","text","value","MinimizeGeneralInformation","_ref","_locations$find","_locations$find2","_locations$find2$dist","data","disabled","fullName","cmnd","phoneNumber","gender","cccd","passportNumber","healthInsuranceNumber","dateOfBirth","hasYearOfBirthOnly","addressesInVietnam","selectingKey","setSelectingKey","undefined","address","defaultProps","generalLabels","rowIndex","col","name","label","toUpperCase","maxLength","required","description","type","dropdownOptions","randomable","addressLabels","locationType","map","p","provinceValue","find","districts","districtValue","d","wards","wardValue","streetHouseNumber","quarter","quarterGroup","block","floor","room","dispatch","getProfileLoading","s","profile","updateProfileLoading","handleUpdateProfile","_ref2","isYear","includes","Boolean","e","warn","id","handleUpdateAddress","_ref3","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","r","key","f","color","header","content","loading","onChange","validate","propTypes","bool","isRequired","shape","number","string","code","privateAlias","alias","nationality","email","religion","job","arrayOf","guid"],"sources":["H:/BAKCO/pj/data reconciliation/src/infection-chain/components/subject/information/form-sections/MinimizeGeneralInformation.js"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfile, updateProfile } from 'profile/actions/profile';\n\nimport locations from 'app/assets/mock/locations.json';\nimport { formatToDate, formatToYear } from 'app/utils/helpers';\n\nimport EditableLabel from 'app/components/shared/EditableLabel';\n\nconst Wrapper = styled.div`\n  margin-top: 12px;\n`;\nconst Flex = styled.div`\n  display: flex;\n`;\n\nconst genderOptions = [\n  { text: 'Nam', value: 1 },\n  { text: 'Nữ', value: 0 },\n  { text: 'Khác', value: 2 },\n];\n\nconst MinimizeGeneralInformation = ({ data, disabled }) => {\n  const {\n    fullName,\n    cmnd,\n    phoneNumber,\n    gender,\n    cccd,\n    passportNumber,\n    healthInsuranceNumber,\n    dateOfBirth,\n    hasYearOfBirthOnly,\n    addressesInVietnam,\n  } = data;\n\n  const [selectingKey, setSelectingKey] = useState(undefined);\n\n  const address =\n    addressesInVietnam[0] ||\n    MinimizeGeneralInformation.defaultProps.data.addressesInVietnam[0];\n\n  const generalLabels = [\n    {\n      rowIndex: 0,\n      col: [\n        {\n          name: 'fullName',\n          label: 'Họ và tên:',\n          value: fullName?.toUpperCase(),\n          maxLength: 50,\n          required: true,\n          disabled,\n        },\n        {\n          name: 'dateOfBirth',\n          label: hasYearOfBirthOnly ? 'Năm sinh' : 'Ngày sinh',\n          value: hasYearOfBirthOnly\n            ? formatToYear(dateOfBirth)\n            : formatToDate(dateOfBirth),\n          description: hasYearOfBirthOnly,\n          required: true,\n          disabled,\n        },\n        {\n          name: 'gender',\n          type: 'select',\n          label: 'Giới tính:',\n          value: gender,\n          dropdownOptions: genderOptions,\n          disabled,\n        },\n        {\n          name: 'phoneNumber',\n          label: 'Số điện thoại:',\n          value: phoneNumber,\n          required: true,\n          disabled,\n        },\n      ],\n    },\n    {\n      rowIndex: 1,\n      col: [\n        {\n          name: 'cccd',\n          label: 'Căn cước công dân:',\n          value: cccd,\n          randomable: true,\n          disabled,\n        },\n        {\n          name: 'cmnd',\n          label: 'Chứng minh nhân dân:',\n          value: cmnd,\n          randomable: true,\n          disabled,\n        },\n        {\n          name: 'passportNumber',\n          label: 'Hộ chiếu:',\n          value: passportNumber,\n          randomable: true,\n          disabled,\n        },\n        {\n          name: 'healthInsuranceNumber',\n          label: 'Bảo hiểm y tế:',\n          value: healthInsuranceNumber,\n          randomable: true,\n          disabled,\n        },\n      ],\n    },\n  ];\n\n  const addressLabels = [\n    {\n      rowIndex: 1,\n      col: [\n        {\n          name: 'locationType',\n          label: 'Loại hình:',\n          value: address.locationType,\n          disabled,\n        },\n        { name: 'name', label: 'Tên địa điểm:', value: address.name, disabled },\n      ],\n    },\n    {\n      rowIndex: 2,\n      col: [\n        {\n          name: 'provinceValue',\n          type: 'select',\n          dropdownOptions: locations.map((p) => ({\n            value: p.value,\n            text: p.label,\n          })),\n          label: 'Tỉnh/Thành:',\n          value: address.provinceValue,\n          disabled,\n        },\n        {\n          name: 'districtValue',\n          type: 'select',\n          dropdownOptions: address.provinceValue\n            ? locations\n              ?.find((p) => p.value === address.provinceValue)\n              ?.districts.map((p) => ({\n                value: p.value,\n                text: p.label,\n              }))\n            : [],\n          label: 'Quận/Huyện:',\n          value: address.districtValue,\n          disabled,\n        },\n        {\n          name: 'wardValue',\n          type: 'select',\n          dropdownOptions: address.districtValue\n            ? locations\n              ?.find((p) => p.value === address.provinceValue)\n              ?.districts.find((d) => d.value === address.districtValue)\n              ?.wards.map((p) => ({\n                value: p.value,\n                text: p.label,\n              }))\n            : [],\n          label: 'Phường/Xã:',\n          value: address.wardValue,\n          disabled,\n        },\n        {\n          name: 'streetHouseNumber',\n          label: 'Địa chỉ:',\n          value: address.streetHouseNumber,\n          required: true,\n          disabled,\n        },\n      ],\n    },\n    {\n      rowIndex: 3,\n      col: [\n        {\n          name: 'quarter',\n          label: 'Thôn/Ấp/Khu phố:',\n          value: address.quarter,\n          disabled,\n        },\n        {\n          name: 'quarterGroup',\n          label: 'Tổ dân phố:',\n          value: address.quarterGroup,\n          disabled,\n        },\n        { name: 'block', label: 'Khu, lô:', value: address.block, disabled },\n        { name: 'floor', label: 'Tầng:', value: address.floor, disabled },\n        { name: 'room', label: 'Phòng:', value: address.room, disabled },\n      ],\n    },\n  ];\n\n  const dispatch = useDispatch();\n  const getProfileLoading = useSelector((s) => s.profile.getProfileLoading);\n  const updateProfileLoading = useSelector(\n    (s) => s.profile.updateProfileLoading,\n  );\n  const handleUpdateProfile = async ({ name, data: d }, isYear) => {\n    try {\n      await dispatch(\n        updateProfile({\n          ...data,\n          [name]:\n            name === 'dateOfBirth' && (isYear || !d.includes('-'))\n              ? `${d}-01-01`\n              : d,\n          hasYearOfBirthOnly: Boolean(isYear),\n        }),\n      );\n    } catch (e) {\n      toast.warn(e);\n    }\n    await dispatch(getProfile(data.id));\n  };\n  const handleUpdateAddress = async ({ name, data: d }) => {\n    try {\n      await dispatch(\n        updateProfile({\n          ...data,\n          addressesInVietnam: [{ ...data.addressesInVietnam[0], [name]: d }],\n        }),\n      );\n    } catch (e) {\n      toast.warn(e);\n    }\n    await dispatch(getProfile(data.id));\n  };\n\n  return (\n    <>\n      <span>Thông tin chung:</span>\n      {generalLabels.map((r) => (\n        <Flex key={r.rowIndex}>\n          {r.col.map((f) => (\n            <EditableLabel\n              // style props\n              key={f.name}\n              color={f.color}\n              header={f.label}\n              content={f.value}\n              description={f?.description}\n              maxLength={f?.maxLength}\n              // logic props\n              name={f.name}\n              disabled={f?.disabled}\n              type={f?.type}\n              randomable={f?.randomable}\n              loading={getProfileLoading || updateProfileLoading}\n              dropdownOptions={f?.dropdownOptions}\n              selectingKey={selectingKey}\n              setSelectingKey={setSelectingKey}\n              onChange={(d, isYear) =>\n                handleUpdateProfile({ name: f.name, data: d }, isYear)\n              }\n              // validate props\n              required={f?.required}\n              validate={f?.validate}\n            />\n          ))}\n        </Flex>\n      ))}\n\n      <Wrapper>\n        <span>Địa chỉ nhà:</span>\n      </Wrapper>\n      {addressLabels.map((r) => (\n        <Flex key={r.rowIndex}>\n          {r.col.map((f) => (\n            <EditableLabel\n              // style props\n              key={f.name}\n              color={f.color}\n              header={f.label}\n              content={f.value}\n              maxLength={f?.maxLength}\n              // logic props\n              name={f.name}\n              type={f?.type}\n              disabled={f?.disabled}\n              loading={getProfileLoading || updateProfileLoading}\n              dropdownOptions={f?.dropdownOptions}\n              selectingKey={selectingKey}\n              setSelectingKey={setSelectingKey}\n              onChange={(d) => handleUpdateAddress({ name: f.name, data: d })}\n              // validate props\n              required={f?.required}\n              validate={f?.validate}\n            />\n          ))}\n        </Flex>\n      ))}\n    </>\n  );\n};\n\nMinimizeGeneralInformation.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  data: PropTypes.shape({\n    id: PropTypes.number,\n    cccd: PropTypes.string,\n    cmnd: PropTypes.string,\n    healthInsuranceNumber: PropTypes.string,\n    code: PropTypes.string,\n    privateAlias: PropTypes.string,\n    alias: PropTypes.string,\n    fullName: PropTypes.string,\n    nationality: PropTypes.string,\n    gender: PropTypes.number,\n    email: PropTypes.string,\n    passportNumber: PropTypes.string,\n    phoneNumber: PropTypes.string,\n    dateOfBirth: PropTypes.string,\n    religion: PropTypes.string,\n    job: PropTypes.string,\n    hasYearOfBirthOnly: PropTypes.bool,\n    addressesInVietnam: PropTypes.arrayOf(\n      PropTypes.shape({\n        block: PropTypes.string,\n        districtValue: PropTypes.string,\n        floor: PropTypes.string,\n        guid: PropTypes.string,\n        locationType: PropTypes.string,\n        name: PropTypes.string,\n        provinceValue: PropTypes.string,\n        quarter: PropTypes.string,\n        quarterGroup: PropTypes.string,\n        room: PropTypes.string,\n        streetHouseNumber: PropTypes.string,\n        wardValue: PropTypes.string,\n      }),\n    ),\n  }),\n};\n\nMinimizeGeneralInformation.defaultProps = {\n  data: {\n    id: 0,\n    addressesInVietnam: [\n      {\n        block: '',\n        districtValue: '',\n        floor: '',\n        guid: '',\n        locationType: '',\n        name: '',\n        provinceValue: '',\n        quarter: '',\n        quarterGroup: '',\n        room: '',\n        streetHouseNumber: '',\n        wardValue: '',\n      },\n    ],\n  },\n};\n\nexport default MinimizeGeneralInformation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}