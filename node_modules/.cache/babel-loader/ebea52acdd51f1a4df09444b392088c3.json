{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\app\\\\routes\\\\AppRoute.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"app/hooks\";\nconst AppRoute = props => {\n  const {\n    component: Component,\n    layout: Layout,\n    path,\n    exact,\n    isPrivate\n  } = props;\n  const {\n    isAuthenticated\n  } = useAuth();\n  return /*#__PURE__*/React.createElement(Route, {\n    path: path,\n    exact: exact,\n    render: componentProps => {\n      if (isPrivate && isAuthenticated() || !isPrivate) {\n        if (Layout) {\n          return /*#__PURE__*/React.createElement(Layout, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 15\n            }\n          }, /*#__PURE__*/React.createElement(Component, {\n            location: componentProps.location,\n            history: componentProps.history,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }\n          }));\n        }\n        return /*#__PURE__*/React.createElement(Component, {\n          location: componentProps.location,\n          history: componentProps.history,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }\n        });\n      }\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: \"/\",\n          state: {\n            from: componentProps.location\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  });\n};\nAppRoute.propTypes = {\n  component: PropTypes.elementType.isRequired,\n  layout: PropTypes.elementType,\n  path: PropTypes.string,\n  exact: PropTypes.bool,\n  isPrivate: PropTypes.bool\n};\nAppRoute.defaultProps = {\n  layout: null,\n  path: null,\n  exact: false,\n  isPrivate: false\n};\nexport default AppRoute;","map":{"version":3,"names":["React","PropTypes","Route","Redirect","useAuth","AppRoute","props","component","Component","layout","Layout","path","exact","isPrivate","isAuthenticated","createElement","render","componentProps","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","location","history","to","pathname","state","from","propTypes","elementType","isRequired","string","bool","defaultProps"],"sources":["H:/BAKCO/pj/data reconciliation/src/app/routes/AppRoute.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nimport { useAuth } from \"app/hooks\";\n\nconst AppRoute = (props) => {\n  const {\n    component: Component,\n    layout: Layout,\n    path,\n    exact,\n    isPrivate,\n  } = props;\n\n  const { isAuthenticated } = useAuth();\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      render={(componentProps) => {\n        if ((isPrivate && isAuthenticated()) || !isPrivate) {\n          if (Layout) {\n            return (\n              <Layout>\n                <Component\n                  location={componentProps.location}\n                  history={componentProps.history}\n                />\n              </Layout>\n            );\n          }\n          return (\n            <Component\n              location={componentProps.location}\n              history={componentProps.history}\n            />\n          );\n        }\n        return (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: {\n                from: componentProps.location,\n              },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nAppRoute.propTypes = {\n  component: PropTypes.elementType.isRequired,\n  layout: PropTypes.elementType,\n  path: PropTypes.string,\n  exact: PropTypes.bool,\n  isPrivate: PropTypes.bool,\n};\n\nAppRoute.defaultProps = {\n  layout: null,\n  path: null,\n  exact: false,\n  isPrivate: false,\n};\n\nexport default AppRoute;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAElD,SAASC,OAAO,QAAQ,WAAW;AAEnC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAC1B,MAAM;IACJC,SAAS,EAAEC,SAAS;IACpBC,MAAM,EAAEC,MAAM;IACdC,IAAI;IACJC,KAAK;IACLC;EACF,CAAC,GAAGP,KAAK;EAET,MAAM;IAAEQ;EAAgB,CAAC,GAAGV,OAAO,EAAE;EAErC,oBACEJ,KAAA,CAAAe,aAAA,CAACb,KAAK;IACJS,IAAI,EAAEA,IAAK;IACXC,KAAK,EAAEA,KAAM;IACbI,MAAM,EAAGC,cAAc,IAAK;MAC1B,IAAKJ,SAAS,IAAIC,eAAe,EAAE,IAAK,CAACD,SAAS,EAAE;QAClD,IAAIH,MAAM,EAAE;UACV,oBACEV,KAAA,CAAAe,aAAA,CAACL,MAAM;YAAAQ,MAAA;YAAAC,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,gBACLvB,KAAA,CAAAe,aAAA,CAACP,SAAS;YACRgB,QAAQ,EAAEP,cAAc,CAACO,QAAS;YAClCC,OAAO,EAAER,cAAc,CAACQ,OAAQ;YAAAP,MAAA;YAAAC,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,EAChC,CACK;QAEb;QACA,oBACEvB,KAAA,CAAAe,aAAA,CAACP,SAAS;UACRgB,QAAQ,EAAEP,cAAc,CAACO,QAAS;UAClCC,OAAO,EAAER,cAAc,CAACQ,OAAQ;UAAAP,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,EAChC;MAEN;MACA,oBACEvB,KAAA,CAAAe,aAAA,CAACZ,QAAQ;QACPuB,EAAE,EAAE;UACFC,QAAQ,EAAE,GAAG;UACbC,KAAK,EAAE;YACLC,IAAI,EAAEZ,cAAc,CAACO;UACvB;QACF,CAAE;QAAAN,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,EACF;IAEN,CAAE;IAAAL,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACF;AAEN,CAAC;AAEDlB,QAAQ,CAACyB,SAAS,GAAG;EACnBvB,SAAS,EAAEN,SAAS,CAAC8B,WAAW,CAACC,UAAU;EAC3CvB,MAAM,EAAER,SAAS,CAAC8B,WAAW;EAC7BpB,IAAI,EAAEV,SAAS,CAACgC,MAAM;EACtBrB,KAAK,EAAEX,SAAS,CAACiC,IAAI;EACrBrB,SAAS,EAAEZ,SAAS,CAACiC;AACvB,CAAC;AAED7B,QAAQ,CAAC8B,YAAY,GAAG;EACtB1B,MAAM,EAAE,IAAI;EACZE,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,KAAK;EACZC,SAAS,EAAE;AACb,CAAC;AAED,eAAeR,QAAQ"},"metadata":{},"sourceType":"module"}