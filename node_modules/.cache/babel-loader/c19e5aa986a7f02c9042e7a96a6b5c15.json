{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\medical-test\\\\components\\\\transports\\\\ImportExaminationSection.js\";\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-undef */\n/* eslint-disable no-await-in-loop */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\n/* eslint-disable no-param-reassign */\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment';\nimport xlsx from 'xlsx';\nimport { FiEdit3 } from 'react-icons/fi';\nimport { Label, Button, Message, Icon, Header, Tab, List, Menu } from 'semantic-ui-react';\nimport { DataTable } from 'app/components/shared';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfileWithouDispatch } from 'profile/actions/profile';\nimport { getSamplingPlaces, getExaminationTypes } from 'medical-test/actions/medical-test';\nimport { downloadFile, getExaminationError } from 'app/utils/helpers';\nimport { getImportantType } from 'infection-chain/utils/helpers';\nimport locations from 'app/assets/mock/locations';\nimport excelTemplate from 'app/assets/excels/Mẫu import PCR.xlsx';\nimport { IMMUNIZATION_STATUSES } from 'profile/utils/constants';\nimport { createPcrExamination } from 'medical-test/actions/transport';\nconst FlexWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nconst MenuWrapper = styled.div`\n  margin-top: 15px;\n  & .tab {\n    padding-top: 0.1em !important;\n  }\n  & .fVDZkI {\n    margin-top: 0 !important;\n  }\n`;\nconst startWithRow = 2;\nconst steps = {\n  downloadTemplate: 0,\n  reviewData: 1,\n  result: 2\n};\nconst ImportExaminationSection = _ref => {\n  let {\n    importantValue,\n    onDisable\n  } = _ref;\n  const [step, setStep] = useState(steps.downloadTemplate);\n  const fileInputRef = useRef();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [informationData, setInformationData] = useState(undefined);\n  const [readData, setReadData] = useState([]);\n  const [errorData, setErrorData] = useState([]);\n  const [uploadResult, setUploadResult] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    examinationTypeList,\n    samplingPlaceList\n  } = useSelector(state => state.medicalTest);\n  const exception = useMemo(() => ['#'], []);\n  const empty = useMemo(() => ['__EMPTY', 'Mã Tổng Hợp', 'Hình thức lấy mẫu'], []);\n  const immunizationStatusOptions = [{\n    key: 0,\n    value: IMMUNIZATION_STATUSES.NO_RECORD,\n    text: 'Chưa rõ'\n  }, {\n    key: 1,\n    value: IMMUNIZATION_STATUSES.NO_VACCINE,\n    text: 'Chưa tiêm'\n  }, {\n    key: 2,\n    value: IMMUNIZATION_STATUSES.ONE_SHOT,\n    text: 'Tiêm 1 mũi'\n  }, {\n    key: 3,\n    value: IMMUNIZATION_STATUSES.TWO_SHOT,\n    text: 'Tiêm 2 mũi'\n  }, {\n    key: 4,\n    value: IMMUNIZATION_STATUSES.MORE_THAN_TWO_SHOT,\n    text: 'Tiêm trên 2 mũi'\n  }];\n  const errorCode = {\n    NULL_UNIT: 'Lỗi: không tìm thấy đơn vị',\n    CODE_HAS_BEEN_USED: 'Lỗi: Mã đã được dùng',\n    CODE_HAS_BEEN_ISSUED: 'Lỗi: Mã chưa được cấp',\n    NULL_DISEASE: 'Lỗi: Không xác định loại bệnh',\n    NULL_EXAM_TYPE: 'Lỗi: Không xác định loại xét nghiệm',\n    NULL_DISEASE_SAMPLE: 'Lỗi: Không xác định mẫu bệnh phẩm',\n    SINGLE_PROFILE_MODIFY_FAILED: 'Lỗi: Tạo/Chỉnh sửa hồ sơ đơn thất bại',\n    GROUP_PROFILE_MODIFY_FAILED: 'Lỗi: Tạo/Chỉnh sủa hồ sơ gộp thất bại',\n    NULL_SAMPLING_PLACE: 'Lỗi: Nơi lấy mẫu không hợp lệ',\n    OVER_DATE_TAKEN: 'Lỗi: Ngày lấy mẫu đã quá 7 ngày'\n  };\n  const informationModels = useMemo(() => [{\n    row: 2,\n    column: 4,\n    name: 'nameOfImporter'\n  }, {\n    row: 2,\n    column: 12,\n    name: 'phoneNumberOfImporter'\n  }, {\n    row: 2,\n    column: 16,\n    name: 'unitOfImporter'\n  }, {\n    row: 6,\n    column: 1,\n    name: 'feeType',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải chọn loại hình thu phí';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 5,\n    name: 'dateTaken',\n    formatter: (__, value) => ({\n      ...__.dateTaken,\n      day: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      const day = moment().format('DD');\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập thời gian lấy mẫu';\n      }\n      if (parsed > 31 || parsed < 0) {\n        return 'Ngày bắt đầu lấy mẫu không đúng định dạng (31 > ngày > 0)';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 6,\n    name: 'dateTaken',\n    formatter: (__, value) => ({\n      ...__.dateTaken,\n      month: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      const month = moment().format('MM');\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập thời gian lấy mẫu';\n      }\n      if (parsed > parseInt(month, 10) || parsed < 0) {\n        return `Tháng bắt đầu lấy mẫu không đúng định dạng (${month} > tháng > 0)`;\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 7,\n    name: 'dateTaken',\n    formatter: (__, value) => ({\n      ...__.dateTaken,\n      year: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      const year = moment().format('YYYY');\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập thời gian lấy mẫu';\n      }\n      if (parsed > parseInt(year, 10) || parsed < 1921) {\n        return `Năm bắt đầu lấy mẫu không đúng định dạng (${year} > năm > 1921)`;\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 8,\n    name: 'dateTaken',\n    formatter: (__, value) => ({\n      ...__.dateTaken,\n      hour: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập thời gian lấy mẫu';\n      }\n      if (parsed > 24 || parsed < 1) {\n        return 'Giờ bắt đầu lấy mẫu không đúng định dạng (24 > giờ > 1)';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 9,\n    name: 'dateTaken',\n    formatter: (__, value) => ({\n      ...__.dateTaken,\n      minute: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập thời gian lấy mẫu';\n      }\n      if (parsed > 60 || parsed < 0) {\n        return 'Phút bắt đầu lấy mẫu không đúng định dạng (60 > phút > 0)';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 11,\n    name: 'addressInVietnam',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập địa chỉ chi tiết nơi lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 13,\n    name: 'province',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập tỉnh/thành nơi lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 16,\n    name: 'district',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập quận/huyện nơi lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 17,\n    name: 'ward',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập phường/xã nơi lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 18,\n    name: 'quarter',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập khu phố/ấp nơi lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 19,\n    name: 'quarterGroup',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập tổ dân phô nơi lấy mẫu';\n      }\n      return false;\n    }\n  }], []);\n  const dataModels = useMemo(() => [{\n    header: 'Mã Tổng Hợp',\n    assign: 'code',\n    formatter: (__, value) => value.toUpperCase().trim(),\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập mã tổng hợp';\n      }\n      return false;\n    }\n  }, {\n    header: 'Hình thức lấy mẫu',\n    assign: 'sampleForm',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập hình thức lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    header: 'Mã TT (*)',\n    assign: 'index',\n    formatter: (__, value) => value.toString().trim(),\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập mã thứ tự';\n      }\n      return false;\n    }\n  }, {\n    header: 'Họ và tên (*)',\n    assign: 'name',\n    formatter: (__, value) => value.toUpperCase().trim(),\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập họ và tên';\n      }\n      return false;\n    }\n  }, {\n    encoding: false,\n    header: 'Ng%E0ysinh',\n    assign: 'dateOfBirth',\n    formatter: (__, value) => ({\n      ...__.dateOfBirth,\n      day: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập thời gian lấy mẫu';\n      }\n      if (parsed > 31 || parsed < 0) {\n        return 'Ngày bắt đầu lấy mẫu không đúng định dạng (31 > ngày > 0)';\n      }\n      return false;\n    }\n  }, {\n    encoding: false,\n    header: 'Th%E1ngsinh',\n    assign: 'dateOfBirth',\n    formatter: (__, value) => ({\n      ...__.dateOfBirth,\n      month: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập thời gian lấy mẫu';\n      }\n      if (parsed > 12 || parsed < 0) {\n        return 'Tháng bắt đầu lấy mẫu không đúng định dạng (12 > tháng > 0)';\n      }\n      return false;\n    }\n  }, {\n    encoding: false,\n    header: 'N%u0103msinh%20%28*%29',\n    assign: 'dateOfBirth',\n    formatter: (__, value) => ({\n      ...__.dateOfBirth,\n      year: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      const year = moment().format('YYYY');\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc phải nhập thời gian lấy mẫu';\n      }\n      if (parsed > parseInt(year, 10) || parsed < 1921) {\n        return `Năm bắt đầu lấy mẫu không đúng định dạng (${year} > năm > 1921)`;\n      }\n      return false;\n    }\n  }, {\n    header: 'Giới tính (*)',\n    assign: 'gender',\n    formatter: (__, value) => value.toUpperCase().includes('NAM') ? 1 : value.toUpperCase().includes('KHÁC') ? 2 : 0,\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập họ và tên';\n      }\n      return false;\n    }\n  }, {\n    header: 'Số ĐT (*)',\n    assign: 'phoneNumber',\n    formatter: (__, value) => typeof value === 'number' ? `0${value}` : value,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập số điện thoại';\n      }\n      return false;\n    }\n  }, {\n    header: 'Tiêm vắc xin (*)',\n    assign: 'vaccinationStatus',\n    formatter: (__, value) => {\n      const status = immunizationStatusOptions.find(p => p.text.toUpperCase() === value.toUpperCase());\n      return status === null || status === void 0 ? void 0 : status.value;\n    },\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc chọn trạng thái tiêm vắc xin';\n      }\n      const status = immunizationStatusOptions.find(p => p.text.toUpperCase() === value.toUpperCase());\n      if (!status) {\n        return 'Trạng thái tiêm vắc xin không đúng định dạng';\n      }\n      return false;\n    }\n  }, {\n    header: 'Ngày tiêm gần nhất',\n    assign: 'lastInjectionDate',\n    formatter: (__, value) => moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT00:00:00'),\n    validate: (obj, value) => {\n      if (typeof obj.immunizationStatus === 'number') {\n        if (!value && obj.immunizationStatus >= IMMUNIZATION_STATUSES.ONE_SHOT) {\n          return 'Bắt buộc nhập ngày tiêm (mũi 1)';\n        }\n        const date = moment(value, 'DD/MM/YYYY');\n        const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n        const afterDate = moment().endOf('day');\n        if (date > afterDate || date < beforeDate) {\n          return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format('DD/MM/YYYY')} đến ${afterDate.format('DD/MM/YYYY')}`;\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Địa chỉ chi tiết (*)',\n    assign: 'streetHouseNumber',\n    formatter: (__, value) => value.toString().trim(),\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập họ và tên';\n      }\n      return false;\n    }\n  }, {\n    header: 'Tỉnh/Thành (*)',\n    assign: 'provinceValue',\n    formatter: (__, value) => {\n      var _locations$find;\n      return locations === null || locations === void 0 ? void 0 : (_locations$find = locations.find(p => {\n        var _p$label, _p$label$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$label = p.label) === null || _p$label === void 0 ? void 0 : (_p$label$toLowerCase = _p$label.toLowerCase()) === null || _p$label$toLowerCase === void 0 ? void 0 : _p$label$toLowerCase.includes(`${value}`.toLowerCase());\n      })) === null || _locations$find === void 0 ? void 0 : _locations$find.value;\n    },\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập tỉnh/thành';\n      }\n      const province = locations === null || locations === void 0 ? void 0 : locations.find(p => {\n        var _p$label2, _p$label2$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$label2 = p.label) === null || _p$label2 === void 0 ? void 0 : (_p$label2$toLowerCase = _p$label2.toLowerCase()) === null || _p$label2$toLowerCase === void 0 ? void 0 : _p$label2$toLowerCase.includes(`${value}`.toLowerCase());\n      });\n      if (!province) {\n        return 'Tỉnh/Thành không hợp lệ';\n      }\n      return false;\n    }\n  }, {\n    header: 'Quận/Huyện (*)',\n    assign: 'districtValue',\n    formatter: (__, value) => {\n      var _locations$find2, _locations$find2$dist, _locations$find2$dist2;\n      return locations === null || locations === void 0 ? void 0 : (_locations$find2 = locations.find(p => {\n        var _p$value, _p$value$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$value = p.value) === null || _p$value === void 0 ? void 0 : (_p$value$toLowerCase = _p$value.toLowerCase()) === null || _p$value$toLowerCase === void 0 ? void 0 : _p$value$toLowerCase.includes(`${__.provinceValue}`.toLowerCase());\n      })) === null || _locations$find2 === void 0 ? void 0 : (_locations$find2$dist = _locations$find2.districts) === null || _locations$find2$dist === void 0 ? void 0 : (_locations$find2$dist2 = _locations$find2$dist.find(d => {\n        var _d$label, _d$label$toLowerCase;\n        return d === null || d === void 0 ? void 0 : (_d$label = d.label) === null || _d$label === void 0 ? void 0 : (_d$label$toLowerCase = _d$label.toLowerCase()) === null || _d$label$toLowerCase === void 0 ? void 0 : _d$label$toLowerCase.includes(`${value}`.toLowerCase());\n      })) === null || _locations$find2$dist2 === void 0 ? void 0 : _locations$find2$dist2.value;\n    },\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập quận/huyện';\n      }\n      if (__ === null || __ === void 0 ? void 0 : __.provinceValue) {\n        var _locations$find3, _locations$find3$dist;\n        const district = locations === null || locations === void 0 ? void 0 : (_locations$find3 = locations.find(p => {\n          var _p$value2, _p$value2$toLowerCase;\n          return (_p$value2 = p.value) === null || _p$value2 === void 0 ? void 0 : (_p$value2$toLowerCase = _p$value2.toLowerCase()) === null || _p$value2$toLowerCase === void 0 ? void 0 : _p$value2$toLowerCase.includes(`${__.provinceValue}`.toLowerCase());\n        })) === null || _locations$find3 === void 0 ? void 0 : (_locations$find3$dist = _locations$find3.districts) === null || _locations$find3$dist === void 0 ? void 0 : _locations$find3$dist.find(d => {\n          var _d$label2, _d$label2$toLowerCase;\n          return (_d$label2 = d.label) === null || _d$label2 === void 0 ? void 0 : (_d$label2$toLowerCase = _d$label2.toLowerCase()) === null || _d$label2$toLowerCase === void 0 ? void 0 : _d$label2$toLowerCase.includes(`${value}`.toLowerCase());\n        });\n        if (!district) {\n          return 'Quận/Huyện không hợp lệ';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Phường/Xã (*)',\n    assign: 'wardValue',\n    formatter: (__, value) => {\n      var _locations$find4, _locations$find4$dist, _locations$find4$dist2, _locations$find4$dist3, _locations$find4$dist4;\n      return locations === null || locations === void 0 ? void 0 : (_locations$find4 = locations.find(p => {\n        var _p$value3, _p$value3$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$value3 = p.value) === null || _p$value3 === void 0 ? void 0 : (_p$value3$toLowerCase = _p$value3.toLowerCase()) === null || _p$value3$toLowerCase === void 0 ? void 0 : _p$value3$toLowerCase.includes(`${__.provinceValue}`.toLowerCase());\n      })) === null || _locations$find4 === void 0 ? void 0 : (_locations$find4$dist = _locations$find4.districts) === null || _locations$find4$dist === void 0 ? void 0 : (_locations$find4$dist2 = _locations$find4$dist.find(d => {\n        var _d$value, _d$value$toLowerCase;\n        return d === null || d === void 0 ? void 0 : (_d$value = d.value) === null || _d$value === void 0 ? void 0 : (_d$value$toLowerCase = _d$value.toLowerCase()) === null || _d$value$toLowerCase === void 0 ? void 0 : _d$value$toLowerCase.includes(`${__.districtValue}`.toLowerCase());\n      })) === null || _locations$find4$dist2 === void 0 ? void 0 : (_locations$find4$dist3 = _locations$find4$dist2.wards) === null || _locations$find4$dist3 === void 0 ? void 0 : (_locations$find4$dist4 = _locations$find4$dist3.find(d => {\n        var _d$label3, _d$label3$toLowerCase;\n        return d === null || d === void 0 ? void 0 : (_d$label3 = d.label) === null || _d$label3 === void 0 ? void 0 : (_d$label3$toLowerCase = _d$label3.toLowerCase()) === null || _d$label3$toLowerCase === void 0 ? void 0 : _d$label3$toLowerCase.includes(`${value}`.toLowerCase());\n      })) === null || _locations$find4$dist4 === void 0 ? void 0 : _locations$find4$dist4.value;\n    },\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập phường/xã';\n      }\n      if ((__ === null || __ === void 0 ? void 0 : __.provinceValue) && (__ === null || __ === void 0 ? void 0 : __.districtValue)) {\n        var _locations$find5, _locations$find5$dist, _locations$find5$dist2, _locations$find5$dist3;\n        const ward = locations === null || locations === void 0 ? void 0 : (_locations$find5 = locations.find(p => {\n          var _p$value4, _p$value4$toLowerCase;\n          return p === null || p === void 0 ? void 0 : (_p$value4 = p.value) === null || _p$value4 === void 0 ? void 0 : (_p$value4$toLowerCase = _p$value4.toLowerCase()) === null || _p$value4$toLowerCase === void 0 ? void 0 : _p$value4$toLowerCase.includes(`${__.provinceValue}`.toLowerCase());\n        })) === null || _locations$find5 === void 0 ? void 0 : (_locations$find5$dist = _locations$find5.districts) === null || _locations$find5$dist === void 0 ? void 0 : (_locations$find5$dist2 = _locations$find5$dist.find(d => {\n          var _d$value2, _d$value2$toLowerCase;\n          return d === null || d === void 0 ? void 0 : (_d$value2 = d.value) === null || _d$value2 === void 0 ? void 0 : (_d$value2$toLowerCase = _d$value2.toLowerCase()) === null || _d$value2$toLowerCase === void 0 ? void 0 : _d$value2$toLowerCase.includes(`${__.districtValue}`.toLowerCase());\n        })) === null || _locations$find5$dist2 === void 0 ? void 0 : (_locations$find5$dist3 = _locations$find5$dist2.wards) === null || _locations$find5$dist3 === void 0 ? void 0 : _locations$find5$dist3.find(d => {\n          var _d$label4, _d$label4$toLowerCase;\n          return d === null || d === void 0 ? void 0 : (_d$label4 = d.label) === null || _d$label4 === void 0 ? void 0 : (_d$label4$toLowerCase = _d$label4.toLowerCase()) === null || _d$label4$toLowerCase === void 0 ? void 0 : _d$label4$toLowerCase.includes(`${value}`.toLowerCase());\n        });\n        if (!ward) {\n          return 'Phường/Xã không hợp lệ';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Khu phố / Thôn / Ấp (*)',\n    assign: 'quarter',\n    formatter: (__, value) => value.toString().trim(),\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập khu phố/thôn/ấp';\n      }\n      return false;\n    }\n  }, {\n    header: 'Tổ DP (*)',\n    assign: 'quarterGroup',\n    formatter: (__, value) => value.toString().trim(),\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập khu tổ dân phố';\n      }\n      return false;\n    }\n  }, {\n    header: 'Lý do lấy mẫu (*)',\n    assign: 'examinationType',\n    formatter: (__, value) => value.toString().trim(),\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập lý do lấy mẫu';\n      }\n      const examinationType = examinationTypeList.find(s => {\n        let keyword = value.toLowerCase().trim();\n        let match = /(\\d+.\\s+)(.*)(\\s+\\()/i.exec(keyword);\n        if (match === null) {\n          match = /(\\d+.\\s+)(.*)/i.exec(keyword);\n          if (match !== null) {\n            // eslint-disable-next-line prefer-destructuring\n            keyword = match[2];\n          }\n        } else {\n          // eslint-disable-next-line prefer-destructuring\n          keyword = match[2];\n        }\n        const name = s.name.toLowerCase().trim();\n        return name.includes(keyword.normalize('NFC'));\n      });\n      if (!examinationType) {\n        return 'Lý do lấy mẫu không hợp lệ';\n      }\n      return false;\n    }\n  }, {\n    header: 'Nơi lấy mẫu (*)',\n    assign: 'samplingPlace',\n    formatter: (__, value) => {\n      var _samplingPlaceList$fi;\n      return (_samplingPlaceList$fi = samplingPlaceList.find(s => {\n        const keyword = /(\\d+.\\s+)(.*)/i.exec(value.toLowerCase().trim())[2];\n        const name = /(\\d+.\\s+)(.*)/i.exec(s.name.toLowerCase().trim())[2];\n        return name.normalize('NFC') === keyword.normalize('NFC');\n      })) === null || _samplingPlaceList$fi === void 0 ? void 0 : _samplingPlaceList$fi.id;\n    },\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buôc phải nhập nơi lấy mẫu (loại hình)';\n      }\n      const samplingPlace = samplingPlaceList.find(s => {\n        const keyword = /(\\d+.\\s+)(.*)/i.exec(value.toLowerCase().trim())[2];\n        const name = /(\\d+.\\s+)(.*)/i.exec(s.name.toLowerCase().trim())[2];\n        return name.normalize('NFC') === keyword.normalize('NFC');\n      });\n      if (!samplingPlace) {\n        return 'Nơi lấy mẫu không hợp lệ';\n      }\n      return false;\n    }\n  }, {\n    header: 'Mẫu bệnh phẩm (*)',\n    assign: 'diseaseSample',\n    formatter: (__, value) => value,\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập mẫu bệnh phẩm';\n      }\n      return false;\n    }\n  }, {\n    header: 'Kỹ thuật xét nghiệm (*)',\n    assign: 'testTechnique',\n    formatter: (__, value) => value,\n    validate: (__, value) => {\n      if (`${value}`.length <= 0) {\n        return 'Bắt buộc nhập kỹ thuật xét nghiệm';\n      }\n      return false;\n    }\n  }], [examinationTypeList, samplingPlaceList]);\n  const refresh = () => {\n    setStep(steps.downloadTemplate);\n    setSelectedFile(null);\n    setReadData([]);\n    setErrorData([]);\n    setUploadResult([]);\n  };\n\n  // #region Parse data\n  const parseSheetInformation = useCallback(binary => {\n    try {\n      const book = xlsx.read(binary, {\n        type: 'binary',\n        cellDates: true,\n        cellNF: false,\n        cellText: false\n      });\n      const sheet = book.Sheets[book.SheetNames[0]];\n      const parserData = informationModels.reduce((obj, model) => {\n        var _sheet$xlsx$utils$enc;\n        const value = (_sheet$xlsx$utils$enc = sheet[xlsx.utils.encode_cell({\n          r: model.row,\n          c: model.column\n        })]) === null || _sheet$xlsx$utils$enc === void 0 ? void 0 : _sheet$xlsx$utils$enc.v;\n        const validation = (model === null || model === void 0 ? void 0 : model.validate) ? model.validate(obj, value) : false;\n        if (!validation) {\n          obj[model.name] = (model === null || model === void 0 ? void 0 : model.formatter) ? model.formatter(obj, value) : value;\n        }\n        return obj;\n      }, {});\n      setInformationData(parserData);\n    } catch (e) {\n      toast.warn('Tệp tin không đúng định dạng');\n    }\n  }, [informationModels]);\n  const parseSheetData = useCallback(binary => {\n    try {\n      const book = xlsx.read(binary, {\n        type: 'binary',\n        cellDates: true,\n        cellNF: false,\n        cellText: false\n      });\n      const sheet = book.Sheets[book.SheetNames[1]];\n      const rawData = xlsx.utils.sheet_to_json(sheet, {\n        range: startWithRow\n      }).map(row => Object.keys(row).reduce((obj, key) => {\n        const convertedKey = key.replace(/(\\r\\n|\\n|\\r)/gm, '').trim();\n        if (!exception.includes(convertedKey)) {\n          obj[escape(convertedKey)] = row[key];\n        }\n        return obj;\n      }, {})).filter(row => Object.keys(row).length > empty.length);\n      const parserData = rawData.map((row, index) => dataModels.reduce((obj, props) => {\n        const header = typeof props.encoding !== 'undefined' ? props.encoding ? escape(props.header) : props.header : escape(props.header);\n        const resultOfValidation = (props === null || props === void 0 ? void 0 : props.validate) ? props.validate(obj, row[header]) : false;\n        if (resultOfValidation) {\n          if (typeof obj.errors === 'undefined') {\n            obj.errors = {\n              row: index + 1,\n              messages: []\n            };\n          }\n          obj.errors.messages.push(resultOfValidation);\n        } else if (typeof row[header] !== 'undefined' && row[header] !== '') {\n          obj[props.assign] = (props === null || props === void 0 ? void 0 : props.formatter) ? props.formatter(obj, row[header]) : row[header];\n        }\n        return obj;\n      }, {}));\n      setReadData(parserData.filter(d => !(d === null || d === void 0 ? void 0 : d.errors)));\n      setErrorData(parserData.filter(d => d === null || d === void 0 ? void 0 : d.errors));\n    } catch (e) {\n      toast.warn('Tệp tin không đúng định dạng');\n    }\n  }, [dataModels]);\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      if (reader.readAsBinaryString) {\n        reader.onload = () => {\n          parseSheetInformation(reader.result);\n          parseSheetData(reader.result);\n          setStep(steps.reviewData);\n        };\n        reader.readAsBinaryString(selectedFile);\n      }\n    }\n    // eslint-disable-next-line\n  }, [selectedFile]);\n  // #endregion\n\n  // #region Upload data\n  const formatDateOfBirth = d => {\n    if ((d === null || d === void 0 ? void 0 : d.day) && (d === null || d === void 0 ? void 0 : d.month)) {\n      return `${d.year}-${d.month}-${d.day}`;\n    }\n    return `${d.year}-01-01`;\n  };\n  const formatRequestForProfile = d => {\n    var _d$initialMovingInfor;\n    return {\n      fullName: d.name,\n      gender: d.gender,\n      cmnd: uuidv4(),\n      cccd: null,\n      phoneNumber: d.phoneNumber,\n      dateOfBirth: formatDateOfBirth(d.dateOfBirth),\n      hasYearOfBirthOnly: (d === null || d === void 0 ? void 0 : d.day) && (d === null || d === void 0 ? void 0 : d.month),\n      nationality: 'vn',\n      initialMovingInformation: (_d$initialMovingInfor = d === null || d === void 0 ? void 0 : d.initialMovingInformation) !== null && _d$initialMovingInfor !== void 0 ? _d$initialMovingInfor : '',\n      workAddresses: [],\n      addressesInVietnam: [{\n        provinceValue: d.provinceValue,\n        districtValue: d.districtValue,\n        wardValue: d.wardValue,\n        quarter: d.quarter,\n        quarterGroup: d.quarterGroup,\n        streetHouseNumber: d.streetHouseNumber\n      }],\n      // immunizations: [],\n      immunizations: [{\n        disease: 'Covid-19',\n        immunizationStatus: d.vaccinationStatus,\n        // vaccine: d.vaccine,\n        injectionDate: (d === null || d === void 0 ? void 0 : d.lastInjectionDate) ? moment(d.lastInjectionDate).format('YYYY-MM-DD') : null\n      }],\n      symptoms: [],\n      profileCreationReason: {\n        reason: examinationTypeList.find(e => e.id === d.examinationTypeId).name,\n        reasonType: examinationTypeList.find(e => e.id === d.examinationTypeId).name\n      }\n    };\n  };\n  const formatExamination = d => {\n    var _d$dateOfBirth, _d$dateOfBirth2, _d$dateOfBirth3, _d$dateOfBirth4;\n    return [{\n      profiles: Array.isArray(d) ? d.map(obj => {\n        var _obj$dateOfBirth, _obj$dateOfBirth2, _obj$dateOfBirth3, _obj$dateOfBirth4;\n        return {\n          reason: obj.examinationType,\n          fullName: obj.name,\n          gender: obj.gender === 1 ? 'Nam' : 'Nữ',\n          yearOfBirth: !(((_obj$dateOfBirth = obj.dateOfBirth) === null || _obj$dateOfBirth === void 0 ? void 0 : _obj$dateOfBirth.day) && ((_obj$dateOfBirth2 = obj.dateOfBirth) === null || _obj$dateOfBirth2 === void 0 ? void 0 : _obj$dateOfBirth2.month)) ? obj.dateOfBirth.year : undefined,\n          dateOfBirth: ((_obj$dateOfBirth3 = obj.dateOfBirth) === null || _obj$dateOfBirth3 === void 0 ? void 0 : _obj$dateOfBirth3.day) && ((_obj$dateOfBirth4 = obj.dateOfBirth) === null || _obj$dateOfBirth4 === void 0 ? void 0 : _obj$dateOfBirth4.month) ? formatDateOfBirth(obj.dateOfBirth) : undefined,\n          phone: obj.phoneNumber,\n          cmnd: uuidv4(),\n          streetHouseNumber: obj.streetHouseNumber,\n          provinceValue: obj.provinceValue,\n          districtValue: obj.districtValue,\n          wardValue: obj.wardValue,\n          quarter: obj.quarter,\n          quarterGroup: obj.quarterGroup,\n          subjectType: informationData.feeType,\n          immunization: {\n            immunizationStatus: obj.vaccinationStatus,\n            reason: obj.examinationType,\n            disease: 'Covid-19',\n            injectionDate: (obj === null || obj === void 0 ? void 0 : obj.lastInjectionDate) ? moment(obj.lastInjectionDate).format('YYYY-MM-DD') : null\n          }\n        };\n      }) : {\n        reason: d.examinationType,\n        fullName: d.name,\n        gender: d.gender === 1 ? 'Nam' : 'Nữ',\n        yearOfBirth: !(((_d$dateOfBirth = d.dateOfBirth) === null || _d$dateOfBirth === void 0 ? void 0 : _d$dateOfBirth.day) && ((_d$dateOfBirth2 = d.dateOfBirth) === null || _d$dateOfBirth2 === void 0 ? void 0 : _d$dateOfBirth2.month)) ? d.dateOfBirth.year : undefined,\n        dateOfBirth: ((_d$dateOfBirth3 = d.dateOfBirth) === null || _d$dateOfBirth3 === void 0 ? void 0 : _d$dateOfBirth3.day) && ((_d$dateOfBirth4 = d.dateOfBirth) === null || _d$dateOfBirth4 === void 0 ? void 0 : _d$dateOfBirth4.month) ? formatDateOfBirth(d.dateOfBirth) : undefined,\n        phone: d.phoneNumber,\n        cmnd: uuidv4(),\n        streetHouseNumber: d.streetHouseNumber,\n        provinceValue: d.provinceValue,\n        districtValue: d.districtValue,\n        wardValue: d.wardValue,\n        quarter: d.quarter,\n        quarterGroup: d.quarterGroup,\n        subjectType: d.feeType,\n        immunization: {\n          immunizationStatus: d.vaccinationStatus,\n          reason: d.examinationType,\n          disease: 'Covid-19',\n          injectionDate: (d === null || d === void 0 ? void 0 : d.lastInjectionDate) ? moment(d.lastInjectionDate).format('YYYY-MM-DD') : null\n        }\n      },\n      assign: {\n        date: moment(informationData.dateTaken).format('YYYY-MM-DD'),\n        facility: informationData.unitOfImporter\n      },\n      testing: Array.isArray(d) ? {\n        code: d[0].code,\n        isGroup: d.length > 1,\n        reason: d[0].examinationType,\n        streetHouseNumber: d[0].streetHouseNumber,\n        provinceValue: d[0].provinceValue,\n        districtValue: d[0].districtValue,\n        wardValue: d[0].wardValue,\n        quarter: d[0].quarter,\n        quarterGroup: d[0].quarterGroup,\n        dateTaken: moment(informationData.dateTaken).format('YYYY-MM-DD'),\n        diseaseType: 'U07',\n        feeType: informationData.feeType,\n        subjectType: informationData.feeType,\n        sampleType: d[0].diseaseSample,\n        testTechnique: d[0].testTechnique,\n        samplingPlaceId: d[0].samplingPlaceId\n      } : {\n        code: d.code,\n        isGroup: d.length > 1,\n        reason: d.examinationType,\n        streetHouseNumber: informationData.streetHouseNumber,\n        provinceValue: informationData.provinceValue,\n        districtValue: informationData.districtValue,\n        wardValue: informationData.wardValue,\n        quarter: informationData.quarter,\n        quarterGroup: informationData.quarterGroup,\n        dateTaken: moment(informationData.dateTaken).format('YYYY-MM-DD'),\n        diseaseType: 'U07',\n        feeType: informationData.feeType,\n        subjectType: informationData.feeType,\n        sampleType: d.diseaseSample,\n        testTechnique: d.testTechnique,\n        samplingPlaceId: d.samplingPlaceId\n      }\n    }];\n  };\n  const getImportError = function () {\n    var _errorResponse$respon;\n    let errorResponse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      response: {}\n    };\n    let profileId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    const resultError = {\n      succeed: false,\n      message: 'Lỗi không xác định'\n    };\n    if ((_errorResponse$respon = errorResponse.response) === null || _errorResponse$respon === void 0 ? void 0 : _errorResponse$respon.data) {\n      if (typeof errorResponse.response.data === 'object') {\n        var _errorResponse$respon2;\n        const {\n          errors,\n          errorMessage\n        } = (_errorResponse$respon2 = errorResponse.response) === null || _errorResponse$respon2 === void 0 ? void 0 : _errorResponse$respon2.data;\n        if (errors) {\n          resultError.message = Object.values(errors).map(error => error.join('')).join(', ');\n        }\n        if (errorMessage) {\n          if (errorMessage.includes('Conflicted')) {\n            resultError.message = 'Xung đột thông tin hồ sơ';\n            resultError.profileId = profileId;\n          } else if (errorMessage.includes('Trùng')) {\n            resultError.message = 'Mẫu đã được ghi nhận';\n          } else {\n            const examinationError = getExaminationError(errorMessage);\n            if (examinationError) {\n              resultError.message = examinationError;\n            }\n          }\n        }\n      } else if (typeof errorResponse.response.data === 'string') {\n        if (errorResponse.response.data.includes('Record is existed or only update') || errorResponse.response.data.includes('Record is existed but dates are not the same')) {\n          resultError.message = 'Xung đột tiền sử tiêm chủng';\n          resultError.profileId = profileId;\n        } else {\n          const examinationError = getExaminationError(errorResponse.response.data);\n          if (examinationError) {\n            resultError.message = examinationError;\n          }\n        }\n      }\n    }\n    return resultError;\n  };\n  const uploadData = async () => {\n    setLoading(true);\n    const dataGroupBySampleForm = readData.reduce((result, obj) => {\n      if (result[obj.index]) {\n        result[obj.index] = [...result[obj.index], obj];\n      } else {\n        result[obj.index] = [obj];\n      }\n      return result;\n    }, {});\n    const keys = Object.keys(dataGroupBySampleForm);\n    for (const key of keys) {\n      try {\n        const response = await dispatch(createPcrExamination(formatExamination(dataGroupBySampleForm[key])));\n        setUploadResult(r => [...r, {\n          data: formatExamination(dataGroupBySampleForm[key]),\n          result: response\n        }]);\n      } catch (e) {\n        const error = getImportError(e);\n        setUploadResult(r => [...r, {\n          ...dataGroupBySampleForm[key],\n          result: {\n            ...error\n          }\n        }]);\n      }\n      /* For group profile */\n      // if (key.includes('GỘP')) {\n      //   for (const data in dataGroupBySampleForm[key]) {\n      //     console.log(data);\n      //   }\n      // } else {\n      //   /* For single profile */\n      //   for (const data of dataGroupBySampleForm[key]) {\n      //     try {\n      //       console.log((data));\n      //     } catch (e) {\n      //       const error = getImportError(e);\n      //       setUploadResult((r) => ([...r, { ...data, result: { ...error } }]));\n      //     }\n      //   }\n      // }\n    }\n    // try {\n    // create pcr examination\n    // await dispatch((createPcrExamination(formatExamination(row))));\n    // setUploadResult((r) => ([...r, { ...row, result: { succeed: true } }]));\n    // } catch (e) {\n    // const error = getImportError(e, profileIdValue);\n    // setUploadResult((r) => ([...r, { ...row, result: { ...error } }]));\n    // }\n\n    setLoading(false);\n    setStep(steps.result);\n  };\n  // #endregion\n\n  // #region Resolve data\n  const getProfile = async (row, id) => {\n    try {\n      const profile = await getProfileWithouDispatch(id);\n      setConflictProfile({\n        row,\n        raw: formatRequestForProfile(row),\n        exist: profile\n      });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  };\n  // #endregion\n\n  // #region Component\n  const dataColumns = useMemo(() => [{\n    Header: '#',\n    accessor: 'index'\n  }, {\n    Header: 'Hình thức lấy mẫu',\n    accessor: 'sampleForm'\n  }, {\n    Header: 'Người được lấy mẫu',\n    accessor: 'name'\n  }, {\n    Header: 'Mã xét nghiệm',\n    formatter: _ref2 => {\n      let {\n        code\n      } = _ref2;\n      return (code === null || code === void 0 ? void 0 : code.length) === 12 ? /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 55\n        }\n      }, code) : code;\n    }\n  }, {\n    Header: 'Ngày lấy mẫu',\n    formatter: () => informationData.dateTaken ? moment(informationData.dateTaken).format('DD-MM-YY HH:mm') : ''\n  }, {\n    Header: 'Kỹ thuật xét nghiệm',\n    accessor: 'testTechnique'\n  }, {\n    Header: 'Độ ưu tiên',\n    formatter: () => {\n      var _getImportantType, _getImportantType2, _getImportantType3;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n        empty: true,\n        circular: true,\n        style: {\n          marginRight: '5px'\n        },\n        key: (_getImportantType = getImportantType(importantValue)) === null || _getImportantType === void 0 ? void 0 : _getImportantType.color,\n        color: (_getImportantType2 = getImportantType(importantValue)) === null || _getImportantType2 === void 0 ? void 0 : _getImportantType2.color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 11\n        }\n      }), (_getImportantType3 = getImportantType(importantValue)) === null || _getImportantType3 === void 0 ? void 0 : _getImportantType3.label);\n    }\n  }], [importantValue, informationData]);\n  const errorColumns = useMemo(() => [{\n    Header: 'Hàng',\n    formatter: _ref3 => {\n      let {\n        errors\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 9\n        }\n      }, errors === null || errors === void 0 ? void 0 : errors.row);\n    }\n  }, {\n    Header: ' ',\n    formatter: _ref4 => {\n      let {\n        errors\n      } = _ref4;\n      return (errors === null || errors === void 0 ? void 0 : errors.messages) ? /*#__PURE__*/React.createElement(List, {\n        divided: true,\n        relaxed: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1035,\n          columnNumber: 11\n        }\n      }, errors.messages.map(m => /*#__PURE__*/React.createElement(List.Item, {\n        key: m,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(List.Icon, {\n        name: \"x\",\n        color: \"red\",\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1038,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(List.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1039,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(List.Description, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 19\n        }\n      }, m))))) : null;\n    }\n  }], []);\n  const jsx_menuTable = useMemo(() => {\n    const panes = [{\n      menuItem: `Dữ liệu đọc được (${readData.length})`,\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        columns: dataColumns,\n        data: readData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1054,\n          columnNumber: 13\n        }\n      }))\n    }, {\n      menuItem: `Dữ liệu bị lỗi (${errorData.length})`,\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1064,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        columns: errorColumns,\n        data: errorData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 13\n        }\n      }))\n    }];\n    return /*#__PURE__*/React.createElement(MenuWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      panes: panes,\n      renderActiveOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1076,\n        columnNumber: 9\n      }\n    }));\n  }, [readData, errorData, dataColumns, errorColumns]);\n  const resultColumns = useMemo(() => [{\n    Header: '#',\n    accessor: 'index'\n  }, {\n    Header: 'Hình thức lấy mẫu',\n    formatter: r => {\n      var _r$data$;\n      return (r === null || r === void 0 ? void 0 : (_r$data$ = r.data[0]) === null || _r$data$ === void 0 ? void 0 : _r$data$.profiles.length) > 1 ? `Gộp ${r === null || r === void 0 ? void 0 : r.data[0].profiles.length}` : 'Đơn';\n    }\n  }, {\n    Header: 'Người được lấy mẫu',\n    formatter: r => {\n      var _r$data$2;\n      return r === null || r === void 0 ? void 0 : (_r$data$2 = r.data[0]) === null || _r$data$2 === void 0 ? void 0 : _r$data$2.profiles.map((o, i) => /*#__PURE__*/React.createElement(\"div\", {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 61\n        }\n      }, o === null || o === void 0 ? void 0 : o.fullName));\n    }\n  }, {\n    Header: 'Mã xét nghiệm',\n    formatter: r => {\n      var _r$data$3;\n      return r === null || r === void 0 ? void 0 : (_r$data$3 = r.data[0]) === null || _r$data$3 === void 0 ? void 0 : _r$data$3.testing.code;\n    }\n  }, {\n    Header: 'Ngày lấy mẫu',\n    formatter: () => informationData.dateTaken ? moment(informationData.dateTaken).format('DD-MM-YY HH:mm') : ''\n  }, {\n    Header: 'Kỹ thuật xét nghiệm',\n    formatter: r => r === null || r === void 0 ? void 0 : r.data[0].testing.testTechnique\n  }, {\n    Header: 'Độ ưu tiên',\n    formatter: () => {\n      var _getImportantType4, _getImportantType5, _getImportantType6;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n        empty: true,\n        circular: true,\n        style: {\n          marginRight: '5px'\n        },\n        key: (_getImportantType4 = getImportantType(importantValue)) === null || _getImportantType4 === void 0 ? void 0 : _getImportantType4.color,\n        color: (_getImportantType5 = getImportantType(importantValue)) === null || _getImportantType5 === void 0 ? void 0 : _getImportantType5.color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1110,\n          columnNumber: 11\n        }\n      }), (_getImportantType6 = getImportantType(importantValue)) === null || _getImportantType6 === void 0 ? void 0 : _getImportantType6.label);\n    }\n  }, {\n    Header: ' ',\n    formatter: r => {\n      var _r$result, _r$result2, _r$result2$failed$, _r$result3, _r$result3$failed$;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Icon, {\n        name: \"info circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 11\n        }\n      }), (r === null || r === void 0 ? void 0 : (_r$result = r.result) === null || _r$result === void 0 ? void 0 : _r$result.failed.length) === 0 ? 'Thành công' : `${errorCode[r === null || r === void 0 ? void 0 : (_r$result2 = r.result) === null || _r$result2 === void 0 ? void 0 : (_r$result2$failed$ = _r$result2.failed[0]) === null || _r$result2$failed$ === void 0 ? void 0 : _r$result2$failed$.slice(14).split(/\\s/)[0]]} ${r === null || r === void 0 ? void 0 : (_r$result3 = r.result) === null || _r$result3 === void 0 ? void 0 : (_r$result3$failed$ = _r$result3.failed[0]) === null || _r$result3$failed$ === void 0 ? void 0 : _r$result3$failed$.slice(14).split(/\\s/)[1]}`);\n    }\n  }], [importantValue, informationData]);\n  const jsx_menuResultTable = useMemo(() => {\n    const panes = [];\n    const success = uploadResult.filter(u => {\n      var _u$result;\n      return (u === null || u === void 0 ? void 0 : (_u$result = u.result) === null || _u$result === void 0 ? void 0 : _u$result.failed.length) === 0;\n    });\n    const error = uploadResult.filter(u => {\n      var _u$result2;\n      return (u === null || u === void 0 ? void 0 : (_u$result2 = u.result) === null || _u$result2 === void 0 ? void 0 : _u$result2.failed.length) !== 0;\n    });\n    const resolve = uploadResult.filter(u => {\n      var _u$result3;\n      return (u === null || u === void 0 ? void 0 : (_u$result3 = u.result) === null || _u$result3 === void 0 ? void 0 : _u$result3.failed.length) !== 0;\n    });\n    if (success.length > 0) {\n      panes.push({\n        menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n          key: \"success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1140,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: '700'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1142,\n            columnNumber: 13\n          }\n        }, \"Th\\xE0nh c\\xF4ng\"), \"\\xA0\", ' ', \"(\", success.length, \")\"),\n        render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1150,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(DataTable, {\n          columns: resultColumns,\n          data: success.map((d, i) => ({\n            ...d,\n            index: i + 1\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 13\n          }\n        }))\n      });\n    }\n    if (resolve.length > 0) {\n      panes.push({\n        menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n          key: \"resolve\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1162,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: '700'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1164,\n            columnNumber: 13\n          }\n        }, \"C\\u1EA7n ch\\u1EC9nh s\\u1EEDa\"), \"\\xA0\", ' ', \"(\", resolve.length, \")\"),\n        render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1172,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(DataTable, {\n          columns: resultColumns,\n          data: resolve.map((d, i) => ({\n            ...d,\n            index: i + 1\n          })),\n          actions: [{\n            icon: /*#__PURE__*/React.createElement(FiEdit3, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1178,\n                columnNumber: 25\n              }\n            }),\n            color: 'purple',\n            title: 'Cập nhật hồ sơ',\n            onClick: r => {\n              var _r$result4;\n              return getProfile(r, r === null || r === void 0 ? void 0 : (_r$result4 = r.result) === null || _r$result4 === void 0 ? void 0 : _r$result4.profileId);\n            },\n            hidden: r => {\n              var _r$result5;\n              return !(r === null || r === void 0 ? void 0 : (_r$result5 = r.result) === null || _r$result5 === void 0 ? void 0 : _r$result5.profileId);\n            }\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1173,\n            columnNumber: 13\n          }\n        }))\n      });\n    }\n    if (error.length > 0) {\n      panes.push({\n        menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n          key: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1193,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: '700'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1195,\n            columnNumber: 13\n          }\n        }, \"L\\u1ED7i\"), \"\\xA0\", ' ', \"(\", error.length, \")\"),\n        render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(DataTable, {\n          columns: resultColumns,\n          data: error.map((d, i) => ({\n            ...d,\n            index: i + 1\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 13\n          }\n        }))\n      });\n    }\n    return /*#__PURE__*/React.createElement(MenuWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      panes: panes,\n      defaultActiveIndex: 0,\n      renderActiveOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1215,\n        columnNumber: 9\n      }\n    }));\n    // eslint-disable-next-line\n  }, [uploadResult, resultColumns]);\n  const jsx_downloadTemplate = useMemo(() => /*#__PURE__*/React.createElement(Message, {\n    info: true,\n    icon: true,\n    style: {\n      marginBottom: 0,\n      cursor: 'pointer'\n    },\n    onClick: () => downloadFile(excelTemplate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1222,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"download\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1228,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Message.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Message.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1230,\n      columnNumber: 9\n    }\n  }, \"T\\u1EA3i t\\u1EC7p tin m\\u1EABu\"), \"S\\u1EED d\\u1EE5ng t\\u1EC7p tin m\\u1EABu, \\u0111\\u1EC3 \\u0111\\u1EA3m b\\u1EA3o d\\u1EEF li\\u1EC7u ch\\xEDnh x\\xE1c\")), []);\n  const jsx_content = useMemo(() => {\n    switch (step) {\n      case steps.downloadTemplate:\n        return jsx_downloadTemplate;\n      case steps.reviewData:\n        return jsx_menuTable;\n      case steps.result:\n        return jsx_menuResultTable;\n      default:\n        return jsx_downloadTemplate;\n    }\n  }, [step, jsx_downloadTemplate, jsx_menuTable, jsx_menuResultTable]);\n  // #endregion\n\n  useEffect(() => {\n    if (examinationTypeList.length === 0) {\n      dispatch(getExaminationTypes());\n    }\n    if (samplingPlaceList.length === 0) {\n      dispatch(getSamplingPlaces());\n    }\n  }, []);\n  useEffect(() => {\n    if (errorData.length === 0) {\n      onDisable(false);\n    } else {\n      onDisable(true);\n    }\n  }, [errorData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1268,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FlexWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1269,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: \"upload\",\n    labelPosition: \"right\",\n    color: \"green\",\n    content: \"Ch\\u1ECDn File\",\n    onClick: () => {\n      refresh();\n      fileInputRef.current.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1270,\n      columnNumber: 11\n    }\n  }), step === steps.reviewData && errorData.length === 0 && /*#__PURE__*/React.createElement(Button, {\n    icon: \"checkmark\",\n    labelPosition: \"right\",\n    color: \"blue\",\n    content: \"T\\u1EA1o m\\u1EABu\",\n    onClick: () => {\n      if (uploadResult.filter(u => {\n        var _u$result4;\n        return (u === null || u === void 0 ? void 0 : (_u$result4 = u.result) === null || _u$result4 === void 0 ? void 0 : _u$result4.message) && u.result.message.includes('Đã chỉnh sửa');\n      }).length > 0) {\n        // resolveData();\n      } else {\n        uploadData();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1281,\n      columnNumber: 13\n    }\n  })), selectedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px',\n      marginLeft: '10px',\n      fontWeight: '700'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1297,\n      columnNumber: 11\n    }\n  }, \"T\\xEAn file:\", ' ', selectedFile.name) : null), /*#__PURE__*/React.createElement(\"input\", {\n    hidden: true,\n    type: \"file\",\n    ref: fileInputRef,\n    onChange: e => {\n      setSelectedFile(e.target.files[0]);\n    },\n    accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1304,\n      columnNumber: 7\n    }\n  }), jsx_content);\n};\nexport default ImportExaminationSection;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","useRef","styled","toast","v4","uuidv4","moment","xlsx","FiEdit3","Label","Button","Message","Icon","Header","Tab","List","Menu","DataTable","useDispatch","useSelector","getProfileWithouDispatch","getSamplingPlaces","getExaminationTypes","downloadFile","getExaminationError","getImportantType","locations","excelTemplate","IMMUNIZATION_STATUSES","createPcrExamination","FlexWrapper","div","MenuWrapper","startWithRow","steps","downloadTemplate","reviewData","result","ImportExaminationSection","_ref","importantValue","onDisable","step","setStep","fileInputRef","selectedFile","setSelectedFile","loading","setLoading","informationData","setInformationData","undefined","readData","setReadData","errorData","setErrorData","uploadResult","setUploadResult","dispatch","examinationTypeList","samplingPlaceList","state","medicalTest","exception","empty","immunizationStatusOptions","key","value","NO_RECORD","text","NO_VACCINE","ONE_SHOT","TWO_SHOT","MORE_THAN_TWO_SHOT","errorCode","NULL_UNIT","CODE_HAS_BEEN_USED","CODE_HAS_BEEN_ISSUED","NULL_DISEASE","NULL_EXAM_TYPE","NULL_DISEASE_SAMPLE","SINGLE_PROFILE_MODIFY_FAILED","GROUP_PROFILE_MODIFY_FAILED","NULL_SAMPLING_PLACE","OVER_DATE_TAKEN","informationModels","row","column","name","formatter","__","validate","length","dateTaken","day","parsed","parseInt","format","month","year","hour","minute","dataModels","header","assign","toUpperCase","trim","toString","encoding","dateOfBirth","includes","status","find","p","obj","immunizationStatus","date","beforeDate","afterDate","endOf","_locations$find","_p$label","_p$label$toLowerCase","label","toLowerCase","province","_p$label2","_p$label2$toLowerCase","_locations$find2","_locations$find2$dist","_locations$find2$dist2","_p$value","_p$value$toLowerCase","provinceValue","districts","d","_d$label","_d$label$toLowerCase","_locations$find3","_locations$find3$dist","district","_p$value2","_p$value2$toLowerCase","_d$label2","_d$label2$toLowerCase","_locations$find4","_locations$find4$dist","_locations$find4$dist2","_locations$find4$dist3","_locations$find4$dist4","_p$value3","_p$value3$toLowerCase","_d$value","_d$value$toLowerCase","districtValue","wards","_d$label3","_d$label3$toLowerCase","_locations$find5","_locations$find5$dist","_locations$find5$dist2","_locations$find5$dist3","ward","_p$value4","_p$value4$toLowerCase","_d$value2","_d$value2$toLowerCase","_d$label4","_d$label4$toLowerCase","examinationType","s","keyword","match","exec","normalize","_samplingPlaceList$fi","id","samplingPlace","refresh","parseSheetInformation","binary","book","read","type","cellDates","cellNF","cellText","sheet","Sheets","SheetNames","parserData","reduce","model","_sheet$xlsx$utils$enc","utils","encode_cell","r","c","v","validation","e","warn","parseSheetData","rawData","sheet_to_json","range","map","Object","keys","convertedKey","replace","escape","filter","index","props","resultOfValidation","errors","messages","push","reader","FileReader","readAsBinaryString","onload","formatDateOfBirth","formatRequestForProfile","_d$initialMovingInfor","fullName","gender","cmnd","cccd","phoneNumber","hasYearOfBirthOnly","nationality","initialMovingInformation","workAddresses","addressesInVietnam","wardValue","quarter","quarterGroup","streetHouseNumber","immunizations","disease","vaccinationStatus","injectionDate","lastInjectionDate","symptoms","profileCreationReason","reason","examinationTypeId","reasonType","formatExamination","_d$dateOfBirth","_d$dateOfBirth2","_d$dateOfBirth3","_d$dateOfBirth4","profiles","Array","isArray","_obj$dateOfBirth","_obj$dateOfBirth2","_obj$dateOfBirth3","_obj$dateOfBirth4","yearOfBirth","phone","subjectType","feeType","immunization","facility","unitOfImporter","testing","code","isGroup","diseaseType","sampleType","diseaseSample","testTechnique","samplingPlaceId","getImportError","_errorResponse$respon","errorResponse","arguments","response","profileId","resultError","succeed","message","data","_errorResponse$respon2","errorMessage","values","error","join","examinationError","uploadData","dataGroupBySampleForm","getProfile","profile","setConflictProfile","raw","exist","dataColumns","accessor","_ref2","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_getImportantType","_getImportantType2","_getImportantType3","Fragment","circular","style","marginRight","color","errorColumns","_ref3","sub","_ref4","divided","relaxed","m","Item","verticalAlign","Content","Description","jsx_menuTable","panes","menuItem","render","Pane","columns","renderActiveOnly","resultColumns","_r$data$","_r$data$2","o","i","_r$data$3","_getImportantType4","_getImportantType5","_getImportantType6","_r$result","_r$result2","_r$result2$failed$","_r$result3","_r$result3$failed$","failed","slice","split","jsx_menuResultTable","success","u","_u$result","_u$result2","resolve","_u$result3","fontWeight","actions","icon","title","onClick","_r$result4","hidden","_r$result5","defaultActiveIndex","jsx_downloadTemplate","info","marginBottom","cursor","jsx_content","labelPosition","content","current","click","_u$result4","marginTop","marginLeft","ref","onChange","target","files","accept"],"sources":["H:/BAKCO/pj/cds/src/medical-test/components/transports/ImportExaminationSection.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable no-await-in-loop */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-param-reassign */\r\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\r\nimport styled from 'styled-components';\r\nimport { toast } from 'react-toastify';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport moment from 'moment';\r\nimport xlsx from 'xlsx';\r\n\r\nimport { FiEdit3 } from 'react-icons/fi';\r\nimport {\r\n  Label,\r\n Button,\r\n  Message, Icon,\r\n  Header, Tab, List,\r\n Menu,\r\n} from 'semantic-ui-react';\r\nimport { DataTable } from 'app/components/shared';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getProfileWithouDispatch,\r\n} from 'profile/actions/profile';\r\nimport { getSamplingPlaces, getExaminationTypes } from 'medical-test/actions/medical-test';\r\nimport {\r\n  downloadFile,\r\n  getExaminationError,\r\n} from 'app/utils/helpers';\r\nimport { getImportantType } from 'infection-chain/utils/helpers';\r\n\r\nimport locations from 'app/assets/mock/locations';\r\nimport excelTemplate from 'app/assets/excels/Mẫu import PCR.xlsx';\r\nimport { IMMUNIZATION_STATUSES } from 'profile/utils/constants';\r\nimport { createPcrExamination } from 'medical-test/actions/transport';\r\n\r\n\r\nconst FlexWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst MenuWrapper = styled.div`\r\n  margin-top: 15px;\r\n  & .tab {\r\n    padding-top: 0.1em !important;\r\n  }\r\n  & .fVDZkI {\r\n    margin-top: 0 !important;\r\n  }\r\n`;\r\n\r\nconst startWithRow = 2;\r\nconst steps = {\r\n  downloadTemplate: 0,\r\n  reviewData: 1,\r\n  result: 2,\r\n};\r\n\r\nconst ImportExaminationSection = ({ importantValue, onDisable }) => {\r\n  const [step, setStep] = useState(steps.downloadTemplate);\r\n\r\n  const fileInputRef = useRef();\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [loading, setLoading] = useState(null);\r\n\r\n  const [informationData, setInformationData] = useState(undefined);\r\n  const [readData, setReadData] = useState([]);\r\n  const [errorData, setErrorData] = useState([]);\r\n  const [uploadResult, setUploadResult] = useState([]);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const {\r\n    examinationTypeList,\r\n    samplingPlaceList,\r\n  } = useSelector((state) => state.medicalTest);\r\n\r\n  const exception = useMemo(() => (['#']), []);\r\n  const empty = useMemo(() => (['__EMPTY', 'Mã Tổng Hợp', 'Hình thức lấy mẫu']), []);\r\n  const immunizationStatusOptions = [\r\n    { key: 0, value: IMMUNIZATION_STATUSES.NO_RECORD, text: 'Chưa rõ' },\r\n    { key: 1, value: IMMUNIZATION_STATUSES.NO_VACCINE, text: 'Chưa tiêm' },\r\n    { key: 2, value: IMMUNIZATION_STATUSES.ONE_SHOT, text: 'Tiêm 1 mũi' },\r\n    { key: 3, value: IMMUNIZATION_STATUSES.TWO_SHOT, text: 'Tiêm 2 mũi' },\r\n    { key: 4, value: IMMUNIZATION_STATUSES.MORE_THAN_TWO_SHOT, text: 'Tiêm trên 2 mũi' },\r\n  ];\r\n  const errorCode = {\r\n    NULL_UNIT: 'Lỗi: không tìm thấy đơn vị',\r\n    CODE_HAS_BEEN_USED: 'Lỗi: Mã đã được dùng',\r\n    CODE_HAS_BEEN_ISSUED: 'Lỗi: Mã chưa được cấp',\r\n    NULL_DISEASE: 'Lỗi: Không xác định loại bệnh',\r\n    NULL_EXAM_TYPE: 'Lỗi: Không xác định loại xét nghiệm',\r\n    NULL_DISEASE_SAMPLE: 'Lỗi: Không xác định mẫu bệnh phẩm',\r\n    SINGLE_PROFILE_MODIFY_FAILED: 'Lỗi: Tạo/Chỉnh sửa hồ sơ đơn thất bại',\r\n    GROUP_PROFILE_MODIFY_FAILED: 'Lỗi: Tạo/Chỉnh sủa hồ sơ gộp thất bại',\r\n    NULL_SAMPLING_PLACE: 'Lỗi: Nơi lấy mẫu không hợp lệ',\r\n    OVER_DATE_TAKEN: 'Lỗi: Ngày lấy mẫu đã quá 7 ngày',\r\n  };\r\n  const informationModels = useMemo(() => ([\r\n    {\r\n      row: 2,\r\n      column: 4,\r\n      name: 'nameOfImporter',\r\n    },\r\n    {\r\n      row: 2,\r\n      column: 12,\r\n      name: 'phoneNumberOfImporter',\r\n    },\r\n    {\r\n      row: 2,\r\n      column: 16,\r\n      name: 'unitOfImporter',\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 1,\r\n      name: 'feeType',\r\n      formatter: (__, value) => `${value}`,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải chọn loại hình thu phí';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 5,\r\n      name: 'dateTaken',\r\n      formatter: (__, value) => ({\r\n        ...__.dateTaken,\r\n        day: value,\r\n      }),\r\n      validate: (__, value) => {\r\n        const parsed = parseInt(value, 10);\r\n        const day = moment().format('DD');\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập thời gian lấy mẫu';\r\n        }\r\n        if (parsed > 31 || parsed < 0) {\r\n          return 'Ngày bắt đầu lấy mẫu không đúng định dạng (31 > ngày > 0)';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 6,\r\n      name: 'dateTaken',\r\n      formatter: (__, value) => ({\r\n        ...__.dateTaken,\r\n        month: value,\r\n      }),\r\n      validate: (__, value) => {\r\n        const parsed = parseInt(value, 10);\r\n        const month = moment().format('MM');\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập thời gian lấy mẫu';\r\n        }\r\n        if (parsed > parseInt(month, 10) || parsed < 0) {\r\n          return `Tháng bắt đầu lấy mẫu không đúng định dạng (${month} > tháng > 0)`;\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 7,\r\n      name: 'dateTaken',\r\n      formatter: (__, value) => ({\r\n        ...__.dateTaken,\r\n        year: value,\r\n      }),\r\n      validate: (__, value) => {\r\n        const parsed = parseInt(value, 10);\r\n        const year = moment().format('YYYY');\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập thời gian lấy mẫu';\r\n        }\r\n        if (parsed > parseInt(year, 10) || parsed < 1921) {\r\n          return `Năm bắt đầu lấy mẫu không đúng định dạng (${year} > năm > 1921)`;\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 8,\r\n      name: 'dateTaken',\r\n      formatter: (__, value) => ({\r\n        ...__.dateTaken,\r\n        hour: value,\r\n      }),\r\n      validate: (__, value) => {\r\n        const parsed = parseInt(value, 10);\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập thời gian lấy mẫu';\r\n        }\r\n        if (parsed > 24 || parsed < 1) {\r\n          return 'Giờ bắt đầu lấy mẫu không đúng định dạng (24 > giờ > 1)';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 9,\r\n      name: 'dateTaken',\r\n      formatter: (__, value) => ({\r\n        ...__.dateTaken,\r\n        minute: value,\r\n      }),\r\n      validate: (__, value) => {\r\n        const parsed = parseInt(value, 10);\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập thời gian lấy mẫu';\r\n        }\r\n        if (parsed > 60 || parsed < 0) {\r\n          return 'Phút bắt đầu lấy mẫu không đúng định dạng (60 > phút > 0)';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 11,\r\n      name: 'addressInVietnam',\r\n      formatter: (__, value) => `${value}`,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập địa chỉ chi tiết nơi lấy mẫu';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 13,\r\n      name: 'province',\r\n      formatter: (__, value) => `${value}`,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập tỉnh/thành nơi lấy mẫu';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 16,\r\n      name: 'district',\r\n      formatter: (__, value) => `${value}`,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập quận/huyện nơi lấy mẫu';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 17,\r\n      name: 'ward',\r\n      formatter: (__, value) => `${value}`,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập phường/xã nơi lấy mẫu';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 18,\r\n      name: 'quarter',\r\n      formatter: (__, value) => `${value}`,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập khu phố/ấp nơi lấy mẫu';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      row: 6,\r\n      column: 19,\r\n      name: 'quarterGroup',\r\n      formatter: (__, value) => `${value}`,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập tổ dân phô nơi lấy mẫu';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n  ]), []);\r\n  const dataModels = useMemo(() => ([\r\n    {\r\n      header: 'Mã Tổng Hợp',\r\n      assign: 'code',\r\n      formatter: (__, value) => value.toUpperCase().trim(),\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập mã tổng hợp';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Hình thức lấy mẫu',\r\n      assign: 'sampleForm',\r\n      formatter: (__, value) => `${value}`,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập hình thức lấy mẫu';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Mã TT (*)',\r\n      assign: 'index',\r\n      formatter: (__, value) => value.toString().trim(),\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập mã thứ tự';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Họ và tên (*)',\r\n      assign: 'name',\r\n      formatter: (__, value) => value.toUpperCase().trim(),\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập họ và tên';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      encoding: false,\r\n      header: 'Ng%E0ysinh',\r\n      assign: 'dateOfBirth',\r\n      formatter: (__, value) => ({\r\n        ...__.dateOfBirth,\r\n        day: value,\r\n      }),\r\n      validate: (__, value) => {\r\n        const parsed = parseInt(value, 10);\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập thời gian lấy mẫu';\r\n        }\r\n        if (parsed > 31 || parsed < 0) {\r\n          return 'Ngày bắt đầu lấy mẫu không đúng định dạng (31 > ngày > 0)';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      encoding: false,\r\n      header: 'Th%E1ngsinh',\r\n      assign: 'dateOfBirth',\r\n      formatter: (__, value) => ({\r\n        ...__.dateOfBirth,\r\n        month: value,\r\n      }),\r\n      validate: (__, value) => {\r\n        const parsed = parseInt(value, 10);\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập thời gian lấy mẫu';\r\n        }\r\n        if (parsed > 12 || parsed < 0) {\r\n          return 'Tháng bắt đầu lấy mẫu không đúng định dạng (12 > tháng > 0)';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      encoding: false,\r\n      header: 'N%u0103msinh%20%28*%29',\r\n      assign: 'dateOfBirth',\r\n      formatter: (__, value) => ({\r\n        ...__.dateOfBirth,\r\n        year: value,\r\n      }),\r\n      validate: (__, value) => {\r\n        const parsed = parseInt(value, 10);\r\n        const year = moment().format('YYYY');\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc phải nhập thời gian lấy mẫu';\r\n        }\r\n        if (parsed > parseInt(year, 10) || parsed < 1921) {\r\n          return `Năm bắt đầu lấy mẫu không đúng định dạng (${year} > năm > 1921)`;\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Giới tính (*)',\r\n      assign: 'gender',\r\n      formatter: (__, value) => value.toUpperCase().includes('NAM')\r\n          ? 1\r\n          : value.toUpperCase().includes('KHÁC')\r\n            ? 2\r\n            : 0,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập họ và tên';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Số ĐT (*)',\r\n      assign: 'phoneNumber',\r\n      formatter: (__, value) => typeof value === 'number' ? `0${value}` : value,\r\n      validate: (__, value) => {\r\n        if (!value) {\r\n          return 'Bắt buộc nhập số điện thoại';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Tiêm vắc xin (*)',\r\n      assign: 'vaccinationStatus',\r\n      formatter: (__, value) => {\r\n        const status = immunizationStatusOptions.find((p) => p.text.toUpperCase() === value.toUpperCase());\r\n        return status?.value;\r\n      },\r\n      validate: (__, value) => {\r\n        if (!value) {\r\n          return 'Bắt buộc chọn trạng thái tiêm vắc xin';\r\n        }\r\n\r\n        const status = immunizationStatusOptions.find((p) => p.text.toUpperCase() === value.toUpperCase());\r\n        if (!status) {\r\n          return 'Trạng thái tiêm vắc xin không đúng định dạng';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Ngày tiêm gần nhất',\r\n      assign: 'lastInjectionDate',\r\n      formatter: (__, value) => moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT00:00:00'),\r\n      validate: (obj, value) => {\r\n        if (typeof obj.immunizationStatus === 'number') {\r\n          if (!value && obj.immunizationStatus >= IMMUNIZATION_STATUSES.ONE_SHOT) {\r\n            return 'Bắt buộc nhập ngày tiêm (mũi 1)';\r\n          }\r\n\r\n          const date = moment(value, 'DD/MM/YYYY');\r\n          const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\r\n          const afterDate = moment().endOf('day');\r\n          if (date > afterDate || date < beforeDate) {\r\n            return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format('DD/MM/YYYY')} đến ${afterDate.format('DD/MM/YYYY')}`;\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Địa chỉ chi tiết (*)',\r\n      assign: 'streetHouseNumber',\r\n      formatter: (__, value) => value.toString().trim(),\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập họ và tên';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Tỉnh/Thành (*)',\r\n      assign: 'provinceValue',\r\n      formatter: (__, value) => locations?.find((p) => p?.label?.toLowerCase()?.includes(`${value}`.toLowerCase()))?.value,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập tỉnh/thành';\r\n        }\r\n        const province = locations?.find((p) => p?.label?.toLowerCase()?.includes(`${value}`.toLowerCase()));\r\n        if (!province) {\r\n          return 'Tỉnh/Thành không hợp lệ';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Quận/Huyện (*)',\r\n      assign: 'districtValue',\r\n      formatter: (__, value) => locations?.find((p) => p?.value?.toLowerCase()?.includes(`${__.provinceValue}`.toLowerCase()))\r\n          ?.districts?.find((d) => d?.label?.toLowerCase()?.includes(`${value}`.toLowerCase()))?.value,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập quận/huyện';\r\n        }\r\n        if (__?.provinceValue) {\r\n          const district = locations?.find((p) => p.value?.toLowerCase()?.includes(`${__.provinceValue}`.toLowerCase()))\r\n            ?.districts?.find((d) => d.label?.toLowerCase()?.includes(`${value}`.toLowerCase()));\r\n          if (!district) {\r\n            return 'Quận/Huyện không hợp lệ';\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Phường/Xã (*)',\r\n      assign: 'wardValue',\r\n      formatter: (__, value) => locations?.find((p) => p?.value?.toLowerCase()?.includes(`${__.provinceValue}`.toLowerCase()))\r\n          ?.districts?.find((d) => d?.value?.toLowerCase()?.includes(`${__.districtValue}`.toLowerCase()))\r\n          ?.wards?.find((d) => d?.label?.toLowerCase()?.includes(`${value}`.toLowerCase()))?.value,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập phường/xã';\r\n        }\r\n        if (__?.provinceValue && __?.districtValue) {\r\n          const ward = locations?.find((p) => p?.value?.toLowerCase()?.includes(`${__.provinceValue}`.toLowerCase()))\r\n            ?.districts?.find((d) => d?.value?.toLowerCase()?.includes(`${__.districtValue}`.toLowerCase()))\r\n            ?.wards?.find((d) => d?.label?.toLowerCase()?.includes(`${value}`.toLowerCase()));\r\n          if (!ward) {\r\n            return 'Phường/Xã không hợp lệ';\r\n          }\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Khu phố / Thôn / Ấp (*)',\r\n      assign: 'quarter',\r\n      formatter: (__, value) => value.toString().trim(),\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập khu phố/thôn/ấp';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Tổ DP (*)',\r\n      assign: 'quarterGroup',\r\n      formatter: (__, value) => value.toString().trim(),\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập khu tổ dân phố';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Lý do lấy mẫu (*)',\r\n      assign: 'examinationType',\r\n      formatter: (__, value) => value.toString().trim(),\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập lý do lấy mẫu';\r\n        }\r\n        const examinationType = examinationTypeList.find(\r\n            (s) => {\r\n              let keyword = value.toLowerCase().trim();\r\n              let match = /(\\d+.\\s+)(.*)(\\s+\\()/i.exec(keyword);\r\n              if (match === null) {\r\n                match = /(\\d+.\\s+)(.*)/i.exec(keyword);\r\n                if (match !== null) {\r\n                  // eslint-disable-next-line prefer-destructuring\r\n                  keyword = match[2];\r\n                }\r\n              } else {\r\n                // eslint-disable-next-line prefer-destructuring\r\n                keyword = match[2];\r\n              }\r\n              const name = s.name.toLowerCase().trim();\r\n              return name.includes(keyword.normalize('NFC'));\r\n            },\r\n          );\r\n        if (!examinationType) {\r\n          return 'Lý do lấy mẫu không hợp lệ';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Nơi lấy mẫu (*)',\r\n      assign: 'samplingPlace',\r\n      formatter: (__, value) => samplingPlaceList.find(\r\n          (s) => {\r\n            const keyword = /(\\d+.\\s+)(.*)/i.exec(value.toLowerCase().trim())[2];\r\n            const name = /(\\d+.\\s+)(.*)/i.exec(s.name.toLowerCase().trim())[2];\r\n            return name.normalize('NFC') === keyword.normalize('NFC');\r\n          },\r\n        )?.id,\r\n      validate: (__, value) => {\r\n        if (!value) {\r\n          return 'Bắt buôc phải nhập nơi lấy mẫu (loại hình)';\r\n        }\r\n        const samplingPlace = samplingPlaceList.find(\r\n            (s) => {\r\n              const keyword = /(\\d+.\\s+)(.*)/i.exec(value.toLowerCase().trim())[2];\r\n              const name = /(\\d+.\\s+)(.*)/i.exec(s.name.toLowerCase().trim())[2];\r\n              return name.normalize('NFC') === keyword.normalize('NFC');\r\n            },\r\n          );\r\n        if (!samplingPlace) {\r\n          return 'Nơi lấy mẫu không hợp lệ';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Mẫu bệnh phẩm (*)',\r\n      assign: 'diseaseSample',\r\n      formatter: (__, value) => value,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập mẫu bệnh phẩm';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n    {\r\n      header: 'Kỹ thuật xét nghiệm (*)',\r\n      assign: 'testTechnique',\r\n      formatter: (__, value) => value,\r\n      validate: (__, value) => {\r\n        if (`${value}`.length <= 0) {\r\n          return 'Bắt buộc nhập kỹ thuật xét nghiệm';\r\n        }\r\n        return false;\r\n      },\r\n    },\r\n  ]), [examinationTypeList, samplingPlaceList]);\r\n\r\n  const refresh = () => {\r\n    setStep(steps.downloadTemplate);\r\n    setSelectedFile(null);\r\n    setReadData([]);\r\n    setErrorData([]);\r\n    setUploadResult([]);\r\n  };\r\n\r\n  // #region Parse data\r\n  const parseSheetInformation = useCallback((binary) => {\r\n    try {\r\n      const book = xlsx.read(binary, {\r\n        type: 'binary',\r\n        cellDates: true,\r\n        cellNF: false,\r\n        cellText: false,\r\n      });\r\n\r\n      const sheet = book.Sheets[book.SheetNames[0]];\r\n      const parserData = informationModels.reduce((obj, model) => {\r\n        const value = sheet[xlsx.utils.encode_cell({ r: model.row, c: model.column })]?.v;\r\n        const validation = model?.validate ? model.validate(obj, value) : false;\r\n        if (!validation) {\r\n          obj[model.name] = model?.formatter ? model.formatter(obj, value) : value;\r\n        }\r\n        return obj;\r\n      }, {});\r\n      setInformationData(parserData);\r\n    } catch (e) {\r\n      toast.warn('Tệp tin không đúng định dạng');\r\n    }\r\n  }, [informationModels]);\r\n  const parseSheetData = useCallback((binary) => {\r\n    try {\r\n      const book = xlsx.read(binary, {\r\n        type: 'binary',\r\n        cellDates: true,\r\n        cellNF: false,\r\n        cellText: false,\r\n      });\r\n\r\n      const sheet = book.Sheets[book.SheetNames[1]];\r\n      const rawData = xlsx.utils.sheet_to_json(sheet, { range: startWithRow })\r\n        .map((row) => Object.keys(row).reduce((obj, key) => {\r\n            const convertedKey = key.replace(/(\\r\\n|\\n|\\r)/gm, '').trim();\r\n            if (!exception.includes(convertedKey)) {\r\n              obj[escape(convertedKey)] = row[key];\r\n            }\r\n            return obj;\r\n          }, {}),\r\n        )\r\n        .filter((row) => Object.keys(row).length > empty.length);\r\n      const parserData = rawData.map((row, index) => dataModels.reduce((obj, props) => {\r\n          const header = typeof props.encoding !== 'undefined'\r\n              ? props.encoding\r\n                ? escape(props.header)\r\n                : props.header\r\n              : escape(props.header);\r\n          const resultOfValidation = props?.validate ? props.validate(obj, row[header]) : false;\r\n          if (resultOfValidation) {\r\n            if (typeof obj.errors === 'undefined') {\r\n              obj.errors = {\r\n                row: index + 1,\r\n                messages: [],\r\n              };\r\n            }\r\n            obj.errors.messages.push(resultOfValidation);\r\n          } else if (typeof row[header] !== 'undefined' && row[header] !== '') {\r\n            obj[props.assign] = props?.formatter\r\n                ? props.formatter(obj, row[header])\r\n                : row[header];\r\n          }\r\n          return obj;\r\n        }, {}),\r\n      );\r\n      setReadData(parserData.filter((d) => !d?.errors));\r\n      setErrorData(parserData.filter((d) => d?.errors));\r\n    } catch (e) {\r\n      toast.warn('Tệp tin không đúng định dạng');\r\n    }\r\n  }, [dataModels]);\r\n  useEffect(() => {\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n      if (reader.readAsBinaryString) {\r\n        reader.onload = () => {\r\n          parseSheetInformation(reader.result);\r\n          parseSheetData(reader.result);\r\n          setStep(steps.reviewData);\r\n        };\r\n        reader.readAsBinaryString(selectedFile);\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [selectedFile]);\r\n  // #endregion\r\n\r\n  // #region Upload data\r\n  const formatDateOfBirth = (d) => {\r\n    if (d?.day && d?.month) {\r\n      return `${d.year}-${d.month}-${d.day}`;\r\n    }\r\n    return `${d.year}-01-01`;\r\n  };\r\n  const formatRequestForProfile = (d) => ({\r\n    fullName: d.name,\r\n    gender: d.gender,\r\n    cmnd: uuidv4(),\r\n    cccd: null,\r\n    phoneNumber: d.phoneNumber,\r\n    dateOfBirth: formatDateOfBirth(d.dateOfBirth),\r\n    hasYearOfBirthOnly: d?.day && d?.month,\r\n    nationality: 'vn',\r\n    initialMovingInformation: d?.initialMovingInformation ?? '',\r\n    workAddresses: [],\r\n    addressesInVietnam: [{\r\n      provinceValue: d.provinceValue,\r\n      districtValue: d.districtValue,\r\n      wardValue: d.wardValue,\r\n      quarter: d.quarter,\r\n      quarterGroup: d.quarterGroup,\r\n      streetHouseNumber: d.streetHouseNumber,\r\n    }],\r\n    // immunizations: [],\r\n    immunizations: [{\r\n      disease: 'Covid-19',\r\n      immunizationStatus: d.vaccinationStatus,\r\n      // vaccine: d.vaccine,\r\n      injectionDate:\r\n        d?.lastInjectionDate\r\n          ? moment(d.lastInjectionDate).format('YYYY-MM-DD')\r\n          : null,\r\n    }],\r\n    symptoms: [],\r\n    profileCreationReason: {\r\n      reason: examinationTypeList.find((e) => e.id === d.examinationTypeId).name,\r\n      reasonType: examinationTypeList.find((e) => e.id === d.examinationTypeId).name,\r\n    },\r\n  });\r\n  const formatExamination = (d) => (\r\n    [{\r\n      profiles:\r\n        Array.isArray(d)\r\n          ? d.map((obj) => ({\r\n            reason: obj.examinationType,\r\n            fullName: obj.name,\r\n            gender: obj.gender === 1 ? 'Nam' : 'Nữ',\r\n            yearOfBirth: !(obj.dateOfBirth?.day && obj.dateOfBirth?.month) ? obj.dateOfBirth.year : undefined,\r\n            dateOfBirth: obj.dateOfBirth?.day && obj.dateOfBirth?.month ? formatDateOfBirth(obj.dateOfBirth) : undefined,\r\n            phone: obj.phoneNumber,\r\n            cmnd: uuidv4(),\r\n            streetHouseNumber: obj.streetHouseNumber,\r\n            provinceValue: obj.provinceValue,\r\n            districtValue: obj.districtValue,\r\n            wardValue: obj.wardValue,\r\n            quarter: obj.quarter,\r\n            quarterGroup: obj.quarterGroup,\r\n            subjectType: informationData.feeType,\r\n            immunization: {\r\n              immunizationStatus: obj.vaccinationStatus,\r\n              reason: obj.examinationType,\r\n              disease: 'Covid-19',\r\n              injectionDate:\r\n                obj?.lastInjectionDate\r\n                  ? moment(obj.lastInjectionDate).format('YYYY-MM-DD')\r\n                  : null,\r\n            },\r\n          }))\r\n          : {\r\n            reason: d.examinationType,\r\n            fullName: d.name,\r\n            gender: d.gender === 1 ? 'Nam' : 'Nữ',\r\n            yearOfBirth: !(d.dateOfBirth?.day && d.dateOfBirth?.month) ? d.dateOfBirth.year : undefined,\r\n            dateOfBirth: d.dateOfBirth?.day && d.dateOfBirth?.month ? formatDateOfBirth(d.dateOfBirth) : undefined,\r\n            phone: d.phoneNumber,\r\n            cmnd: uuidv4(),\r\n            streetHouseNumber: d.streetHouseNumber,\r\n            provinceValue: d.provinceValue,\r\n            districtValue: d.districtValue,\r\n            wardValue: d.wardValue,\r\n            quarter: d.quarter,\r\n            quarterGroup: d.quarterGroup,\r\n            subjectType: d.feeType,\r\n            immunization: {\r\n              immunizationStatus: d.vaccinationStatus,\r\n              reason: d.examinationType,\r\n              disease: 'Covid-19',\r\n              injectionDate:\r\n                d?.lastInjectionDate\r\n                  ? moment(d.lastInjectionDate).format('YYYY-MM-DD')\r\n                  : null,\r\n            },\r\n          },\r\n      assign: {\r\n        date: moment(informationData.dateTaken).format('YYYY-MM-DD'),\r\n        facility: informationData.unitOfImporter,\r\n      },\r\n      testing:\r\n        Array.isArray(d)\r\n          ? {\r\n            code: d[0].code,\r\n            isGroup: d.length > 1,\r\n            reason: d[0].examinationType,\r\n            streetHouseNumber: d[0].streetHouseNumber,\r\n            provinceValue: d[0].provinceValue,\r\n            districtValue: d[0].districtValue,\r\n            wardValue: d[0].wardValue,\r\n            quarter: d[0].quarter,\r\n            quarterGroup: d[0].quarterGroup,\r\n            dateTaken: moment(informationData.dateTaken).format('YYYY-MM-DD'),\r\n            diseaseType: 'U07',\r\n            feeType: informationData.feeType,\r\n            subjectType: informationData.feeType,\r\n            sampleType: d[0].diseaseSample,\r\n            testTechnique: d[0].testTechnique,\r\n            samplingPlaceId: d[0].samplingPlaceId,\r\n          }\r\n          : {\r\n            code: d.code,\r\n            isGroup: d.length > 1,\r\n            reason: d.examinationType,\r\n            streetHouseNumber: informationData.streetHouseNumber,\r\n            provinceValue: informationData.provinceValue,\r\n            districtValue: informationData.districtValue,\r\n            wardValue: informationData.wardValue,\r\n            quarter: informationData.quarter,\r\n            quarterGroup: informationData.quarterGroup,\r\n            dateTaken: moment(informationData.dateTaken).format('YYYY-MM-DD'),\r\n            diseaseType: 'U07',\r\n            feeType: informationData.feeType,\r\n            subjectType: informationData.feeType,\r\n            sampleType: d.diseaseSample,\r\n            testTechnique: d.testTechnique,\r\n            samplingPlaceId: d.samplingPlaceId,\r\n          },\r\n    }]\r\n  );\r\n  const getImportError = (errorResponse = { response: {} }, profileId = undefined) => {\r\n    const resultError = {\r\n      succeed: false,\r\n      message: 'Lỗi không xác định',\r\n    };\r\n    if (errorResponse.response?.data) {\r\n      if (typeof errorResponse.response.data === 'object') {\r\n        const { errors, errorMessage } = errorResponse.response?.data;\r\n        if (errors) {\r\n          resultError.message = Object.values(errors).map((error) => error.join('')).join(', ');\r\n        }\r\n        if (errorMessage) {\r\n          if (errorMessage.includes('Conflicted')) {\r\n            resultError.message = 'Xung đột thông tin hồ sơ';\r\n            resultError.profileId = profileId;\r\n          } else if (errorMessage.includes('Trùng')) {\r\n            resultError.message = 'Mẫu đã được ghi nhận';\r\n          } else {\r\n            const examinationError = getExaminationError(errorMessage);\r\n            if (examinationError) {\r\n              resultError.message = examinationError;\r\n            }\r\n          }\r\n        }\r\n      } else if (typeof errorResponse.response.data === 'string') {\r\n        if (errorResponse.response.data.includes('Record is existed or only update') || errorResponse.response.data.includes('Record is existed but dates are not the same')) {\r\n          resultError.message = 'Xung đột tiền sử tiêm chủng';\r\n          resultError.profileId = profileId;\r\n        } else {\r\n          const examinationError = getExaminationError(errorResponse.response.data);\r\n          if (examinationError) {\r\n            resultError.message = examinationError;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return resultError;\r\n  };\r\n  const uploadData = async () => {\r\n    setLoading(true);\r\n    const dataGroupBySampleForm = readData\r\n        .reduce((result, obj) => {\r\n          if (result[obj.index]) {\r\n            result[obj.index] = [...result[obj.index], obj];\r\n          } else {\r\n            result[obj.index] = [obj];\r\n          }\r\n          return result;\r\n        }, {});\r\n    const keys = Object.keys(dataGroupBySampleForm);\r\n    for (const key of keys) {\r\n      try {\r\n        const response = await dispatch((createPcrExamination(formatExamination(dataGroupBySampleForm[key]))));\r\n        setUploadResult((r) => ([...r, { data: formatExamination(dataGroupBySampleForm[key]), result: response }]));\r\n      } catch (e) {\r\n        const error = getImportError(e);\r\n        setUploadResult((r) => ([...r, { ...dataGroupBySampleForm[key], result: { ...error } }]));\r\n      }\r\n      /* For group profile */\r\n      // if (key.includes('GỘP')) {\r\n      //   for (const data in dataGroupBySampleForm[key]) {\r\n      //     console.log(data);\r\n      //   }\r\n      // } else {\r\n      //   /* For single profile */\r\n      //   for (const data of dataGroupBySampleForm[key]) {\r\n      //     try {\r\n      //       console.log((data));\r\n      //     } catch (e) {\r\n      //       const error = getImportError(e);\r\n      //       setUploadResult((r) => ([...r, { ...data, result: { ...error } }]));\r\n      //     }\r\n      //   }\r\n      // }\r\n    }\r\n    // try {\r\n    // create pcr examination\r\n    // await dispatch((createPcrExamination(formatExamination(row))));\r\n    // setUploadResult((r) => ([...r, { ...row, result: { succeed: true } }]));\r\n    // } catch (e) {\r\n    // const error = getImportError(e, profileIdValue);\r\n    // setUploadResult((r) => ([...r, { ...row, result: { ...error } }]));\r\n    // }\r\n\r\n    setLoading(false);\r\n    setStep(steps.result);\r\n  };\r\n  // #endregion\r\n\r\n  // #region Resolve data\r\n  const getProfile = async (row, id) => {\r\n    try {\r\n      const profile = await getProfileWithouDispatch(id);\r\n      setConflictProfile({\r\n        row,\r\n        raw: formatRequestForProfile(row),\r\n        exist: profile,\r\n      });\r\n      // eslint-disable-next-line no-empty\r\n    } catch (e) { }\r\n  };\r\n  // #endregion\r\n\r\n  // #region Component\r\n  const dataColumns = useMemo(() => ([\r\n    {\r\n      Header: '#',\r\n      accessor: 'index',\r\n    },\r\n    {\r\n      Header: 'Hình thức lấy mẫu',\r\n      accessor: 'sampleForm',\r\n    },\r\n    {\r\n      Header: 'Người được lấy mẫu',\r\n      accessor: 'name',\r\n    },\r\n    {\r\n      Header: 'Mã xét nghiệm',\r\n      formatter: ({ code }) => (code?.length === 12 ? <b>{code}</b> : code),\r\n    },\r\n    {\r\n      Header: 'Ngày lấy mẫu',\r\n      formatter: () => informationData.dateTaken ? moment(informationData.dateTaken).format('DD-MM-YY HH:mm') : '',\r\n    },\r\n    {\r\n      Header: 'Kỹ thuật xét nghiệm',\r\n      accessor: 'testTechnique',\r\n    },\r\n    {\r\n      Header: 'Độ ưu tiên',\r\n      formatter: () => (\r\n        <>\r\n          <Label\r\n            empty\r\n            circular\r\n            style={{ marginRight: '5px' }}\r\n            key={getImportantType(importantValue)?.color}\r\n            color={getImportantType(importantValue)?.color}\r\n          />\r\n          {getImportantType(importantValue)?.label}\r\n        </>\r\n      ),\r\n    },\r\n  ]), [importantValue, informationData]);\r\n  const errorColumns = useMemo(() => ([\r\n    {\r\n      Header: 'Hàng',\r\n      formatter: ({ errors }) => (\r\n        <Header sub>{errors?.row}</Header>\r\n      ),\r\n    },\r\n    {\r\n      Header: ' ',\r\n      formatter: ({ errors }) => errors?.messages\r\n        ? (\r\n          <List divided relaxed>\r\n            {errors.messages.map((m) => (\r\n              <List.Item key={m}>\r\n                <List.Icon name=\"x\" color=\"red\" verticalAlign=\"middle\" />\r\n                <List.Content>\r\n                  <List.Description>{m}</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))}\r\n          </List>\r\n        ) : null,\r\n    },\r\n  ]), []);\r\n  const jsx_menuTable = useMemo(() => {\r\n    const panes = [\r\n      {\r\n        menuItem: `Dữ liệu đọc được (${readData.length})`,\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <DataTable\r\n              columns={dataColumns}\r\n              data={readData}\r\n            />\r\n          </Tab.Pane>\r\n        ),\r\n      },\r\n      {\r\n        menuItem: `Dữ liệu bị lỗi (${errorData.length})`,\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <DataTable\r\n              columns={errorColumns}\r\n              data={errorData}\r\n            />\r\n          </Tab.Pane>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <MenuWrapper>\r\n        <Tab panes={panes} renderActiveOnly />\r\n      </MenuWrapper>\r\n    );\r\n  }, [readData, errorData, dataColumns, errorColumns]);\r\n\r\n  const resultColumns = useMemo(() => ([\r\n    {\r\n      Header: '#',\r\n      accessor: 'index',\r\n    },\r\n    {\r\n      Header: 'Hình thức lấy mẫu',\r\n      formatter: (r) => (r?.data[0]?.profiles.length > 1 ? `Gộp ${r?.data[0].profiles.length}` : 'Đơn'),\r\n    },\r\n    {\r\n      Header: 'Người được lấy mẫu',\r\n      formatter: (r) => (r?.data[0]?.profiles.map((o, i) => <div key={i}>{o?.fullName}</div>)),\r\n    },\r\n    {\r\n      Header: 'Mã xét nghiệm',\r\n      formatter: (r) => (r?.data[0]?.testing.code),\r\n    },\r\n    {\r\n      Header: 'Ngày lấy mẫu',\r\n      formatter: () => informationData.dateTaken ? moment(informationData.dateTaken).format('DD-MM-YY HH:mm') : '',\r\n    },\r\n    {\r\n      Header: 'Kỹ thuật xét nghiệm',\r\n      formatter: (r) => (r?.data[0].testing.testTechnique),\r\n    },\r\n    {\r\n      Header: 'Độ ưu tiên',\r\n      formatter: () => (\r\n        <>\r\n          <Label\r\n            empty\r\n            circular\r\n            style={{ marginRight: '5px' }}\r\n            key={getImportantType(importantValue)?.color}\r\n            color={getImportantType(importantValue)?.color}\r\n          />\r\n          {getImportantType(importantValue)?.label}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      Header: ' ',\r\n      formatter: (r) => (\r\n        <>\r\n          <Icon name=\"info circle\" />\r\n          {\r\n            r?.result?.failed.length === 0 ? 'Thành công' : `${errorCode[r?.result?.failed[0]?.slice(14).split(/\\s/)[0]]} ${r?.result?.failed[0]?.slice(14).split(/\\s/)[1]}`}\r\n        </>\r\n      ),\r\n    },\r\n  ]), [importantValue, informationData]);\r\n  const jsx_menuResultTable = useMemo(() => {\r\n    const panes = [];\r\n    const success = uploadResult.filter((u) => u?.result?.failed.length === 0);\r\n    const error = uploadResult.filter((u) => u?.result?.failed.length !== 0);\r\n    const resolve = uploadResult.filter((u) => u?.result?.failed.length !== 0);\r\n    if (success.length > 0) {\r\n      panes.push({\r\n        menuItem: (\r\n          <Menu.Item key=\"success\">\r\n            {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n            <span style={{ fontWeight: '700' }}>Thành công</span>&nbsp;\r\n            {' '}\r\n            (\r\n            {success.length}\r\n            )\r\n          </Menu.Item>\r\n        ),\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <DataTable\r\n              columns={resultColumns}\r\n              data={success.map((d, i) => ({ ...d, index: i + 1 }))}\r\n            />\r\n          </Tab.Pane>\r\n        ),\r\n      });\r\n    }\r\n    if (resolve.length > 0) {\r\n      panes.push({\r\n        menuItem: (\r\n          <Menu.Item key=\"resolve\">\r\n            {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n            <span style={{ fontWeight: '700' }}>Cần chỉnh sửa</span>&nbsp;\r\n            {' '}\r\n            (\r\n            {resolve.length}\r\n            )\r\n          </Menu.Item>\r\n        ),\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <DataTable\r\n              columns={resultColumns}\r\n              data={resolve.map((d, i) => ({ ...d, index: i + 1 }))}\r\n              actions={[\r\n                {\r\n                  icon: <FiEdit3 />,\r\n                  color: 'purple',\r\n                  title: 'Cập nhật hồ sơ',\r\n                  onClick: (r) => getProfile(r, r?.result?.profileId),\r\n                  hidden: (r) => !r?.result?.profileId,\r\n                },\r\n              ]}\r\n            />\r\n          </Tab.Pane>\r\n        ),\r\n      });\r\n    }\r\n    if (error.length > 0) {\r\n      panes.push({\r\n        menuItem: (\r\n          <Menu.Item key=\"error\">\r\n            {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n            <span style={{ fontWeight: '700' }}>Lỗi</span>&nbsp;\r\n            {' '}\r\n            (\r\n            {error.length}\r\n            )\r\n          </Menu.Item>\r\n        ),\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <DataTable\r\n              columns={resultColumns}\r\n              data={error.map((d, i) => ({ ...d, index: i + 1 }))}\r\n            />\r\n          </Tab.Pane>\r\n        ),\r\n      });\r\n    }\r\n\r\n    return (\r\n      <MenuWrapper>\r\n        <Tab panes={panes} defaultActiveIndex={0} renderActiveOnly />\r\n      </MenuWrapper>\r\n    );\r\n    // eslint-disable-next-line\r\n  }, [uploadResult, resultColumns]);\r\n\r\n  const jsx_downloadTemplate = useMemo(() => (\r\n    <Message\r\n      info\r\n      icon\r\n      style={{ marginBottom: 0, cursor: 'pointer' }}\r\n      onClick={() => downloadFile(excelTemplate)}\r\n    >\r\n      <Icon name=\"download\" />\r\n      <Message.Content>\r\n        <Message.Header>Tải tệp tin mẫu</Message.Header>\r\n        Sử dụng tệp tin mẫu, để đảm bảo dữ liệu chính xác\r\n      </Message.Content>\r\n    </Message>\r\n  ), []);\r\n\r\n  const jsx_content = useMemo(() => {\r\n    switch (step) {\r\n      case steps.downloadTemplate:\r\n        return jsx_downloadTemplate;\r\n      case steps.reviewData:\r\n        return jsx_menuTable;\r\n      case steps.result:\r\n        return jsx_menuResultTable;\r\n      default:\r\n        return jsx_downloadTemplate;\r\n    }\r\n  }, [step, jsx_downloadTemplate, jsx_menuTable, jsx_menuResultTable]);\r\n  // #endregion\r\n\r\n  useEffect(() => {\r\n    if (examinationTypeList.length === 0) {\r\n      dispatch(getExaminationTypes());\r\n    }\r\n    if (samplingPlaceList.length === 0) {\r\n      dispatch(getSamplingPlaces());\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (errorData.length === 0) {\r\n      onDisable(false);\r\n    } else {\r\n      onDisable(true);\r\n    }\r\n  }, [errorData]);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <FlexWrapper>\r\n          <Button\r\n            icon=\"upload\"\r\n            labelPosition=\"right\"\r\n            color=\"green\"\r\n            content=\"Chọn File\"\r\n            onClick={() => {\r\n              refresh();\r\n              fileInputRef.current.click();\r\n            }}\r\n          />\r\n          {step === steps.reviewData && errorData.length === 0 && (\r\n            <Button\r\n              icon=\"checkmark\"\r\n              labelPosition=\"right\"\r\n              color=\"blue\"\r\n              content=\"Tạo mẫu\"\r\n              onClick={() => {\r\n                if (uploadResult.filter((u) => u?.result?.message && u.result.message.includes('Đã chỉnh sửa')).length > 0) {\r\n                  // resolveData();\r\n                } else {\r\n                  uploadData();\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n        </FlexWrapper>\r\n        {selectedFile ? (\r\n          <div style={{ marginTop: '10px', marginLeft: '10px', fontWeight: '700' }}>\r\n            Tên file:\r\n            {' '}\r\n            {selectedFile.name}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n      <input\r\n        hidden\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        onChange={(e) => {\r\n          setSelectedFile(e.target.files[0]);\r\n        }}\r\n        accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n      />\r\n      {jsx_content}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImportExaminationSection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}