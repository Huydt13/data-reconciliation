{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dayMatchesModifier = dayMatchesModifier;\nexports.getModifiersForDay = getModifiersForDay;\nvar _DateUtils = require('./DateUtils');\nvar _Helpers = require('./Helpers');\n\n/**\n * Return `true` if a date matches the specified modifier.\n *\n * @export\n * @param {Date} day\n * @param {Any} modifier\n * @return {Boolean}\n */\nfunction dayMatchesModifier(day, modifier) {\n  if (!modifier) {\n    return false;\n  }\n  var arr = Array.isArray(modifier) ? modifier : [modifier];\n  return arr.some(function (mod) {\n    if (!mod) {\n      return false;\n    }\n    if (mod instanceof Date) {\n      return (0, _DateUtils.isSameDay)(day, mod);\n    }\n    if ((0, _Helpers.isRangeOfDates)(mod)) {\n      return (0, _DateUtils.isDayInRange)(day, mod);\n    }\n    if (mod.after && mod.before && (0, _DateUtils.isDayAfter)(mod.before, mod.after)) {\n      return (0, _DateUtils.isDayAfter)(day, mod.after) && (0, _DateUtils.isDayBefore)(day, mod.before);\n    }\n    if (mod.after && mod.before && ((0, _DateUtils.isDayAfter)(mod.after, mod.before) || (0, _DateUtils.isSameDay)(mod.after, mod.before))) {\n      return (0, _DateUtils.isDayAfter)(day, mod.after) || (0, _DateUtils.isDayBefore)(day, mod.before);\n    }\n    if (mod.after) {\n      return (0, _DateUtils.isDayAfter)(day, mod.after);\n    }\n    if (mod.before) {\n      return (0, _DateUtils.isDayBefore)(day, mod.before);\n    }\n    if (mod.daysOfWeek) {\n      return mod.daysOfWeek.some(function (dayOfWeek) {\n        return day.getDay() === dayOfWeek;\n      });\n    }\n    if (typeof mod === 'function') {\n      return mod(day);\n    }\n    return false;\n  });\n}\n\n/**\n * Return the modifiers matching the given day for the given\n * object of modifiers.\n *\n * @export\n * @param {Date} day\n * @param {Object} [modifiersObj={}]\n * @return {Array}\n */\nfunction getModifiersForDay(day) {\n  var modifiersObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Object.keys(modifiersObj).reduce(function (modifiers, modifierName) {\n    var value = modifiersObj[modifierName];\n    if (dayMatchesModifier(day, value)) {\n      modifiers.push(modifierName);\n    }\n    return modifiers;\n  }, []);\n}\nexports.default = {\n  dayMatchesModifier: dayMatchesModifier,\n  getModifiersForDay: getModifiersForDay\n};","map":{"version":3,"sources":["../src/ModifiersUtils.js"],"names":["dayMatchesModifier","day","modifier","arr","Array","isArray","some","mod","Date","after","before","daysOfWeek","getDay","dayOfWeek","getModifiersForDay","modifiersObj","keys","reduce","modifiers","modifierName","value","push"],"mappings":"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","sourcesContent":["import { isDayAfter, isDayBefore, isDayInRange, isSameDay } from './DateUtils';\nimport { isRangeOfDates } from './Helpers';\n\n/**\n * Return `true` if a date matches the specified modifier.\n *\n * @export\n * @param {Date} day\n * @param {Any} modifier\n * @return {Boolean}\n */\nexport function dayMatchesModifier(day, modifier) {\n  if (!modifier) {\n    return false;\n  }\n  const arr = Array.isArray(modifier) ? modifier : [modifier];\n  return arr.some(mod => {\n    if (!mod) {\n      return false;\n    }\n    if (mod instanceof Date) {\n      return isSameDay(day, mod);\n    }\n    if (isRangeOfDates(mod)) {\n      return isDayInRange(day, mod);\n    }\n    if (mod.after && mod.before && isDayAfter(mod.before, mod.after)) {\n      return isDayAfter(day, mod.after) && isDayBefore(day, mod.before);\n    }\n    if (\n      mod.after &&\n      mod.before &&\n      (isDayAfter(mod.after, mod.before) || isSameDay(mod.after, mod.before))\n    ) {\n      return isDayAfter(day, mod.after) || isDayBefore(day, mod.before);\n    }\n    if (mod.after) {\n      return isDayAfter(day, mod.after);\n    }\n    if (mod.before) {\n      return isDayBefore(day, mod.before);\n    }\n    if (mod.daysOfWeek) {\n      return mod.daysOfWeek.some(dayOfWeek => day.getDay() === dayOfWeek);\n    }\n    if (typeof mod === 'function') {\n      return mod(day);\n    }\n    return false;\n  });\n}\n\n/**\n * Return the modifiers matching the given day for the given\n * object of modifiers.\n *\n * @export\n * @param {Date} day\n * @param {Object} [modifiersObj={}]\n * @return {Array}\n */\nexport function getModifiersForDay(day, modifiersObj = {}) {\n  return Object.keys(modifiersObj).reduce((modifiers, modifierName) => {\n    const value = modifiersObj[modifierName];\n    if (dayMatchesModifier(day, value)) {\n      modifiers.push(modifierName);\n    }\n    return modifiers;\n  }, []);\n}\n\nexport default { dayMatchesModifier, getModifiersForDay };\n"]},"metadata":{},"sourceType":"script"}