{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\medical-test\\\\components\\\\quick-test\\\\PersonalQuickTestHistoryDetailTable.js\";\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { DataTable, InfoRow } from 'app/components/shared';\nimport { Header } from 'semantic-ui-react';\nimport { formatToTime, renderExaminationResult } from 'app/utils/helpers';\nconst immunizationStatusOptions = [{\n  key: 0,\n  value: 0,\n  text: 'Chưa tiêm'\n}, {\n  key: 1,\n  value: 1,\n  text: 'Tiêm 1 mũi'\n}, {\n  key: 2,\n  value: 2,\n  text: 'Tiêm 2 mũi'\n}, {\n  key: 3,\n  value: 3,\n  text: 'Chưa rõ'\n}, {\n  key: 4,\n  value: 4,\n  text: 'Tiêm trên 2 mũi'\n}];\nconst PersonalQuickTestHistoryDetailTable = _ref => {\n  var _data$examinationType, _data$examinationType2, _data$samplingPlace$n, _data$samplingPlace;\n  let {\n    data\n  } = _ref;\n  const columns = [{\n    Header: '#',\n    accessor: 'index'\n  }, {\n    Header: 'Mã',\n    accessor: 'code'\n  }, {\n    Header: 'Họ và tên',\n    formatter: row => {\n      var _row$person;\n      return row === null || row === void 0 ? void 0 : (_row$person = row.person) === null || _row$person === void 0 ? void 0 : _row$person.name;\n    },\n    cutlength: 50\n  }, {\n    Header: 'Tình trạng tiêm vắc xin',\n    formatter: _ref2 => {\n      var _immunizationStatusOp, _immunizationStatusOp2;\n      let {\n        vaccinationStatus,\n        lastInjectionDate\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, typeof vaccinationStatus !== 'undefined' ? /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, (_immunizationStatusOp = (_immunizationStatusOp2 = immunizationStatusOptions.find(o => o.value === vaccinationStatus)) === null || _immunizationStatusOp2 === void 0 ? void 0 : _immunizationStatusOp2.text) !== null && _immunizationStatusOp !== void 0 ? _immunizationStatusOp : '') : null, typeof lastInjectionDate !== 'undefined' && vaccinationStatus !== 0 && vaccinationStatus !== 3 ? /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, moment(lastInjectionDate).format('DD-MM-YYYY')) : null);\n    }\n  }, {\n    Header: 'Thông tin lấy mẫu',\n    formatter: _ref3 => {\n      let {\n        unit: {\n          name\n        },\n        examinationType,\n        date\n      } = _ref3;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: '-30px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, examinationType === null || examinationType === void 0 ? void 0 : examinationType.name), /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, name), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, formatToTime(date)));\n    }\n  }, {\n    Header: 'Triệu chứng',\n    formatter: _ref4 => {\n      let {\n        hasSymptom\n      } = _ref4;\n      return hasSymptom ? 'Có' : 'Không';\n    }\n  }, {\n    Header: 'Kết quả',\n    formatter: _ref5 => {\n      let {\n        result\n      } = _ref5;\n      return result ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, renderExaminationResult(result))) : '';\n    }\n  }];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InfoRow, {\n    big: true,\n    label: \"L\\xFD do x\\xE9t nghi\\u1EC7m\",\n    content: (_data$examinationType = data === null || data === void 0 ? void 0 : (_data$examinationType2 = data.examinationType) === null || _data$examinationType2 === void 0 ? void 0 : _data$examinationType2.name) !== null && _data$examinationType !== void 0 ? _data$examinationType : '...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfoRow, {\n    big: true,\n    label: \"N\\u01A1i l\\u1EA5y m\\u1EABu\",\n    content: (_data$samplingPlace$n = data === null || data === void 0 ? void 0 : (_data$samplingPlace = data.samplingPlace) === null || _data$samplingPlace === void 0 ? void 0 : _data$samplingPlace.name) !== null && _data$samplingPlace$n !== void 0 ? _data$samplingPlace$n : '...',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DataTable, {\n    title: \"Danh s\\xE1ch test nhanh\",\n    columns: columns,\n    data: [data],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }));\n};\nPersonalQuickTestHistoryDetailTable.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string\n  })\n};\nPersonalQuickTestHistoryDetailTable.defaultProps = {\n  data: undefined\n};\nexport default PersonalQuickTestHistoryDetailTable;","map":{"version":3,"names":["React","moment","PropTypes","DataTable","InfoRow","Header","formatToTime","renderExaminationResult","immunizationStatusOptions","key","value","text","PersonalQuickTestHistoryDetailTable","_ref","_data$examinationType","_data$examinationType2","_data$samplingPlace$n","_data$samplingPlace","data","columns","accessor","formatter","row","_row$person","person","name","cutlength","_ref2","_immunizationStatusOp","_immunizationStatusOp2","vaccinationStatus","lastInjectionDate","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","sub","find","o","format","_ref3","unit","examinationType","date","style","marginBottom","_ref4","hasSymptom","_ref5","result","Fragment","big","label","content","samplingPlace","title","propTypes","shape","id","string","defaultProps","undefined"],"sources":["H:/BAKCO/pj/data reconciliation/src/medical-test/components/quick-test/PersonalQuickTestHistoryDetailTable.js"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { DataTable, InfoRow } from 'app/components/shared';\nimport { Header } from 'semantic-ui-react';\nimport {\n  formatToTime,\n  renderExaminationResult,\n} from 'app/utils/helpers';\n\nconst immunizationStatusOptions = [\n  { key: 0, value: 0, text: 'Chưa tiêm' },\n  { key: 1, value: 1, text: 'Tiêm 1 mũi' },\n  { key: 2, value: 2, text: 'Tiêm 2 mũi' },\n  { key: 3, value: 3, text: 'Chưa rõ' },\n  { key: 4, value: 4, text: 'Tiêm trên 2 mũi' },\n];\n\nconst PersonalQuickTestHistoryDetailTable = ({ data }) => {\n  const columns = [\n    { Header: '#', accessor: 'index' },\n    { Header: 'Mã', accessor: 'code' },\n    {\n      Header: 'Họ và tên',\n      formatter: (row) => row?.person?.name,\n      cutlength: 50,\n    },\n    {\n      Header: 'Tình trạng tiêm vắc xin',\n      formatter: ({ vaccinationStatus, lastInjectionDate }) => (\n        <div>\n          {typeof vaccinationStatus !== 'undefined' ? (\n            <Header sub>\n              {immunizationStatusOptions.find((o) => o.value === vaccinationStatus)?.text ?? ''}\n            </Header>\n          ) : null}\n          {typeof lastInjectionDate !== 'undefined' && vaccinationStatus !== 0 && vaccinationStatus !== 3 ? (\n            <span>{moment(lastInjectionDate).format('DD-MM-YYYY')}</span>\n          ) : null}\n        </div>\n      ),\n    },\n    {\n      Header: 'Thông tin lấy mẫu',\n      formatter: ({ unit: { name }, examinationType, date }) => (\n        <div>\n          <div style={{ marginBottom: '-30px' }}>{examinationType?.name}</div>\n          <Header sub>{name}</Header>\n          <span>{formatToTime(date)}</span>\n        </div>\n      ),\n    },\n    {\n      Header: 'Triệu chứng',\n      formatter: ({ hasSymptom }) => hasSymptom ? 'Có' : 'Không',\n    },\n    {\n      Header: 'Kết quả',\n      formatter: ({ result }) => result ? (\n        <div>\n          <Header sub>{renderExaminationResult(result)}</Header>\n        </div>\n        ) : (\n          ''\n        ),\n    },\n  ];\n\n  return (\n    <>\n      <InfoRow\n        big\n        label=\"Lý do xét nghiệm\"\n        content={data?.examinationType?.name ?? '...'}\n      />\n      <InfoRow\n        big\n        label=\"Nơi lấy mẫu\"\n        content={data?.samplingPlace?.name ?? '...'}\n      />\n      <DataTable\n        title=\"Danh sách test nhanh\"\n        columns={columns}\n        data={[data]}\n      />\n    </>\n  );\n};\n\nPersonalQuickTestHistoryDetailTable.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string,\n  }),\n};\n\nPersonalQuickTestHistoryDetailTable.defaultProps = {\n  data: undefined,\n};\n\nexport default PersonalQuickTestHistoryDetailTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}