{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\chain\\\\components\\\\ContactSubjectTable.js\";\n/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { Label, Form, Button, Select, Checkbox, Header } from 'semantic-ui-react';\nimport { FiX, FiEdit2, FiPlus, FiEye } from 'react-icons/fi';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DataTable } from 'app/components/shared';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showConfirmModal } from 'app/actions/global';\nimport { getAskingResult, clearAsking } from 'contact/actions/contact';\nimport EvaluateTable from './EvaluateTable';\nimport SubjectSection from './SubjectSection';\nimport ContactRelativeTable from './ContactRelativeTable';\nconst relations = ['Cha', 'Mẹ', 'Vợ', 'Chồng', 'Ông', 'Bà', 'Cô', 'Dì', 'Chú', 'Bác', 'Con', 'Cháu', 'Anh', 'Chị', 'Em', 'Bạn bè', 'Đồng nghiệp', 'Họ hàng', 'Tổ bay', 'Khác'];\nconst StyledFormField = styled(Form.Field)`\n  text-align: right !important;\n`;\nconst ButtonGroupWrapper = styled.div`\n  margin-bottom: 10px;\n  text-align: right;\n  & .buttons {\n    margin-top: 16px;\n    margin-right: 4px;\n  }\n`;\nconst MarginLeftButton = styled(Button)`\n  margin-left: 10px !important;\n`;\nconst StyledDiv = styled.div`\n  margin-bottom: 16px !important;\n`;\nconst ContactSubjectTable = props => {\n  var _currentSubject$relat;\n  const {\n    contactId,\n    profileId,\n    fromSubject,\n    loading: loadingProp,\n    // initial toSubjects from get api\n    toSubjects: toSubjectsProp,\n    onChange,\n    onDisabled,\n    onDeletingChange,\n    infectionTypeId\n  } = props;\n  const methods = useForm();\n  const dispatch = useDispatch();\n  const [toSubjectList, setToSubjectList] = useState(toSubjectsProp);\n  const [deletedSubjectList, setDeletedSubjectList] = useState([]);\n  useEffect(() => {\n    setToSubjectList(toSubjectsProp);\n  }, [toSubjectsProp]);\n  useEffect(() => {\n    onChange(toSubjectList);\n  }, [onChange, toSubjectList]);\n  const [isCreate, setIsCreate] = useState(false);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [bothInvestigationAreTheSame, setBothInvestigationAreTheSame] = useState(false);\n  useEffect(() => {\n    onDisabled(isCreate || isUpdate);\n  }, [isCreate, isUpdate, onDisabled]);\n  const [currentSubject, setCurrentSubject] = useState(null);\n  // set sKey for non-sKey subject\n  useEffect(() => {\n    if (currentSubject && !currentSubject.sKey) {\n      setCurrentSubject(cs => {\n        var _cs$id;\n        return {\n          ...cs,\n          sKey: (_cs$id = cs === null || cs === void 0 ? void 0 : cs.id) !== null && _cs$id !== void 0 ? _cs$id : `@${uuidv4()}`\n        };\n      });\n    }\n  }, [currentSubject]);\n  const [relationship, setRelationship] = useState((_currentSubject$relat = currentSubject === null || currentSubject === void 0 ? void 0 : currentSubject.relationship) !== null && _currentSubject$relat !== void 0 ? _currentSubject$relat : '');\n  const [relationOptions, setRelationOptions] = useState(relations);\n  const realtionshipWithSubject = /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    control: Select,\n    search: true,\n    deburr: true,\n    fluid: true,\n    clearable: true,\n    error: !relationship,\n    options: relationOptions.map(r => ({\n      key: r,\n      text: r,\n      value: r\n    })),\n    label: \"Quan h\\u1EC7 v\\u1EDBi ca ch\\u1EC9 \\u0111i\\u1EC3m\",\n    allowAdditions: true,\n    additionLabel: \"Kh\\xE1c: \",\n    onAddItem: (e, _ref) => {\n      let {\n        value\n      } = _ref;\n      setRelationOptions([...relations, value]);\n    },\n    name: \"relationWithSubject\",\n    value: relationship,\n    onChange: (e, _ref2) => {\n      let {\n        value\n      } = _ref2;\n      setRelationship(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  });\n  // #endregion\n\n  const contactRelativeTable = useMemo(() => /*#__PURE__*/React.createElement(ContactRelativeTable, {\n    profileId: profileId,\n    toSubjectList: toSubjectList,\n    onChange: setCurrentSubject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }), [profileId, toSubjectList]);\n  // #endregion\n\n  const verifiedButton = /*#__PURE__*/React.createElement(StyledFormField, {\n    control: Checkbox,\n    label: \"\\u0110i\\u1EC1u tra v\\xE0 x\\xE1c minh \\u0111\\u1ED1i t\\u01B0\\u1EE3ng ngay\",\n    checked: bothInvestigationAreTheSame,\n    onClick: (e, _ref3) => {\n      let {\n        checked\n      } = _ref3;\n      setBothInvestigationAreTheSame(checked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  });\n  // #endregion\n\n  const {\n    subjectDetail: {\n      infectionType\n    }\n  } = useSelector(s => s.chain);\n  const evaluateTable = useMemo(() => /*#__PURE__*/React.createElement(EvaluateTable, {\n    isAsking: true,\n    isVerified: false,\n    infectionTypeId: infectionTypeId || (infectionType === null || infectionType === void 0 ? void 0 : infectionType.id),\n    subjectId: currentSubject === null || currentSubject === void 0 ? void 0 : currentSubject.id,\n    criterias: currentSubject === null || currentSubject === void 0 ? void 0 : currentSubject.criterias,\n    contactId: contactId,\n    toSubjects: toSubjectsProp,\n    onChange: d => {\n      setCurrentSubject(cs => ({\n        ...cs,\n        criterias: d\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), [currentSubject, contactId, toSubjectsProp, infectionType, infectionTypeId]);\n\n  // #region clear form\n  const clearForm = () => {\n    dispatch(clearAsking());\n    setCurrentSubject(null);\n    setRelationship('');\n  };\n  // #endregion\n\n  const {\n    loadingGetAskingResult,\n    loadingUpdateAsking\n  } = useSelector(state => state.contact);\n  const tableColumns = useMemo(() => [{\n    Header: 'Loại',\n    formatter: _ref4 => {\n      var _type$colorCode, _type$name;\n      let {\n        type\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(Label, {\n        basic: true,\n        color: (_type$colorCode = type === null || type === void 0 ? void 0 : type.colorCode) !== null && _type$colorCode !== void 0 ? _type$colorCode : 'black',\n        content: (_type$name = type === null || type === void 0 ? void 0 : type.name) !== null && _type$name !== void 0 ? _type$name : 'F?',\n        className: \"type-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }\n      });\n    }\n  }, {\n    Header: 'Tên',\n    formatter: row => ((row === null || row === void 0 ? void 0 : row.fullName) || '').toUpperCase()\n  }, {\n    Header: 'Quan hệ với ca chỉ điểm',\n    formatter: row => row.relationship\n  }, {\n    Header: 'Ngày/Năm sinh',\n    formatter: row => (row === null || row === void 0 ? void 0 : row.dateOfBirth) ? moment(row === null || row === void 0 ? void 0 : row.dateOfBirth).format('YYYY') : 'Chưa xác định'\n  }], []);\n  const tableActions = [{\n    icon: /*#__PURE__*/React.createElement(FiPlus, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }),\n    title: 'Thêm',\n    color: 'green',\n    onClick: () => {\n      setIsCreate(true);\n      setIsUpdate(false);\n      clearForm();\n    },\n    globalAction: true\n  }, {\n    icon: /*#__PURE__*/React.createElement(FiEye, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }\n    }),\n    title: 'Xem',\n    color: 'blue',\n    onClick: _ref5 => {\n      let {\n        profileId: pId\n      } = _ref5;\n      window.open(`/profile/${pId}`, '_blank');\n    },\n    disabled: r => !(r === null || r === void 0 ? void 0 : r.id)\n  }, {\n    icon: /*#__PURE__*/React.createElement(FiEdit2, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }),\n    title: 'Sửa',\n    color: 'violet',\n    onClick: row => {\n      var _row$relationship, _row$bothInvestigatio;\n      setIsUpdate(true);\n      setIsCreate(false);\n      setCurrentSubject(row);\n      setRelationship((_row$relationship = row === null || row === void 0 ? void 0 : row.relationship) !== null && _row$relationship !== void 0 ? _row$relationship : '');\n      setBothInvestigationAreTheSame((_row$bothInvestigatio = row === null || row === void 0 ? void 0 : row.bothInvestigationAreTheSame) !== null && _row$bothInvestigatio !== void 0 ? _row$bothInvestigatio : false);\n    }\n    // disabled: !contactId,\n  }, {\n    icon: /*#__PURE__*/React.createElement(FiX, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }\n    }),\n    title: 'Xóa',\n    color: 'red',\n    onClick: row => dispatch(showConfirmModal('Xác nhận xóa?', () => {\n      clearForm();\n      setIsCreate(false);\n      setIsUpdate(false);\n      setToSubjectList(tsl => tsl.filter(ts => ts.sKey !== row.sKey));\n      // add only existed subjects on api's response to delete\n      if (!row.sKey.includes('@')) {\n        setDeletedSubjectList([...deletedSubjectList, row.sKey]);\n        onDeletingChange([...deletedSubjectList, row.sKey]);\n      }\n    }))\n  }];\n  const table = /*#__PURE__*/React.createElement(DataTable, {\n    title: \"Danh s\\xE1ch ti\\u1EBFp x\\xFAc\",\n    columns: tableColumns,\n    data: toSubjectList,\n    actions: tableActions,\n    loading: loadingUpdateAsking || loadingGetAskingResult || loadingProp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 5\n    }\n  });\n  const updateToSubjectList = () => {\n    var _currentSubject$crite;\n    // không có criterias\n    if (!((_currentSubject$crite = currentSubject.criterias) === null || _currentSubject$crite === void 0 ? void 0 : _currentSubject$crite.length)) {\n      if (isUpdate) {\n        setToSubjectList(tsl => tsl.map(s => s.sKey !== currentSubject.sKey ? s : {\n          ...currentSubject,\n          type: fromSubject.type === 1 || fromSubject.type === 2 ? 3 : null,\n          bothInvestigationAreTheSame,\n          relationship\n        }));\n      } else {\n        setToSubjectList(tsl => [...tsl, {\n          ...currentSubject,\n          type: fromSubject.type === 1 || fromSubject.type === 2 ? 3 : null,\n          relationship,\n          bothInvestigationAreTheSame\n        }]);\n      }\n      // có criterias\n    } else {\n      dispatch(getAskingResult(currentSubject.criterias)).then(type => {\n        if (isUpdate) {\n          setToSubjectList(tsl => tsl.map(s => {\n            if (s.sKey !== currentSubject.sKey) {\n              return s;\n            }\n            return {\n              ...currentSubject,\n              type,\n              relationship,\n              bothInvestigationAreTheSame,\n              updating: true\n            };\n          }));\n        } else {\n          setToSubjectList(tsl => [...tsl, {\n            ...currentSubject,\n            type,\n            relationship,\n            bothInvestigationAreTheSame\n          }]);\n        }\n      });\n    }\n    setIsCreate(false);\n    setIsUpdate(false);\n    clearForm();\n  };\n  const confirmButton = /*#__PURE__*/React.createElement(MarginLeftButton, {\n    basic: true,\n    color: isCreate ? 'green' : 'violet',\n    content: isCreate ? 'Thêm' : 'Cập nhật',\n    disabled: !relationship,\n    onClick: () => {\n      var _currentSubject$sKey;\n      // validate form if creating new profile\n      if (`${(_currentSubject$sKey = currentSubject === null || currentSubject === void 0 ? void 0 : currentSubject.sKey) !== null && _currentSubject$sKey !== void 0 ? _currentSubject$sKey : ''}`.includes('@')) {\n        methods.handleSubmit(updateToSubjectList)();\n      } else {\n        // skip validation if existed profile\n        updateToSubjectList();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 5\n    }\n  });\n  const cancelButton = /*#__PURE__*/React.createElement(MarginLeftButton, {\n    basic: true,\n    color: \"grey\",\n    content: \"Hu\\u1EF7\",\n    onClick: () => {\n      setIsCreate(false);\n      setIsUpdate(false);\n      clearForm();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 5\n    }\n  });\n  // #endregion\n\n  return /*#__PURE__*/React.createElement(StyledDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 5\n    }\n  }, table, (isCreate || isUpdate) && /*#__PURE__*/React.createElement(React.Fragment, null, isCreate && contactRelativeTable, /*#__PURE__*/React.createElement(Header, {\n    content: \"Th\\xF4ng tin \\u0111\\u1ED1i t\\u01B0\\u1EE3ng\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }, realtionshipWithSubject)), /*#__PURE__*/React.createElement(FormProvider, Object.assign({}, methods, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SubjectSection, {\n    initialSubject: currentSubject,\n    onChange: d => setCurrentSubject(cs => ({\n      ...cs,\n      ...d\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }\n  }), evaluateTable, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 17\n    }\n  }, verifiedButton)), /*#__PURE__*/React.createElement(ButtonGroupWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 13\n    }\n  }, confirmButton, cancelButton))));\n};\nContactSubjectTable.propTypes = {\n  contactId: PropTypes.string,\n  infectionTypeId: PropTypes.string,\n  profileId: PropTypes.number,\n  loading: PropTypes.bool,\n  fromSubject: PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.number\n  }),\n  toSubjects: PropTypes.arrayOf(PropTypes.shape({})),\n  onChange: PropTypes.func,\n  onDisabled: PropTypes.func,\n  onDeletingChange: PropTypes.func\n};\nContactSubjectTable.defaultProps = {\n  contactId: '',\n  infectionTypeId: '',\n  profileId: 0,\n  loading: false,\n  fromSubject: {},\n  toSubjects: [],\n  onChange: () => {},\n  onDisabled: () => {},\n  onDeletingChange: () => {}\n};\nexport default ContactSubjectTable;","map":{"version":3,"names":["React","useState","useEffect","useMemo","FormProvider","useForm","PropTypes","Label","Form","Button","Select","Checkbox","Header","FiX","FiEdit2","FiPlus","FiEye","styled","moment","v4","uuidv4","DataTable","useDispatch","useSelector","showConfirmModal","getAskingResult","clearAsking","EvaluateTable","SubjectSection","ContactRelativeTable","relations","StyledFormField","Field","ButtonGroupWrapper","div","MarginLeftButton","StyledDiv","ContactSubjectTable","props","_currentSubject$relat","contactId","profileId","fromSubject","loading","loadingProp","toSubjects","toSubjectsProp","onChange","onDisabled","onDeletingChange","infectionTypeId","methods","dispatch","toSubjectList","setToSubjectList","deletedSubjectList","setDeletedSubjectList","isCreate","setIsCreate","isUpdate","setIsUpdate","bothInvestigationAreTheSame","setBothInvestigationAreTheSame","currentSubject","setCurrentSubject","sKey","cs","_cs$id","id","relationship","setRelationship","relationOptions","setRelationOptions","realtionshipWithSubject","createElement","required","control","search","deburr","fluid","clearable","error","options","map","r","key","text","value","label","allowAdditions","additionLabel","onAddItem","e","_ref","name","_ref2","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","contactRelativeTable","verifiedButton","checked","onClick","_ref3","subjectDetail","infectionType","s","chain","evaluateTable","isAsking","isVerified","subjectId","criterias","d","clearForm","loadingGetAskingResult","loadingUpdateAsking","state","contact","tableColumns","formatter","_ref4","_type$colorCode","_type$name","type","basic","color","colorCode","content","className","row","fullName","toUpperCase","dateOfBirth","format","tableActions","icon","title","globalAction","_ref5","pId","window","open","disabled","_row$relationship","_row$bothInvestigatio","tsl","filter","ts","includes","table","columns","data","actions","updateToSubjectList","_currentSubject$crite","length","then","updating","confirmButton","_currentSubject$sKey","handleSubmit","cancelButton","Fragment","Group","widths","Object","assign","initialSubject","propTypes","string","number","bool","shape","arrayOf","func","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/chain/components/ContactSubjectTable.js"],"sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport {\n  Label,\n  Form,\n  Button,\n  Select,\n  Checkbox,\n  Header,\n} from 'semantic-ui-react';\nimport { FiX, FiEdit2, FiPlus, FiEye } from 'react-icons/fi';\nimport styled from 'styled-components';\n\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { DataTable } from 'app/components/shared';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { showConfirmModal } from 'app/actions/global';\nimport { getAskingResult, clearAsking } from 'contact/actions/contact';\n\nimport EvaluateTable from './EvaluateTable';\nimport SubjectSection from './SubjectSection';\nimport ContactRelativeTable from './ContactRelativeTable';\n\nconst relations = [\n  'Cha',\n  'Mẹ',\n  'Vợ',\n  'Chồng',\n  'Ông',\n  'Bà',\n  'Cô',\n  'Dì',\n  'Chú',\n  'Bác',\n  'Con',\n  'Cháu',\n  'Anh',\n  'Chị',\n  'Em',\n  'Bạn bè',\n  'Đồng nghiệp',\n  'Họ hàng',\n  'Tổ bay',\n  'Khác',\n];\n\nconst StyledFormField = styled(Form.Field)`\n  text-align: right !important;\n`;\nconst ButtonGroupWrapper = styled.div`\n  margin-bottom: 10px;\n  text-align: right;\n  & .buttons {\n    margin-top: 16px;\n    margin-right: 4px;\n  }\n`;\nconst MarginLeftButton = styled(Button)`\n  margin-left: 10px !important;\n`;\nconst StyledDiv = styled.div`\n  margin-bottom: 16px !important;\n`;\n\nconst ContactSubjectTable = (props) => {\n  const {\n    contactId,\n    profileId,\n    fromSubject,\n    loading: loadingProp,\n    // initial toSubjects from get api\n    toSubjects: toSubjectsProp,\n    onChange,\n    onDisabled,\n    onDeletingChange,\n    infectionTypeId,\n  } = props;\n\n  const methods = useForm();\n  const dispatch = useDispatch();\n\n  const [toSubjectList, setToSubjectList] = useState(toSubjectsProp);\n  const [deletedSubjectList, setDeletedSubjectList] = useState([]);\n  useEffect(() => {\n    setToSubjectList(toSubjectsProp);\n  }, [toSubjectsProp]);\n\n  useEffect(() => {\n    onChange(toSubjectList);\n  }, [onChange, toSubjectList]);\n\n  const [isCreate, setIsCreate] = useState(false);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [bothInvestigationAreTheSame, setBothInvestigationAreTheSame] =\n    useState(false);\n  useEffect(() => {\n    onDisabled(isCreate || isUpdate);\n  }, [isCreate, isUpdate, onDisabled]);\n  const [currentSubject, setCurrentSubject] = useState(null);\n  // set sKey for non-sKey subject\n  useEffect(() => {\n    if (currentSubject && !currentSubject.sKey) {\n      setCurrentSubject((cs) => ({\n        ...cs,\n        sKey: cs?.id ?? `@${uuidv4()}`,\n      }));\n    }\n  }, [currentSubject]);\n\n  const [relationship, setRelationship] = useState(\n    currentSubject?.relationship ?? '',\n  );\n  const [relationOptions, setRelationOptions] = useState(relations);\n  const realtionshipWithSubject = (\n    <Form.Field\n      required\n      control={Select}\n      search\n      deburr\n      fluid\n      clearable\n      error={!relationship}\n      options={relationOptions.map((r) => ({\n        key: r,\n        text: r,\n        value: r,\n      }))}\n      label=\"Quan hệ với ca chỉ điểm\"\n      allowAdditions\n      additionLabel=\"Khác: \"\n      onAddItem={(e, { value }) => {\n        setRelationOptions([...relations, value]);\n      }}\n      name=\"relationWithSubject\"\n      value={relationship}\n      onChange={(e, { value }) => {\n        setRelationship(value);\n      }}\n    />\n  );\n  // #endregion\n\n  const contactRelativeTable = useMemo(\n    () => (\n      <ContactRelativeTable\n        profileId={profileId}\n        toSubjectList={toSubjectList}\n        onChange={setCurrentSubject}\n      />\n    ),\n    [profileId, toSubjectList],\n  );\n  // #endregion\n\n  const verifiedButton = (\n    <StyledFormField\n      control={Checkbox}\n      label=\"Điều tra và xác minh đối tượng ngay\"\n      checked={bothInvestigationAreTheSame}\n      onClick={(e, { checked }) => {\n        setBothInvestigationAreTheSame(checked);\n      }}\n    />\n  );\n  // #endregion\n\n  const {\n    subjectDetail: { infectionType },\n  } = useSelector((s) => s.chain);\n\n  const evaluateTable = useMemo(\n    () => (\n      <EvaluateTable\n        isAsking\n        isVerified={false}\n        infectionTypeId={infectionTypeId || infectionType?.id}\n        subjectId={currentSubject?.id}\n        criterias={currentSubject?.criterias}\n        contactId={contactId}\n        toSubjects={toSubjectsProp}\n        onChange={(d) => {\n          setCurrentSubject((cs) => ({\n            ...cs,\n            criterias: d,\n          }));\n        }}\n      />\n    ),\n    [currentSubject, contactId, toSubjectsProp, infectionType, infectionTypeId],\n  );\n\n  // #region clear form\n  const clearForm = () => {\n    dispatch(clearAsking());\n    setCurrentSubject(null);\n    setRelationship('');\n  };\n  // #endregion\n\n  const { loadingGetAskingResult, loadingUpdateAsking } = useSelector(\n    (state) => state.contact,\n  );\n  const tableColumns = useMemo(\n    () => [\n      {\n        Header: 'Loại',\n        formatter: ({ type }) => (\n          <Label\n            basic\n            color={type?.colorCode ?? 'black'}\n            content={type?.name ?? 'F?'}\n            className=\"type-label\"\n          />\n        ),\n      },\n      {\n        Header: 'Tên',\n        formatter: (row) => (row?.fullName || '').toUpperCase(),\n      },\n      {\n        Header: 'Quan hệ với ca chỉ điểm',\n        formatter: (row) => row.relationship,\n      },\n      {\n        Header: 'Ngày/Năm sinh',\n        formatter: (row) =>\n          row?.dateOfBirth\n            ? moment(row?.dateOfBirth).format('YYYY')\n            : 'Chưa xác định',\n      },\n    ],\n    [],\n  );\n\n  const tableActions = [\n    {\n      icon: <FiPlus />,\n      title: 'Thêm',\n      color: 'green',\n      onClick: () => {\n        setIsCreate(true);\n        setIsUpdate(false);\n        clearForm();\n      },\n      globalAction: true,\n    },\n    {\n      icon: <FiEye />,\n      title: 'Xem',\n      color: 'blue',\n      onClick: ({ profileId: pId }) => {\n        window.open(`/profile/${pId}`, '_blank');\n      },\n      disabled: (r) => !r?.id,\n    },\n    {\n      icon: <FiEdit2 />,\n      title: 'Sửa',\n      color: 'violet',\n      onClick: (row) => {\n        setIsUpdate(true);\n        setIsCreate(false);\n        setCurrentSubject(row);\n        setRelationship(row?.relationship ?? '');\n        setBothInvestigationAreTheSame(\n          row?.bothInvestigationAreTheSame ?? false,\n        );\n      },\n      // disabled: !contactId,\n    },\n    {\n      icon: <FiX />,\n      title: 'Xóa',\n      color: 'red',\n      onClick: (row) =>\n        dispatch(\n          showConfirmModal('Xác nhận xóa?', () => {\n            clearForm();\n            setIsCreate(false);\n            setIsUpdate(false);\n            setToSubjectList((tsl) => tsl.filter((ts) => ts.sKey !== row.sKey));\n            // add only existed subjects on api's response to delete\n            if (!row.sKey.includes('@')) {\n              setDeletedSubjectList([...deletedSubjectList, row.sKey]);\n              onDeletingChange([...deletedSubjectList, row.sKey]);\n            }\n          }),\n        ),\n    },\n  ];\n\n  const table = (\n    <DataTable\n      title=\"Danh sách tiếp xúc\"\n      columns={tableColumns}\n      data={toSubjectList}\n      actions={tableActions}\n      loading={loadingUpdateAsking || loadingGetAskingResult || loadingProp}\n    />\n  );\n\n  const updateToSubjectList = () => {\n    // không có criterias\n    if (!currentSubject.criterias?.length) {\n      if (isUpdate) {\n        setToSubjectList((tsl) =>\n          tsl.map((s) =>\n            s.sKey !== currentSubject.sKey\n              ? s\n              : {\n                  ...currentSubject,\n                  type:\n                    fromSubject.type === 1 || fromSubject.type === 2 ? 3 : null,\n                  bothInvestigationAreTheSame,\n                  relationship,\n                },\n          ),\n        );\n      } else {\n        setToSubjectList((tsl) => [\n          ...tsl,\n          {\n            ...currentSubject,\n            type: fromSubject.type === 1 || fromSubject.type === 2 ? 3 : null,\n            relationship,\n            bothInvestigationAreTheSame,\n          },\n        ]);\n      }\n      // có criterias\n    } else {\n      dispatch(getAskingResult(currentSubject.criterias)).then((type) => {\n        if (isUpdate) {\n          setToSubjectList((tsl) =>\n            tsl.map((s) => {\n              if (s.sKey !== currentSubject.sKey) {\n                return s;\n              }\n              return {\n                ...currentSubject,\n                type,\n                relationship,\n                bothInvestigationAreTheSame,\n                updating: true,\n              };\n            }),\n          );\n        } else {\n          setToSubjectList((tsl) => [\n            ...tsl,\n            {\n              ...currentSubject,\n              type,\n              relationship,\n              bothInvestigationAreTheSame,\n            },\n          ]);\n        }\n      });\n    }\n    setIsCreate(false);\n    setIsUpdate(false);\n    clearForm();\n  };\n\n  const confirmButton = (\n    <MarginLeftButton\n      basic\n      color={isCreate ? 'green' : 'violet'}\n      content={isCreate ? 'Thêm' : 'Cập nhật'}\n      disabled={!relationship}\n      onClick={() => {\n        // validate form if creating new profile\n        if (`${currentSubject?.sKey ?? ''}`.includes('@')) {\n          methods.handleSubmit(updateToSubjectList)();\n        } else {\n          // skip validation if existed profile\n          updateToSubjectList();\n        }\n      }}\n    />\n  );\n\n  const cancelButton = (\n    <MarginLeftButton\n      basic\n      color=\"grey\"\n      content=\"Huỷ\"\n      onClick={() => {\n        setIsCreate(false);\n        setIsUpdate(false);\n        clearForm();\n      }}\n    />\n  );\n  // #endregion\n\n  return (\n    <StyledDiv>\n      {table}\n      {(isCreate || isUpdate) && (\n        <>\n          {isCreate && contactRelativeTable}\n          <Header content=\"Thông tin đối tượng\" />\n          <div className=\"ui form\">\n            <Form.Group widths=\"equal\">{realtionshipWithSubject}</Form.Group>\n          </div>\n          <FormProvider {...methods}>\n            <SubjectSection\n              initialSubject={currentSubject}\n              onChange={(d) => setCurrentSubject((cs) => ({ ...cs, ...d }))}\n            />\n            {evaluateTable}\n            {\n              <div className=\"ui form\">\n                <Form.Group widths=\"equal\">{verifiedButton}</Form.Group>\n              </div>\n            }\n            <ButtonGroupWrapper>\n              {confirmButton}\n              {cancelButton}\n            </ButtonGroupWrapper>\n          </FormProvider>\n        </>\n      )}\n    </StyledDiv>\n  );\n};\n\nContactSubjectTable.propTypes = {\n  contactId: PropTypes.string,\n  infectionTypeId: PropTypes.string,\n  profileId: PropTypes.number,\n  loading: PropTypes.bool,\n  fromSubject: PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.number,\n  }),\n  toSubjects: PropTypes.arrayOf(PropTypes.shape({})),\n  onChange: PropTypes.func,\n  onDisabled: PropTypes.func,\n  onDeletingChange: PropTypes.func,\n};\n\nContactSubjectTable.defaultProps = {\n  contactId: '',\n  infectionTypeId: '',\n  profileId: 0,\n  loading: false,\n  fromSubject: {},\n  toSubjects: [],\n  onChange: () => {},\n  onDisabled: () => {},\n  onDeletingChange: () => {},\n};\n\nexport default ContactSubjectTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}