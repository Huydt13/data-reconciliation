{"ast":null,"code":"import types from 'treatment/actions/types';\nconst INITIAL_STATE = {\n  facilityData: {},\n  getFacilitiesLoading: false,\n  createFacilityLoading: false,\n  updateFacilityLoading: false,\n  deleteFacilityLoading: false,\n  setManagerLoading: false,\n  undoTreatmentLoading: false\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.GET_FACILITY_REQUEST:\n      {\n        return {\n          ...state,\n          getFacilitiesLoading: true\n        };\n      }\n    case types.GET_FACILITY_SUCCESS:\n      {\n        return {\n          ...state,\n          getFacilitiesLoading: false,\n          facilityData: action.payload\n        };\n      }\n    case types.GET_FACILITY_FAILURE:\n      {\n        return {\n          ...state,\n          getFacilitiesLoading: false\n        };\n      }\n    case types.CREATE_FACILITY_REQUEST:\n      {\n        return {\n          ...state,\n          createFacilityLoading: true\n        };\n      }\n    case types.CREATE_FACILITY_SUCCESS:\n      {\n        return {\n          ...state,\n          createFacilityLoading: false\n        };\n      }\n    case types.CREATE_FACILITY_FAILURE:\n      {\n        return {\n          ...state,\n          createFacilityLoading: false\n        };\n      }\n    case types.UPDATE_FACILITY_REQUEST:\n      {\n        return {\n          ...state,\n          updateFacilityLoading: true\n        };\n      }\n    case types.UPDATE_FACILITY_SUCCESS:\n      {\n        return {\n          ...state,\n          updateFacilityLoading: false\n        };\n      }\n    case types.UPDATE_FACILITY_FAILURE:\n      {\n        return {\n          ...state,\n          updateFacilityLoading: false\n        };\n      }\n    case types.DELETE_FACILITY_REQUEST:\n      {\n        return {\n          ...state,\n          deleteFacilityLoading: true\n        };\n      }\n    case types.DELETE_FACILITY_SUCCESS:\n      {\n        return {\n          ...state,\n          deleteFacilityLoading: false\n        };\n      }\n    case types.DELETE_FACILITY_FAILURE:\n      {\n        return {\n          ...state,\n          deleteFacilityLoading: false\n        };\n      }\n    case types.TM_UNDO_REQUEST:\n      {\n        return {\n          ...state,\n          undoTreatmentLoading: true\n        };\n      }\n    case types.TM_UNDO_SUCCESS:\n    case types.TM_UNDO_FAILURE:\n      {\n        return {\n          ...state,\n          undoTreatmentLoading: false\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"names":["types","INITIAL_STATE","facilityData","getFacilitiesLoading","createFacilityLoading","updateFacilityLoading","deleteFacilityLoading","setManagerLoading","undoTreatmentLoading","state","arguments","length","undefined","action","type","GET_FACILITY_REQUEST","GET_FACILITY_SUCCESS","payload","GET_FACILITY_FAILURE","CREATE_FACILITY_REQUEST","CREATE_FACILITY_SUCCESS","CREATE_FACILITY_FAILURE","UPDATE_FACILITY_REQUEST","UPDATE_FACILITY_SUCCESS","UPDATE_FACILITY_FAILURE","DELETE_FACILITY_REQUEST","DELETE_FACILITY_SUCCESS","DELETE_FACILITY_FAILURE","TM_UNDO_REQUEST","TM_UNDO_SUCCESS","TM_UNDO_FAILURE"],"sources":["H:/BAKCO/pj/data reconciliation/src/quarantine/reducers/facility.js"],"sourcesContent":["import types from 'treatment/actions/types';\n\nconst INITIAL_STATE = {\n  facilityData: {},\n  getFacilitiesLoading: false,\n  createFacilityLoading: false,\n  updateFacilityLoading: false,\n  deleteFacilityLoading: false,\n  setManagerLoading: false,\n  undoTreatmentLoading: false,\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case types.GET_FACILITY_REQUEST: {\n      return {\n        ...state,\n        getFacilitiesLoading: true,\n      };\n    }\n    case types.GET_FACILITY_SUCCESS: {\n      return {\n        ...state,\n        getFacilitiesLoading: false,\n        facilityData: action.payload,\n      };\n    }\n    case types.GET_FACILITY_FAILURE: {\n      return {\n        ...state,\n        getFacilitiesLoading: false,\n      };\n    }\n    case types.CREATE_FACILITY_REQUEST: {\n      return {\n        ...state,\n        createFacilityLoading: true,\n      };\n    }\n    case types.CREATE_FACILITY_SUCCESS: {\n      return {\n        ...state,\n        createFacilityLoading: false,\n      };\n    }\n    case types.CREATE_FACILITY_FAILURE: {\n      return {\n        ...state,\n        createFacilityLoading: false,\n      };\n    }\n    case types.UPDATE_FACILITY_REQUEST: {\n      return {\n        ...state,\n        updateFacilityLoading: true,\n      };\n    }\n    case types.UPDATE_FACILITY_SUCCESS: {\n      return {\n        ...state,\n        updateFacilityLoading: false,\n      };\n    }\n    case types.UPDATE_FACILITY_FAILURE: {\n      return {\n        ...state,\n        updateFacilityLoading: false,\n      };\n    }\n    case types.DELETE_FACILITY_REQUEST: {\n      return {\n        ...state,\n        deleteFacilityLoading: true,\n      };\n    }\n    case types.DELETE_FACILITY_SUCCESS: {\n      return {\n        ...state,\n        deleteFacilityLoading: false,\n      };\n    }\n    case types.DELETE_FACILITY_FAILURE: {\n      return {\n        ...state,\n        deleteFacilityLoading: false,\n      };\n    }\n    case types.TM_UNDO_REQUEST: {\n      return {\n        ...state,\n        undoTreatmentLoading: true,\n      };\n    }\n    case types.TM_UNDO_SUCCESS:\n    case types.TM_UNDO_FAILURE: {\n      return {\n        ...state,\n        undoTreatmentLoading: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,yBAAyB;AAE3C,MAAMC,aAAa,GAAG;EACpBC,YAAY,EAAE,CAAC,CAAC;EAChBC,oBAAoB,EAAE,KAAK;EAC3BC,qBAAqB,EAAE,KAAK;EAC5BC,qBAAqB,EAAE,KAAK;EAC5BC,qBAAqB,EAAE,KAAK;EAC5BC,iBAAiB,EAAE,KAAK;EACxBC,oBAAoB,EAAE;AACxB,CAAC;AAED,eAAe,YAAyC;EAAA,IAA/BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGT,aAAa;EAAA,IAAEY,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKd,KAAK,CAACe,oBAAoB;MAAE;QAC/B,OAAO;UACL,GAAGN,KAAK;UACRN,oBAAoB,EAAE;QACxB,CAAC;MACH;IACA,KAAKH,KAAK,CAACgB,oBAAoB;MAAE;QAC/B,OAAO;UACL,GAAGP,KAAK;UACRN,oBAAoB,EAAE,KAAK;UAC3BD,YAAY,EAAEW,MAAM,CAACI;QACvB,CAAC;MACH;IACA,KAAKjB,KAAK,CAACkB,oBAAoB;MAAE;QAC/B,OAAO;UACL,GAAGT,KAAK;UACRN,oBAAoB,EAAE;QACxB,CAAC;MACH;IACA,KAAKH,KAAK,CAACmB,uBAAuB;MAAE;QAClC,OAAO;UACL,GAAGV,KAAK;UACRL,qBAAqB,EAAE;QACzB,CAAC;MACH;IACA,KAAKJ,KAAK,CAACoB,uBAAuB;MAAE;QAClC,OAAO;UACL,GAAGX,KAAK;UACRL,qBAAqB,EAAE;QACzB,CAAC;MACH;IACA,KAAKJ,KAAK,CAACqB,uBAAuB;MAAE;QAClC,OAAO;UACL,GAAGZ,KAAK;UACRL,qBAAqB,EAAE;QACzB,CAAC;MACH;IACA,KAAKJ,KAAK,CAACsB,uBAAuB;MAAE;QAClC,OAAO;UACL,GAAGb,KAAK;UACRJ,qBAAqB,EAAE;QACzB,CAAC;MACH;IACA,KAAKL,KAAK,CAACuB,uBAAuB;MAAE;QAClC,OAAO;UACL,GAAGd,KAAK;UACRJ,qBAAqB,EAAE;QACzB,CAAC;MACH;IACA,KAAKL,KAAK,CAACwB,uBAAuB;MAAE;QAClC,OAAO;UACL,GAAGf,KAAK;UACRJ,qBAAqB,EAAE;QACzB,CAAC;MACH;IACA,KAAKL,KAAK,CAACyB,uBAAuB;MAAE;QAClC,OAAO;UACL,GAAGhB,KAAK;UACRH,qBAAqB,EAAE;QACzB,CAAC;MACH;IACA,KAAKN,KAAK,CAAC0B,uBAAuB;MAAE;QAClC,OAAO;UACL,GAAGjB,KAAK;UACRH,qBAAqB,EAAE;QACzB,CAAC;MACH;IACA,KAAKN,KAAK,CAAC2B,uBAAuB;MAAE;QAClC,OAAO;UACL,GAAGlB,KAAK;UACRH,qBAAqB,EAAE;QACzB,CAAC;MACH;IACA,KAAKN,KAAK,CAAC4B,eAAe;MAAE;QAC1B,OAAO;UACL,GAAGnB,KAAK;UACRD,oBAAoB,EAAE;QACxB,CAAC;MACH;IACA,KAAKR,KAAK,CAAC6B,eAAe;IAC1B,KAAK7B,KAAK,CAAC8B,eAAe;MAAE;QAC1B,OAAO;UACL,GAAGrB,KAAK;UACRD,oBAAoB,EAAE;QACxB,CAAC;MACH;IACA;MAAS;QACP,OAAOC,KAAK;MACd;EAAC;AAEL"},"metadata":{},"sourceType":"module"}