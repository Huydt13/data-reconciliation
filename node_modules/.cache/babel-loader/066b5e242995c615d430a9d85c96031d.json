{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\profile\\\\components\\\\infectious-disease\\\\InfectiousDiseaseTable.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { FiFileText, FiExternalLink } from 'react-icons/fi';\nimport { DataTable } from 'app/components/shared';\nimport InfectiousDiseaseFilter from 'profile/components/infectious-disease/InfectiousDiseaseFilter';\nimport InfectiousDiseaseDetailModal from 'profile/components/infectious-disease/InfectiousDiseaseDetailModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getInfectiousDiseaseHistories } from 'profile/actions/profile';\nimport { formatAddressToString, formatToTime, renderProfileKey } from 'app/utils/helpers';\nconst columns = [{\n  Header: 'ID hồ sơ',\n  formatter: _ref => {\n    let {\n      profile\n    } = _ref;\n    return profile === null || profile === void 0 ? void 0 : profile.id;\n  }\n}, {\n  Header: 'Tên',\n  formatter: _ref2 => {\n    var _profile$fullName;\n    let {\n      profile\n    } = _ref2;\n    return (_profile$fullName = profile === null || profile === void 0 ? void 0 : profile.fullName) !== null && _profile$fullName !== void 0 ? _profile$fullName : '';\n  },\n  cutlength: 50\n}, {\n  Header: 'Ngày sinh',\n  formatter: _ref3 => {\n    let {\n      profile\n    } = _ref3;\n    return (profile === null || profile === void 0 ? void 0 : profile.dateOfBirth) ? !(profile === null || profile === void 0 ? void 0 : profile.hasYearOfBirthOnly) ? moment(profile.dateOfBirth).format('DD-MM-YYYY') : moment(profile.dateOfBirth).format('YYYY') : 'Chưa xác định';\n  }\n}, {\n  Header: 'Địa chỉ nhà',\n  formatter: _ref4 => {\n    var _profile$addressesInV;\n    let {\n      profile\n    } = _ref4;\n    return formatAddressToString((_profile$addressesInV = profile === null || profile === void 0 ? void 0 : profile.addressesInVietnam[0]) !== null && _profile$addressesInV !== void 0 ? _profile$addressesInV : []);\n  },\n  cutlength: 50\n}, {\n  Header: 'Thông tin xác thực',\n  formatter: _ref5 => {\n    let {\n      profile\n    } = _ref5;\n    return renderProfileKey({\n      ...profile,\n      keyWithAddress: false\n    });\n  }\n}, {\n  Header: 'Số điện thoại',\n  formatter: _ref6 => {\n    let {\n      profile\n    } = _ref6;\n    return profile === null || profile === void 0 ? void 0 : profile.phoneNumber;\n  }\n}, {\n  Header: 'Số lần bị nhiễm',\n  accessor: 'numberOfPositiveTimes'\n}, {\n  Header: 'Lần gần nhất bị nhiễm',\n  formatter: _ref7 => {\n    let {\n      lastPositiveTime\n    } = _ref7;\n    return formatToTime(lastPositiveTime);\n  }\n}];\nconst InfectiousDiseaseTable = _ref8 => {\n  let {\n    isNewest\n  } = _ref8;\n  const [filter, setFilter] = useState({});\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [modalDetail, setModalDetail] = useState(undefined);\n  const dispatch = useDispatch();\n  const {\n    infectiousDiseaseHistoriesData: {\n      totalPages,\n      totalRows,\n      data\n    },\n    getInfectiousDiseaseHistoriesLoading\n  } = useSelector(state => state.profile);\n  const getData = useCallback(() => {\n    dispatch(getInfectiousDiseaseHistories({\n      ...filter,\n      IsPositive: isNewest ? true : filter.isPositive,\n      FromDate: filter.FromDate,\n      ToDate: filter.ToDate,\n      PageIndex: pageIndex,\n      PageSize: pageSize\n    }));\n  }, [dispatch, isNewest, filter, pageIndex, pageSize]);\n  useEffect(getData, [getData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InfectiousDiseaseFilter, {\n    hasDateFilter: !isNewest,\n    onChange: setFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DataTable, {\n    title: `Danh sách F0 ${isNewest ? 'mới' : ''}`,\n    loading: getInfectiousDiseaseHistoriesLoading,\n    columns: columns,\n    data: data || [],\n    pageCount: totalPages,\n    totalCount: totalRows,\n    onPaginationChange: _ref9 => {\n      let {\n        pageIndex: pi,\n        pageSize: ps\n      } = _ref9;\n      setPageIndex(pi);\n      setPageSize(ps);\n    },\n    actions: [{\n      icon: /*#__PURE__*/React.createElement(FiExternalLink, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 19\n        }\n      }),\n      title: 'Lịch sử bị nhiễm',\n      color: 'purple',\n      onClick: r => setModalDetail(r)\n    }, {\n      icon: /*#__PURE__*/React.createElement(FiFileText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }\n      }),\n      title: 'Hồ sơ',\n      color: 'blue',\n      onClick: r => window.open(`/profile/${r.profileId}`, '_blank')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InfectiousDiseaseDetailModal, {\n    data: modalDetail,\n    onClose: () => setModalDetail(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }));\n};\nInfectiousDiseaseTable.defaultProps = {\n  isNewest: false\n};\nInfectiousDiseaseTable.propTypes = {\n  isNewest: PropTypes.bool\n};\nexport default InfectiousDiseaseTable;","map":{"version":3,"names":["React","useState","useEffect","useCallback","PropTypes","moment","FiFileText","FiExternalLink","DataTable","InfectiousDiseaseFilter","InfectiousDiseaseDetailModal","useDispatch","useSelector","getInfectiousDiseaseHistories","formatAddressToString","formatToTime","renderProfileKey","columns","Header","formatter","_ref","profile","id","_ref2","_profile$fullName","fullName","cutlength","_ref3","dateOfBirth","hasYearOfBirthOnly","format","_ref4","_profile$addressesInV","addressesInVietnam","_ref5","keyWithAddress","_ref6","phoneNumber","accessor","_ref7","lastPositiveTime","InfectiousDiseaseTable","_ref8","isNewest","filter","setFilter","pageIndex","setPageIndex","pageSize","setPageSize","modalDetail","setModalDetail","undefined","dispatch","infectiousDiseaseHistoriesData","totalPages","totalRows","data","getInfectiousDiseaseHistoriesLoading","state","getData","IsPositive","isPositive","FromDate","ToDate","PageIndex","PageSize","createElement","Fragment","hasDateFilter","onChange","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","loading","pageCount","totalCount","onPaginationChange","_ref9","pi","ps","actions","icon","color","onClick","r","window","open","profileId","onClose","defaultProps","propTypes","bool"],"sources":["H:/BAKCO/pj/cds/src/profile/components/infectious-disease/InfectiousDiseaseTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { FiFileText, FiExternalLink } from 'react-icons/fi';\nimport { DataTable } from 'app/components/shared';\nimport InfectiousDiseaseFilter from 'profile/components/infectious-disease/InfectiousDiseaseFilter';\nimport InfectiousDiseaseDetailModal from 'profile/components/infectious-disease/InfectiousDiseaseDetailModal';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getInfectiousDiseaseHistories } from 'profile/actions/profile';\nimport { formatAddressToString, formatToTime, renderProfileKey } from 'app/utils/helpers';\n\nconst columns = [\n  {\n    Header: 'ID hồ sơ',\n    formatter: ({ profile }) => profile?.id,\n  },\n  {\n    Header: 'Tên',\n    formatter: ({ profile }) => profile?.fullName ?? '',\n    cutlength: 50,\n  },\n  {\n    Header: 'Ngày sinh',\n    formatter: ({ profile }) => profile?.dateOfBirth\n        ? !profile?.hasYearOfBirthOnly\n          ? moment(profile.dateOfBirth).format('DD-MM-YYYY')\n          : moment(profile.dateOfBirth).format('YYYY')\n        : 'Chưa xác định',\n  },\n  {\n    Header: 'Địa chỉ nhà',\n    formatter: ({ profile }) => formatAddressToString(profile?.addressesInVietnam[0] ?? []),\n    cutlength: 50,\n  },\n  {\n    Header: 'Thông tin xác thực',\n    formatter: ({ profile }) => renderProfileKey({ ...profile, keyWithAddress: false }),\n  },\n  {\n    Header: 'Số điện thoại',\n    formatter: ({ profile }) => profile?.phoneNumber,\n  },\n  {\n    Header: 'Số lần bị nhiễm',\n    accessor: 'numberOfPositiveTimes',\n  },\n  {\n    Header: 'Lần gần nhất bị nhiễm',\n    formatter: ({ lastPositiveTime }) => formatToTime(lastPositiveTime),\n  },\n];\n\nconst InfectiousDiseaseTable = ({ isNewest }) => {\n  const [filter, setFilter] = useState({});\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n\n  const [modalDetail, setModalDetail] = useState(undefined);\n\n  const dispatch = useDispatch();\n  const {\n    infectiousDiseaseHistoriesData: { totalPages, totalRows, data },\n    getInfectiousDiseaseHistoriesLoading,\n  } = useSelector((state) => state.profile);\n\n  const getData = useCallback(() => {\n    dispatch(getInfectiousDiseaseHistories({\n      ...filter,\n      IsPositive: isNewest ? true : filter.isPositive,\n      FromDate: filter.FromDate,\n      ToDate: filter.ToDate,\n      PageIndex: pageIndex,\n      PageSize: pageSize,\n    }));\n  }, [dispatch, isNewest, filter, pageIndex, pageSize]);\n  useEffect(getData, [getData]);\n\n  return (\n    <>\n      <InfectiousDiseaseFilter hasDateFilter={!isNewest} onChange={setFilter} />\n      <DataTable\n        title={`Danh sách F0 ${isNewest ? 'mới' : ''}`}\n        loading={getInfectiousDiseaseHistoriesLoading}\n        columns={columns}\n        data={data || []}\n        pageCount={totalPages}\n        totalCount={totalRows}\n        onPaginationChange={({ pageIndex: pi, pageSize: ps }) => {\n          setPageIndex(pi);\n          setPageSize(ps);\n        }}\n        actions={[\n          {\n            icon: <FiExternalLink />,\n            title: 'Lịch sử bị nhiễm',\n            color: 'purple',\n            onClick: (r) => setModalDetail(r),\n          },\n          {\n            icon: <FiFileText />,\n            title: 'Hồ sơ',\n            color: 'blue',\n            onClick: (r) => window.open(`/profile/${r.profileId}`, '_blank'),\n          },\n        ]}\n      />\n\n      <InfectiousDiseaseDetailModal\n        data={modalDetail}\n        onClose={() => setModalDetail(undefined)}\n      />\n    </>\n  );\n};\n\nInfectiousDiseaseTable.defaultProps = {\n  isNewest: false,\n};\n\nInfectiousDiseaseTable.propTypes = {\n  isNewest: PropTypes.bool,\n};\n\nexport default InfectiousDiseaseTable;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,QAAQ;AAE3B,SAASC,UAAU,EAAEC,cAAc,QAAQ,gBAAgB;AAC3D,SAASC,SAAS,QAAQ,uBAAuB;AACjD,OAAOC,uBAAuB,MAAM,+DAA+D;AACnG,OAAOC,4BAA4B,MAAM,oEAAoE;AAE7G,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,6BAA6B,QAAQ,yBAAyB;AACvE,SAASC,qBAAqB,EAAEC,YAAY,EAAEC,gBAAgB,QAAQ,mBAAmB;AAEzF,MAAMC,OAAO,GAAG,CACd;EACEC,MAAM,EAAE,UAAU;EAClBC,SAAS,EAAEC,IAAA;IAAA,IAAC;MAAEC;IAAQ,CAAC,GAAAD,IAAA;IAAA,OAAKC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,EAAE;EAAA;AACzC,CAAC,EACD;EACEJ,MAAM,EAAE,KAAK;EACbC,SAAS,EAAEI,KAAA;IAAA,IAAAC,iBAAA;IAAA,IAAC;MAAEH;IAAQ,CAAC,GAAAE,KAAA;IAAA,QAAAC,iBAAA,GAAKH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,QAAQ,cAAAD,iBAAA,cAAAA,iBAAA,GAAI,EAAE;EAAA;EACnDE,SAAS,EAAE;AACb,CAAC,EACD;EACER,MAAM,EAAE,WAAW;EACnBC,SAAS,EAAEQ,KAAA;IAAA,IAAC;MAAEN;IAAQ,CAAC,GAAAM,KAAA;IAAA,OAAK,CAAAN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEO,WAAW,IAC1C,EAACP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEQ,kBAAkB,IAC1BxB,MAAM,CAACgB,OAAO,CAACO,WAAW,CAAC,CAACE,MAAM,CAAC,YAAY,CAAC,GAChDzB,MAAM,CAACgB,OAAO,CAACO,WAAW,CAAC,CAACE,MAAM,CAAC,MAAM,CAAC,GAC5C,eAAe;EAAA;AACvB,CAAC,EACD;EACEZ,MAAM,EAAE,aAAa;EACrBC,SAAS,EAAEY,KAAA;IAAA,IAAAC,qBAAA;IAAA,IAAC;MAAEX;IAAQ,CAAC,GAAAU,KAAA;IAAA,OAAKjB,qBAAqB,EAAAkB,qBAAA,GAACX,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEY,kBAAkB,CAAC,CAAC,CAAC,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC;EAAA;EACvFN,SAAS,EAAE;AACb,CAAC,EACD;EACER,MAAM,EAAE,oBAAoB;EAC5BC,SAAS,EAAEe,KAAA;IAAA,IAAC;MAAEb;IAAQ,CAAC,GAAAa,KAAA;IAAA,OAAKlB,gBAAgB,CAAC;MAAE,GAAGK,OAAO;MAAEc,cAAc,EAAE;IAAM,CAAC,CAAC;EAAA;AACrF,CAAC,EACD;EACEjB,MAAM,EAAE,eAAe;EACvBC,SAAS,EAAEiB,KAAA;IAAA,IAAC;MAAEf;IAAQ,CAAC,GAAAe,KAAA;IAAA,OAAKf,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEgB,WAAW;EAAA;AAClD,CAAC,EACD;EACEnB,MAAM,EAAE,iBAAiB;EACzBoB,QAAQ,EAAE;AACZ,CAAC,EACD;EACEpB,MAAM,EAAE,uBAAuB;EAC/BC,SAAS,EAAEoB,KAAA;IAAA,IAAC;MAAEC;IAAiB,CAAC,GAAAD,KAAA;IAAA,OAAKxB,YAAY,CAACyB,gBAAgB,CAAC;EAAA;AACrE,CAAC,CACF;AAED,MAAMC,sBAAsB,GAAGC,KAAA,IAAkB;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAD,KAAA;EAC1C,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAAC6C,SAAS,EAAEC,YAAY,CAAC,GAAG9C,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAAC+C,QAAQ,EAAEC,WAAW,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACiD,WAAW,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,CAACmD,SAAS,CAAC;EAEzD,MAAMC,QAAQ,GAAG1C,WAAW,EAAE;EAC9B,MAAM;IACJ2C,8BAA8B,EAAE;MAAEC,UAAU;MAAEC,SAAS;MAAEC;IAAK,CAAC;IAC/DC;EACF,CAAC,GAAG9C,WAAW,CAAE+C,KAAK,IAAKA,KAAK,CAACtC,OAAO,CAAC;EAEzC,MAAMuC,OAAO,GAAGzD,WAAW,CAAC,MAAM;IAChCkD,QAAQ,CAACxC,6BAA6B,CAAC;MACrC,GAAG+B,MAAM;MACTiB,UAAU,EAAElB,QAAQ,GAAG,IAAI,GAAGC,MAAM,CAACkB,UAAU;MAC/CC,QAAQ,EAAEnB,MAAM,CAACmB,QAAQ;MACzBC,MAAM,EAAEpB,MAAM,CAACoB,MAAM;MACrBC,SAAS,EAAEnB,SAAS;MACpBoB,QAAQ,EAAElB;IACZ,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACK,QAAQ,EAAEV,QAAQ,EAAEC,MAAM,EAAEE,SAAS,EAAEE,QAAQ,CAAC,CAAC;EACrD9C,SAAS,CAAC0D,OAAO,EAAE,CAACA,OAAO,CAAC,CAAC;EAE7B,oBACE5D,KAAA,CAAAmE,aAAA,CAAAnE,KAAA,CAAAoE,QAAA,qBACEpE,KAAA,CAAAmE,aAAA,CAAC1D,uBAAuB;IAAC4D,aAAa,EAAE,CAAC1B,QAAS;IAAC2B,QAAQ,EAAEzB,SAAU;IAAA0B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eAC1E5E,KAAA,CAAAmE,aAAA,CAAC3D,SAAS;IACRqE,KAAK,EAAG,gBAAelC,QAAQ,GAAG,KAAK,GAAG,EAAG,EAAE;IAC/CmC,OAAO,EAAEpB,oCAAqC;IAC9CzC,OAAO,EAAEA,OAAQ;IACjBwC,IAAI,EAAEA,IAAI,IAAI,EAAG;IACjBsB,SAAS,EAAExB,UAAW;IACtByB,UAAU,EAAExB,SAAU;IACtByB,kBAAkB,EAAEC,KAAA,IAAqC;MAAA,IAApC;QAAEpC,SAAS,EAAEqC,EAAE;QAAEnC,QAAQ,EAAEoC;MAAG,CAAC,GAAAF,KAAA;MAClDnC,YAAY,CAACoC,EAAE,CAAC;MAChBlC,WAAW,CAACmC,EAAE,CAAC;IACjB,CAAE;IACFC,OAAO,EAAE,CACP;MACEC,IAAI,eAAEtF,KAAA,CAAAmE,aAAA,CAAC5D,cAAc;QAAAgE,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,EAAG;MACxBC,KAAK,EAAE,kBAAkB;MACzBU,KAAK,EAAE,QAAQ;MACfC,OAAO,EAAGC,CAAC,IAAKtC,cAAc,CAACsC,CAAC;IAClC,CAAC,EACD;MACEH,IAAI,eAAEtF,KAAA,CAAAmE,aAAA,CAAC7D,UAAU;QAAAiE,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,EAAG;MACpBC,KAAK,EAAE,OAAO;MACdU,KAAK,EAAE,MAAM;MACbC,OAAO,EAAGC,CAAC,IAAKC,MAAM,CAACC,IAAI,CAAE,YAAWF,CAAC,CAACG,SAAU,EAAC,EAAE,QAAQ;IACjE,CAAC,CACD;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACF,eAEF5E,KAAA,CAAAmE,aAAA,CAACzD,4BAA4B;IAC3B+C,IAAI,EAAEP,WAAY;IAClB2C,OAAO,EAAEA,CAAA,KAAM1C,cAAc,CAACC,SAAS,CAAE;IAAAmB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACzC,CACD;AAEP,CAAC;AAEDnC,sBAAsB,CAACqD,YAAY,GAAG;EACpCnD,QAAQ,EAAE;AACZ,CAAC;AAEDF,sBAAsB,CAACsD,SAAS,GAAG;EACjCpD,QAAQ,EAAEvC,SAAS,CAAC4F;AACtB,CAAC;AAED,eAAevD,sBAAsB"},"metadata":{},"sourceType":"module"}