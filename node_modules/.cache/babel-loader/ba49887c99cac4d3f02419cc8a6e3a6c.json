{"ast":null,"code":"import httpClient from 'app/utils/http-client';\nimport apiLinks from 'app/utils/api-links';\nimport { toast } from 'react-toastify';\nimport types from './types';\nconst getQuarantineFormsRequest = () => ({\n  type: types.GET_QUARANTINE_FORM_REQUEST\n});\nconst getQuarantineFormsSuccess = response => ({\n  type: types.GET_QUARANTINE_FORM_SUCCESS,\n  payload: response\n});\nconst getQuarantineFormsFailure = error => ({\n  type: types.GET_QUARANTINE_FORM_FAILURE,\n  payload: error\n});\nconst getQuarantineForms = _ref => {\n  let {\n    manager = '',\n    pageIndex = 0,\n    pageSize = 10\n  } = _ref;\n  return dispatch => new Promise((resolve, reject) => {\n    dispatch(getQuarantineFormsRequest());\n    httpClient.callApi({\n      url: apiLinks.facilities.quarantineForms.get,\n      params: {\n        manager: manager || undefined,\n        pageIndex,\n        pageSize\n      }\n    }).then(response => {\n      dispatch(getQuarantineFormsSuccess(response.data));\n      resolve();\n    }).catch(error => {\n      dispatch(getQuarantineFormsFailure(error));\n      reject();\n    });\n  });\n};\nconst getQuarantineFormsByFacilityRequest = () => ({\n  type: types.GET_QUARANTINE_FORM_BY_FACILITY_REQUEST\n});\nconst getQuarantineFormsByFacilitySuccess = response => ({\n  type: types.GET_QUARANTINE_FORM_BY_FACILITY_SUCCESS,\n  payload: response\n});\nconst getQuarantineFormsByFacilityFailure = error => ({\n  type: types.GET_QUARANTINE_FORM_BY_FACILITY_FAILURE,\n  payload: error\n});\nconst getQuarantineFormsByFacility = _ref2 => {\n  let {\n    pageIndex = 0,\n    pageSize = 10\n  } = _ref2;\n  return dispatch => new Promise((resolve, reject) => {\n    dispatch(getQuarantineFormsByFacilityRequest());\n    httpClient.callApi({\n      url: apiLinks.facilities.quarantineForms.get,\n      params: {\n        pageIndex,\n        pageSize\n      }\n    }).then(response => {\n      dispatch(getQuarantineFormsByFacilitySuccess(response.data));\n      resolve();\n    }).catch(error => {\n      dispatch(getQuarantineFormsByFacilityFailure(error));\n      reject();\n    });\n  });\n};\nconst getQuarantineFormDetailRequest = () => ({\n  type: types.GET_QUARANTINE_FORM_DETAIL_REQUEST\n});\nconst getQuarantineFormDetailSuccess = response => ({\n  type: types.GET_QUARANTINE_FORM_DETAIL_SUCCESS,\n  payload: response\n});\nconst getQuarantineFormDetailFailure = error => ({\n  type: types.GET_QUARANTINE_FORM_DETAIL_FAILURE,\n  payload: error\n});\nconst getQuarantineFormDetail = id => dispatch => new Promise((resolve, reject) => {\n  dispatch(getQuarantineFormDetailRequest());\n  httpClient.callApi({\n    url: apiLinks.facilities.quarantineForms.getDetail + id\n  }).then(response => {\n    dispatch(getQuarantineFormDetailSuccess(response.data));\n    resolve();\n  }).catch(error => {\n    dispatch(getQuarantineFormDetailFailure(error));\n    reject();\n  });\n});\nconst createQuarantineFormRequest = () => ({\n  type: types.CREATE_QUARANTINE_FORM_REQUEST\n});\nconst createQuarantineFormSuccess = response => ({\n  type: types.CREATE_QUARANTINE_FORM_SUCCESS,\n  payload: response\n});\nconst createQuarantineFormFailure = error => ({\n  type: types.CREATE_QUARANTINE_FORM_FAILURE,\n  payload: error\n});\nconst createQuarantineForm = data => dispatch => new Promise((resolve, reject) => {\n  dispatch(createQuarantineFormRequest());\n  httpClient.callApi({\n    method: 'POST',\n    url: apiLinks.facilities.quarantineForms.create,\n    data\n  }).then(response => {\n    toast.success('Thành công');\n    dispatch(createQuarantineFormSuccess(response.data));\n    resolve();\n  }).catch(error => {\n    dispatch(createQuarantineFormFailure(error));\n    reject();\n  });\n});\nexport { getQuarantineForms, getQuarantineFormsByFacility, getQuarantineFormDetail, createQuarantineForm };","map":{"version":3,"names":["httpClient","apiLinks","toast","types","getQuarantineFormsRequest","type","GET_QUARANTINE_FORM_REQUEST","getQuarantineFormsSuccess","response","GET_QUARANTINE_FORM_SUCCESS","payload","getQuarantineFormsFailure","error","GET_QUARANTINE_FORM_FAILURE","getQuarantineForms","_ref","manager","pageIndex","pageSize","dispatch","Promise","resolve","reject","callApi","url","facilities","quarantineForms","get","params","undefined","then","data","catch","getQuarantineFormsByFacilityRequest","GET_QUARANTINE_FORM_BY_FACILITY_REQUEST","getQuarantineFormsByFacilitySuccess","GET_QUARANTINE_FORM_BY_FACILITY_SUCCESS","getQuarantineFormsByFacilityFailure","GET_QUARANTINE_FORM_BY_FACILITY_FAILURE","getQuarantineFormsByFacility","_ref2","getQuarantineFormDetailRequest","GET_QUARANTINE_FORM_DETAIL_REQUEST","getQuarantineFormDetailSuccess","GET_QUARANTINE_FORM_DETAIL_SUCCESS","getQuarantineFormDetailFailure","GET_QUARANTINE_FORM_DETAIL_FAILURE","getQuarantineFormDetail","id","getDetail","createQuarantineFormRequest","CREATE_QUARANTINE_FORM_REQUEST","createQuarantineFormSuccess","CREATE_QUARANTINE_FORM_SUCCESS","createQuarantineFormFailure","CREATE_QUARANTINE_FORM_FAILURE","createQuarantineForm","method","create","success"],"sources":["H:/BAKCO/pj/cds/src/quarantine-facilities/actions/quarantine-form.js"],"sourcesContent":["import httpClient from 'app/utils/http-client';\nimport apiLinks from 'app/utils/api-links';\n\nimport { toast } from 'react-toastify';\n\nimport types from './types';\n\nconst getQuarantineFormsRequest = () => ({ type: types.GET_QUARANTINE_FORM_REQUEST });\nconst getQuarantineFormsSuccess = (response) => ({ type: types.GET_QUARANTINE_FORM_SUCCESS, payload: response });\nconst getQuarantineFormsFailure = (error) => ({ type: types.GET_QUARANTINE_FORM_FAILURE, payload: error });\n\nconst getQuarantineForms = ({\n  manager = '',\n  pageIndex = 0,\n  pageSize = 10,\n}) => (dispatch) => new Promise((resolve, reject) => {\n  dispatch(getQuarantineFormsRequest());\n  httpClient.callApi({\n    url: apiLinks.facilities.quarantineForms.get,\n    params: {\n      manager: manager || undefined,\n      pageIndex,\n      pageSize,\n    },\n  }).then((response) => {\n    dispatch(getQuarantineFormsSuccess(response.data));\n    resolve();\n  }).catch((error) => {\n    dispatch(getQuarantineFormsFailure(error));\n    reject();\n  });\n});\n\nconst getQuarantineFormsByFacilityRequest = () => ({ type: types.GET_QUARANTINE_FORM_BY_FACILITY_REQUEST });\nconst getQuarantineFormsByFacilitySuccess = (response) => ({ type: types.GET_QUARANTINE_FORM_BY_FACILITY_SUCCESS, payload: response });\nconst getQuarantineFormsByFacilityFailure = (error) => ({ type: types.GET_QUARANTINE_FORM_BY_FACILITY_FAILURE, payload: error });\n\nconst getQuarantineFormsByFacility = ({\n  pageIndex = 0,\n  pageSize = 10,\n}) => (dispatch) => new Promise((resolve, reject) => {\n  dispatch(getQuarantineFormsByFacilityRequest());\n  httpClient.callApi({\n    url: apiLinks.facilities.quarantineForms.get,\n    params: {\n      pageIndex,\n      pageSize,\n    },\n  }).then((response) => {\n    dispatch(getQuarantineFormsByFacilitySuccess(response.data));\n    resolve();\n  }).catch((error) => {\n    dispatch(getQuarantineFormsByFacilityFailure(error));\n    reject();\n  });\n});\n\nconst getQuarantineFormDetailRequest = () => ({ type: types.GET_QUARANTINE_FORM_DETAIL_REQUEST });\nconst getQuarantineFormDetailSuccess = (response) => ({ type: types.GET_QUARANTINE_FORM_DETAIL_SUCCESS, payload: response });\nconst getQuarantineFormDetailFailure = (error) => ({ type: types.GET_QUARANTINE_FORM_DETAIL_FAILURE, payload: error });\n\nconst getQuarantineFormDetail = (id) => (dispatch) => new Promise((resolve, reject) => {\n  dispatch(getQuarantineFormDetailRequest());\n  httpClient.callApi({\n    url: apiLinks.facilities.quarantineForms.getDetail + id,\n  }).then((response) => {\n    dispatch(getQuarantineFormDetailSuccess(response.data));\n    resolve();\n  }).catch((error) => {\n    dispatch(getQuarantineFormDetailFailure(error));\n    reject();\n  });\n});\n\nconst createQuarantineFormRequest = () => ({ type: types.CREATE_QUARANTINE_FORM_REQUEST });\nconst createQuarantineFormSuccess = (response) => ({ type: types.CREATE_QUARANTINE_FORM_SUCCESS, payload: response });\nconst createQuarantineFormFailure = (error) => ({ type: types.CREATE_QUARANTINE_FORM_FAILURE, payload: error });\n\nconst createQuarantineForm = (data) => (dispatch) => new Promise((resolve, reject) => {\n  dispatch(createQuarantineFormRequest());\n  httpClient.callApi({\n    method: 'POST',\n    url: apiLinks.facilities.quarantineForms.create,\n    data,\n  }).then((response) => {\n    toast.success('Thành công');\n    dispatch(createQuarantineFormSuccess(response.data));\n    resolve();\n  }).catch((error) => {\n    dispatch(createQuarantineFormFailure(error));\n    reject();\n  });\n});\n\nexport {\n  getQuarantineForms,\n  getQuarantineFormsByFacility,\n  getQuarantineFormDetail,\n  createQuarantineForm,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}