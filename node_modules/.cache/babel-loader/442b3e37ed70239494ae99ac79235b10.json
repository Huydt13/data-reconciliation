{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\infection-chain\\\\pages\\\\CreateSubjectPage.js\";\nimport React from 'react';\nimport moment from 'moment';\nimport { Button } from 'semantic-ui-react';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createProfile, resetRelated } from 'profile/actions/profile';\nimport { CreateFromType } from 'infection-chain/utils/constants';\nimport SubjectForm from '../components/subject/information/SubjectForm';\nconst StyledWrapper = styled.div`\n  padding: 8px;\n`;\nconst BackButton = styled(Button)`\n  margin-bottom: 16px !important;\n`;\nconst CreateSubjectPage = () => {\n  const history = useHistory();\n\n  // const { createProfileLoading } = useSelector((state) => state.profile);\n  const {\n    relatedProfileId\n  } = useSelector(state => state.subject);\n  const {\n    createProfileLoading\n  } = useSelector(state => state.profile);\n  // const { createSubjectLoading } = useSelector((state) => state.subject);\n  const dispatch = useDispatch();\n\n  // admin only\n  const handleCreate = async data => {\n    const {\n      dateOfBirth,\n      profileCreationReason: {\n        isFromDomesticInfectedZone,\n        countryValue,\n        domesticInfectedProvinceValue,\n        reason,\n        reasonType,\n        reasonAttribute\n      }\n    } = data;\n    let formattedDOB = '';\n    if ((dateOfBirth === null || dateOfBirth === void 0 ? void 0 : dateOfBirth.length) === 4) {\n      formattedDOB = moment(dateOfBirth, 'YYYY').startOf('year').format('YYYY-MM-DD');\n    }\n    const creatingProfile = {\n      ...data,\n      guid: undefined,\n      addresses: undefined,\n      homeAddress: undefined,\n      id: undefined,\n      dateOfBirth: formattedDOB || dateOfBirth,\n      createdFrom: CreateFromType.INFECTIONCHAIN,\n      profileCreationReason: {\n        isFromDomesticInfectedZone,\n        countryValue,\n        domesticInfectedProvinceValue,\n        reason,\n        reasonType,\n        reasonAttribute,\n        realtedPositiveProfileId: relatedProfileId || undefined\n      }\n    };\n    dispatch(createProfile(creatingProfile)).then(_ref => {\n      let {\n        profileId\n      } = _ref;\n      dispatch(resetRelated());\n      history.push(`/profile/${profileId}`);\n    });\n  };\n  return /*#__PURE__*/React.createElement(StyledWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BackButton, {\n    basic: true,\n    animated: true,\n    onClick: () => {\n      history.replace('/subject');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button.Content, {\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Tr\\u1EDD v\\u1EC1\"), /*#__PURE__*/React.createElement(Button.Content, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(SubjectForm, {\n    onSubmit: handleCreate,\n    loading: createProfileLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n};\nexport default CreateSubjectPage;","map":{"version":3,"names":["React","moment","Button","FiArrowLeft","styled","useHistory","useSelector","useDispatch","createProfile","resetRelated","CreateFromType","SubjectForm","StyledWrapper","div","BackButton","CreateSubjectPage","history","relatedProfileId","state","subject","createProfileLoading","profile","dispatch","handleCreate","data","dateOfBirth","profileCreationReason","isFromDomesticInfectedZone","countryValue","domesticInfectedProvinceValue","reason","reasonType","reasonAttribute","formattedDOB","length","startOf","format","creatingProfile","guid","undefined","addresses","homeAddress","id","createdFrom","INFECTIONCHAIN","realtedPositiveProfileId","then","_ref","profileId","push","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","basic","animated","onClick","replace","Content","visible","hidden","onSubmit","loading"],"sources":["H:/BAKCO/pj/cds/src/infection-chain/pages/CreateSubjectPage.js"],"sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { Button } from 'semantic-ui-react';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport styled from 'styled-components';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createProfile, resetRelated } from 'profile/actions/profile';\nimport { CreateFromType } from 'infection-chain/utils/constants';\n\nimport SubjectForm from '../components/subject/information/SubjectForm';\n\nconst StyledWrapper = styled.div`\n  padding: 8px;\n`;\nconst BackButton = styled(Button)`\n  margin-bottom: 16px !important;\n`;\n\nconst CreateSubjectPage = () => {\n  const history = useHistory();\n\n  // const { createProfileLoading } = useSelector((state) => state.profile);\n  const { relatedProfileId } = useSelector((state) => state.subject);\n  const { createProfileLoading } = useSelector((state) => state.profile);\n  // const { createSubjectLoading } = useSelector((state) => state.subject);\n  const dispatch = useDispatch();\n\n  // admin only\n  const handleCreate = async (data) => {\n    const {\n      dateOfBirth,\n      profileCreationReason: {\n        isFromDomesticInfectedZone,\n        countryValue,\n        domesticInfectedProvinceValue,\n        reason,\n        reasonType,\n        reasonAttribute,\n      },\n    } = data;\n    let formattedDOB = '';\n    if (dateOfBirth?.length === 4) {\n      formattedDOB = moment(dateOfBirth, 'YYYY')\n        .startOf('year')\n        .format('YYYY-MM-DD');\n    }\n\n    const creatingProfile = {\n      ...data,\n      guid: undefined,\n      addresses: undefined,\n      homeAddress: undefined,\n      id: undefined,\n      dateOfBirth: formattedDOB || dateOfBirth,\n      createdFrom: CreateFromType.INFECTIONCHAIN,\n      profileCreationReason: {\n        isFromDomesticInfectedZone,\n        countryValue,\n        domesticInfectedProvinceValue,\n        reason,\n        reasonType,\n        reasonAttribute,\n        realtedPositiveProfileId: relatedProfileId || undefined,\n      },\n    };\n\n    dispatch(createProfile(creatingProfile)).then(({ profileId }) => {\n      dispatch(resetRelated());\n      history.push(`/profile/${profileId}`);\n    });\n  };\n\n  return (\n    <StyledWrapper>\n      <BackButton\n        basic\n        animated\n        onClick={() => {\n          history.replace('/subject');\n        }}\n      >\n        <Button.Content visible>Trờ về</Button.Content>\n        <Button.Content hidden>\n          <FiArrowLeft />\n        </Button.Content>\n      </BackButton>\n\n      <SubjectForm onSubmit={handleCreate} loading={createProfileLoading} />\n    </StyledWrapper>\n  );\n};\n\nexport default CreateSubjectPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}