{"ast":null,"code":"import types from '../actions/types';\nconst INITIAL_STATE = {\n  infectedPatients: {},\n  getInfectedPatientsLoading: false,\n  infectedPatientDetail: {},\n  getInfectedPatientDetailLoading: false\n  // deletedQuickTestData: {},\n  // getDeletedQuickTestLoading: false,\n  // quickTestsByManagementUnitData: {},\n  // getQuickTestsManagementUnitLoading: false,\n  // quickTestsByUnitTypeData: {},\n  // getQuickTestsByUnitTypeLoading: false,\n  // positiveQuickTestData: {},\n  // getPositiveQuickTestLoading: false,\n  // personalQuickTestHistoryList: [],\n  // getPersonalQuickTestHistoryLoading: false,\n};\n\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.GET_INFECTED_PATIENTS_REQUEST:\n      {\n        return {\n          ...state,\n          getInfectedPatientsLoading: true\n        };\n      }\n    case types.GET_INFECTED_PATIENTS_SUCCESS:\n      {\n        return {\n          ...state,\n          getInfectedPatientsLoading: false,\n          infectedPatients: action.payload\n        };\n      }\n    case types.GET_INFECTED_PATIENTS_FAILURE:\n      {\n        return {\n          ...state,\n          getInfectedPatientsLoading: false\n        };\n      }\n    case types.GET_INFECTED_PATIENT_DETAIL_REQUEST:\n      {\n        return {\n          ...state,\n          getInfectedPatientDetailLoading: true\n        };\n      }\n    case types.GET_INFECTED_PATIENT_DETAIL_SUCCESS:\n      {\n        return {\n          ...state,\n          getInfectedPatientDetailLoading: false,\n          infectedPatientDetail: action.payload\n        };\n      }\n    case types.GET_INFECTED_PATIENT_DETAIL_FAILURE:\n      {\n        return {\n          ...state,\n          getInfectedPatientDetailLoading: false\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"names":["types","INITIAL_STATE","infectedPatients","getInfectedPatientsLoading","infectedPatientDetail","getInfectedPatientDetailLoading","state","arguments","length","undefined","action","type","GET_INFECTED_PATIENTS_REQUEST","GET_INFECTED_PATIENTS_SUCCESS","payload","GET_INFECTED_PATIENTS_FAILURE","GET_INFECTED_PATIENT_DETAIL_REQUEST","GET_INFECTED_PATIENT_DETAIL_SUCCESS","GET_INFECTED_PATIENT_DETAIL_FAILURE"],"sources":["H:/BAKCO/pj/data reconciliation/src/patient-management/reducers/medical-test.js"],"sourcesContent":["import types from '../actions/types';\n\nconst INITIAL_STATE = {\n  infectedPatients: {},\n  getInfectedPatientsLoading: false,\n  infectedPatientDetail: {},\n  getInfectedPatientDetailLoading: false,\n  // deletedQuickTestData: {},\n  // getDeletedQuickTestLoading: false,\n  // quickTestsByManagementUnitData: {},\n  // getQuickTestsManagementUnitLoading: false,\n  // quickTestsByUnitTypeData: {},\n  // getQuickTestsByUnitTypeLoading: false,\n  // positiveQuickTestData: {},\n  // getPositiveQuickTestLoading: false,\n  // personalQuickTestHistoryList: [],\n  // getPersonalQuickTestHistoryLoading: false,\n\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case types.GET_INFECTED_PATIENTS_REQUEST: {\n      return {\n        ...state,\n        getInfectedPatientsLoading: true,\n      };\n    }\n    case types.GET_INFECTED_PATIENTS_SUCCESS: {\n      return {\n        ...state,\n        getInfectedPatientsLoading: false,\n        infectedPatients: action.payload,\n      };\n    }\n    case types.GET_INFECTED_PATIENTS_FAILURE: {\n      return {\n        ...state,\n        getInfectedPatientsLoading: false,\n      };\n    }\n    case types.GET_INFECTED_PATIENT_DETAIL_REQUEST: {\n      return {\n        ...state,\n        getInfectedPatientDetailLoading: true,\n      };\n    }\n    case types.GET_INFECTED_PATIENT_DETAIL_SUCCESS: {\n      return {\n        ...state,\n        getInfectedPatientDetailLoading: false,\n        infectedPatientDetail: action.payload,\n      };\n    }\n    case types.GET_INFECTED_PATIENT_DETAIL_FAILURE: {\n      return {\n        ...state,\n        getInfectedPatientDetailLoading: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,kBAAkB;AAEpC,MAAMC,aAAa,GAAG;EACpBC,gBAAgB,EAAE,CAAC,CAAC;EACpBC,0BAA0B,EAAE,KAAK;EACjCC,qBAAqB,EAAE,CAAC,CAAC;EACzBC,+BAA+B,EAAE;EACjC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEF,CAAC;;AAED,eAAe,YAAyC;EAAA,IAA/BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGN,aAAa;EAAA,IAAES,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKX,KAAK,CAACY,6BAA6B;MAAE;QACxC,OAAO;UACL,GAAGN,KAAK;UACRH,0BAA0B,EAAE;QAC9B,CAAC;MACH;IACA,KAAKH,KAAK,CAACa,6BAA6B;MAAE;QACxC,OAAO;UACL,GAAGP,KAAK;UACRH,0BAA0B,EAAE,KAAK;UACjCD,gBAAgB,EAAEQ,MAAM,CAACI;QAC3B,CAAC;MACH;IACA,KAAKd,KAAK,CAACe,6BAA6B;MAAE;QACxC,OAAO;UACL,GAAGT,KAAK;UACRH,0BAA0B,EAAE;QAC9B,CAAC;MACH;IACA,KAAKH,KAAK,CAACgB,mCAAmC;MAAE;QAC9C,OAAO;UACL,GAAGV,KAAK;UACRD,+BAA+B,EAAE;QACnC,CAAC;MACH;IACA,KAAKL,KAAK,CAACiB,mCAAmC;MAAE;QAC9C,OAAO;UACL,GAAGX,KAAK;UACRD,+BAA+B,EAAE,KAAK;UACtCD,qBAAqB,EAAEM,MAAM,CAACI;QAChC,CAAC;MACH;IACA,KAAKd,KAAK,CAACkB,mCAAmC;MAAE;QAC9C,OAAO;UACL,GAAGZ,KAAK;UACRD,+BAA+B,EAAE;QACnC,CAAC;MACH;IACA;MAAS;QACP,OAAOC,KAAK;MACd;EAAC;AAEL"},"metadata":{},"sourceType":"module"}