{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\medical-test\\\\components\\\\subjects\\\\CreateMedicalTestModal.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSubject } from 'infection-chain/actions/subject';\nimport MedicalTestForm from './MedicalTestForm';\nconst CreateMedicalTestModal = props => {\n  var _subject$information;\n  const {\n    open,\n    onClose,\n    subjectId,\n    handleSubmit\n  } = props;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (subjectId) {\n      dispatch(getSubject(subjectId));\n    }\n  }, [dispatch, subjectId]);\n  const {\n    subject\n  } = useSelector(state => state.subject);\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, subject === null || subject === void 0 ? void 0 : (_subject$information = subject.information) === null || _subject$information === void 0 ? void 0 : _subject$information.fullName), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MedicalTestForm, {\n    subjectCode: subject === null || subject === void 0 ? void 0 : subject.code,\n    diseaseLocation: subject === null || subject === void 0 ? void 0 : subject.diseaseLocation,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n};\nCreateMedicalTestModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  subjectId: PropTypes.string,\n  handleSubmit: PropTypes.func\n};\nCreateMedicalTestModal.defaultProps = {\n  open: false,\n  onClose: () => {},\n  subjectId: '',\n  handleSubmit: () => {}\n};\nexport default CreateMedicalTestModal;","map":{"version":3,"names":["React","useEffect","PropTypes","Modal","useDispatch","useSelector","getSubject","MedicalTestForm","CreateMedicalTestModal","props","_subject$information","open","onClose","subjectId","handleSubmit","dispatch","subject","state","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Header","information","fullName","Content","subjectCode","code","diseaseLocation","onSubmit","propTypes","bool","func","string","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/medical-test/components/subjects/CreateMedicalTestModal.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'semantic-ui-react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSubject } from 'infection-chain/actions/subject';\n\nimport MedicalTestForm from './MedicalTestForm';\n\nconst CreateMedicalTestModal = (props) => {\n  const {\n    open,\n    onClose,\n    subjectId,\n    handleSubmit,\n  } = props;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (subjectId) {\n      dispatch(getSubject(subjectId));\n    }\n  }, [dispatch, subjectId]);\n\n  const { subject } = useSelector((state) => state.subject);\n\n  return (\n    <Modal\n      open={open}\n      onClose={onClose}\n    >\n      <Modal.Header>{subject?.information?.fullName}</Modal.Header>\n      <Modal.Content>\n        <MedicalTestForm\n          subjectCode={subject?.code}\n          diseaseLocation={subject?.diseaseLocation}\n          onSubmit={handleSubmit}\n        />\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nCreateMedicalTestModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  subjectId: PropTypes.string,\n  handleSubmit: PropTypes.func,\n};\n\nCreateMedicalTestModal.defaultProps = {\n  open: false,\n  onClose: () => {},\n  subjectId: '',\n  handleSubmit: () => {},\n};\n\nexport default CreateMedicalTestModal;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK,QAAQ,mBAAmB;AAEzC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,iCAAiC;AAE5D,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,MAAMC,sBAAsB,GAAIC,KAAK,IAAK;EAAA,IAAAC,oBAAA;EACxC,MAAM;IACJC,IAAI;IACJC,OAAO;IACPC,SAAS;IACTC;EACF,CAAC,GAAGL,KAAK;EAET,MAAMM,QAAQ,GAAGX,WAAW,EAAE;EAE9BH,SAAS,CAAC,MAAM;IACd,IAAIY,SAAS,EAAE;MACbE,QAAQ,CAACT,UAAU,CAACO,SAAS,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,CAACE,QAAQ,EAAEF,SAAS,CAAC,CAAC;EAEzB,MAAM;IAAEG;EAAQ,CAAC,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EAEzD,oBACEhB,KAAA,CAAAkB,aAAA,CAACf,KAAK;IACJQ,IAAI,EAAEA,IAAK;IACXC,OAAO,EAAEA,OAAQ;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEjBxB,KAAA,CAAAkB,aAAA,CAACf,KAAK,CAACsB,MAAM;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAER,OAAO,aAAPA,OAAO,wBAAAN,oBAAA,GAAPM,OAAO,CAAEU,WAAW,cAAAhB,oBAAA,uBAApBA,oBAAA,CAAsBiB,QAAQ,CAAgB,eAC7D3B,KAAA,CAAAkB,aAAA,CAACf,KAAK,CAACyB,OAAO;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACZxB,KAAA,CAAAkB,aAAA,CAACX,eAAe;IACdsB,WAAW,EAAEb,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEc,IAAK;IAC3BC,eAAe,EAAEf,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEe,eAAgB;IAC1CC,QAAQ,EAAElB,YAAa;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACvB,CACY,CACV;AAEZ,CAAC;AAEDhB,sBAAsB,CAACyB,SAAS,GAAG;EACjCtB,IAAI,EAAET,SAAS,CAACgC,IAAI;EACpBtB,OAAO,EAAEV,SAAS,CAACiC,IAAI;EACvBtB,SAAS,EAAEX,SAAS,CAACkC,MAAM;EAC3BtB,YAAY,EAAEZ,SAAS,CAACiC;AAC1B,CAAC;AAED3B,sBAAsB,CAAC6B,YAAY,GAAG;EACpC1B,IAAI,EAAE,KAAK;EACXC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAC;EACjBC,SAAS,EAAE,EAAE;EACbC,YAAY,EAAEA,CAAA,KAAM,CAAC;AACvB,CAAC;AAED,eAAeN,sBAAsB"},"metadata":{},"sourceType":"module"}