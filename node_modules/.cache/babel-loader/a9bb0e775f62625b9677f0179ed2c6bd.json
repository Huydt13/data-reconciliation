{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\profile\\\\utils\\\\helpers.js\";\n/* eslint-disable react/react-in-jsx-scope */\nimport React from 'react';\nimport { IMMUNIZATION_STATUSES, INFECTIOUS_REASONS, INFECTIOUS_STATUSES } from 'profile/utils/constants';\nconst defaultProfileValue = {\n  id: 0,\n  guid: '',\n  cccd: '',\n  cmnd: '',\n  healthInsuranceNumber: '',\n  passportNumber: '',\n  fullName: '',\n  gender: '',\n  nationality: 'vn',\n  religion: '',\n  email: '',\n  phoneNumber: '',\n  dateOfBirth: '',\n  hasYearOfBirthOnly: true,\n  job: '',\n  initialMovingInformation: '',\n  addressesInVietnam: [{\n    id: 0,\n    guid: '',\n    name: '',\n    room: '',\n    floor: '',\n    block: '',\n    provinceValue: '79',\n    districtValue: '',\n    wardValue: '',\n    quarter: '',\n    quarterGroup: '',\n    streetHouseNumber: '',\n    locationType: ''\n  }],\n  workAddresses: [{\n    id: 0,\n    guid: '',\n    name: '',\n    room: '',\n    floor: '',\n    block: '',\n    provinceValue: '',\n    districtValue: '',\n    wardValue: '',\n    quarter: '',\n    quarterGroup: '',\n    streetHouseNumber: '',\n    locationType: ''\n  }],\n  immunizations: []\n};\nconst immunizationStatusOptions = [{\n  key: 0,\n  value: IMMUNIZATION_STATUSES.NO_RECORD,\n  text: 'Chưa rõ'\n}, {\n  key: 1,\n  value: IMMUNIZATION_STATUSES.NO_VACCINE,\n  text: 'Chưa tiêm'\n}, {\n  key: 2,\n  value: IMMUNIZATION_STATUSES.ONE_SHOT,\n  text: 'Đã tiêm 1 mũi'\n}, {\n  key: 3,\n  value: IMMUNIZATION_STATUSES.TWO_SHOT,\n  text: 'Đã tiêm 2 mũi'\n}, {\n  key: 4,\n  value: IMMUNIZATION_STATUSES.MORE_THAN_TWO_SHOT,\n  text: 'Đã tiêm hơn 2 mũi'\n}];\nconst vaccineTypeOptions = ['Abdala', 'Hayat-Vax', 'Pfizer', 'Janssen', 'Moderna', 'Vero-Cell', 'Sputnik-V', 'AstraZeneca'].map(v => ({\n  value: v,\n  text: v\n}));\nconst infectiousStatusOptions = [{\n  value: INFECTIOUS_STATUSES.POSITIVE,\n  text: 'Dương tính'\n}, {\n  value: INFECTIOUS_STATUSES.NEGATIVE,\n  text: 'Âm tính'\n}];\nconst infectiousReasonOptions = [{\n  value: INFECTIOUS_REASONS.A,\n  text: 'Xét nghiệm PCR dương tính'\n}, {\n  value: INFECTIOUS_REASONS.B,\n  text: 'Xét nghiệm nhanh dương tính với tầm soát người nguy cơ rất cao F1'\n}, {\n  value: INFECTIOUS_REASONS.C,\n  text: 'Xét nghiệm nhanh dương tính với nghi ngờ nhiễm covid 19'\n}, {\n  value: INFECTIOUS_REASONS.D,\n  text: 'Xét nghiệm nhanh hai lần dương tính'\n}, {\n  value: INFECTIOUS_REASONS.NOT_A,\n  text: 'Xét nghiệm PCR âm tính'\n}, {\n  value: INFECTIOUS_REASONS.NOT_D,\n  text: 'Xét nghiệm nhanh hai lần âm tính'\n}, {\n  value: INFECTIOUS_REASONS.OVER_POSITIVE_TIME,\n  text: 'Vượt quá 14 ngày'\n}];\nconst formatGender = function () {\n  let gender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  switch (gender.toUpperCase()) {\n    case 'NỮ':\n      return 0;\n    case 'NAM':\n      return 1;\n    default:\n      return 2;\n  }\n};\nconst renderInfectiousStatus = value => {\n  const status = infectiousStatusOptions.find(s => s.value === value);\n  if (status) {\n    if (status.value === INFECTIOUS_STATUSES.POSITIVE) {\n      return /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          color: '#DB2729'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, status.text);\n    }\n    return status.text;\n  }\n  return null;\n};\nconst renderInfectiousReason = value => {\n  var _reason$text;\n  const reason = infectiousReasonOptions.find(s => s.value === value);\n  return (_reason$text = reason === null || reason === void 0 ? void 0 : reason.text) !== null && _reason$text !== void 0 ? _reason$text : null;\n};\nexport { defaultProfileValue, immunizationStatusOptions, vaccineTypeOptions, infectiousStatusOptions, infectiousReasonOptions, formatGender, renderInfectiousStatus, renderInfectiousReason };","map":{"version":3,"names":["React","IMMUNIZATION_STATUSES","INFECTIOUS_REASONS","INFECTIOUS_STATUSES","defaultProfileValue","id","guid","cccd","cmnd","healthInsuranceNumber","passportNumber","fullName","gender","nationality","religion","email","phoneNumber","dateOfBirth","hasYearOfBirthOnly","job","initialMovingInformation","addressesInVietnam","name","room","floor","block","provinceValue","districtValue","wardValue","quarter","quarterGroup","streetHouseNumber","locationType","workAddresses","immunizations","immunizationStatusOptions","key","value","NO_RECORD","text","NO_VACCINE","ONE_SHOT","TWO_SHOT","MORE_THAN_TWO_SHOT","vaccineTypeOptions","map","v","infectiousStatusOptions","POSITIVE","NEGATIVE","infectiousReasonOptions","A","B","C","D","NOT_A","NOT_D","OVER_POSITIVE_TIME","formatGender","arguments","length","undefined","toUpperCase","renderInfectiousStatus","status","find","s","createElement","style","color","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","renderInfectiousReason","_reason$text","reason"],"sources":["H:/BAKCO/pj/data reconciliation/src/profile/utils/helpers.js"],"sourcesContent":["/* eslint-disable react/react-in-jsx-scope */\nimport React from 'react';\nimport { IMMUNIZATION_STATUSES, INFECTIOUS_REASONS, INFECTIOUS_STATUSES } from 'profile/utils/constants';\n\nconst defaultProfileValue = {\n  id: 0,\n  guid: '',\n  cccd: '',\n  cmnd: '',\n  healthInsuranceNumber: '',\n  passportNumber: '',\n  fullName: '',\n  gender: '',\n  nationality: 'vn',\n  religion: '',\n  email: '',\n  phoneNumber: '',\n  dateOfBirth: '',\n  hasYearOfBirthOnly: true,\n  job: '',\n  initialMovingInformation: '',\n  addressesInVietnam: [\n    {\n      id: 0,\n      guid: '',\n      name: '',\n      room: '',\n      floor: '',\n      block: '',\n      provinceValue: '79',\n      districtValue: '',\n      wardValue: '',\n      quarter: '',\n      quarterGroup: '',\n      streetHouseNumber: '',\n      locationType: '',\n    },\n  ],\n  workAddresses: [\n    {\n      id: 0,\n      guid: '',\n      name: '',\n      room: '',\n      floor: '',\n      block: '',\n      provinceValue: '',\n      districtValue: '',\n      wardValue: '',\n      quarter: '',\n      quarterGroup: '',\n      streetHouseNumber: '',\n      locationType: '',\n    },\n  ],\n  immunizations: [],\n};\n\nconst immunizationStatusOptions = [\n  { key: 0, value: IMMUNIZATION_STATUSES.NO_RECORD, text: 'Chưa rõ' },\n  { key: 1, value: IMMUNIZATION_STATUSES.NO_VACCINE, text: 'Chưa tiêm' },\n  { key: 2, value: IMMUNIZATION_STATUSES.ONE_SHOT, text: 'Đã tiêm 1 mũi' },\n  { key: 3, value: IMMUNIZATION_STATUSES.TWO_SHOT, text: 'Đã tiêm 2 mũi' },\n  { key: 4, value: IMMUNIZATION_STATUSES.MORE_THAN_TWO_SHOT, text: 'Đã tiêm hơn 2 mũi' },\n];\n\nconst vaccineTypeOptions = ['Abdala', 'Hayat-Vax', 'Pfizer', 'Janssen', 'Moderna', 'Vero-Cell', 'Sputnik-V', 'AstraZeneca']\n  .map((v) => ({\n    value: v,\n    text: v,\n  }));\n\nconst infectiousStatusOptions = [\n  { value: INFECTIOUS_STATUSES.POSITIVE, text: 'Dương tính' },\n  { value: INFECTIOUS_STATUSES.NEGATIVE, text: 'Âm tính' },\n];\n\nconst infectiousReasonOptions = [\n  { value: INFECTIOUS_REASONS.A, text: 'Xét nghiệm PCR dương tính' },\n  { value: INFECTIOUS_REASONS.B, text: 'Xét nghiệm nhanh dương tính với tầm soát người nguy cơ rất cao F1' },\n  { value: INFECTIOUS_REASONS.C, text: 'Xét nghiệm nhanh dương tính với nghi ngờ nhiễm covid 19' },\n  { value: INFECTIOUS_REASONS.D, text: 'Xét nghiệm nhanh hai lần dương tính' },\n  { value: INFECTIOUS_REASONS.NOT_A, text: 'Xét nghiệm PCR âm tính' },\n  { value: INFECTIOUS_REASONS.NOT_D, text: 'Xét nghiệm nhanh hai lần âm tính' },\n  { value: INFECTIOUS_REASONS.OVER_POSITIVE_TIME, text: 'Vượt quá 14 ngày' },\n];\n\nconst formatGender = (gender = '') => {\n  switch (gender.toUpperCase()) {\n    case 'NỮ':\n      return 0;\n    case 'NAM':\n      return 1;\n    default:\n      return 2;\n  }\n};\n\nconst renderInfectiousStatus = (value) => {\n  const status = infectiousStatusOptions.find((s) => s.value === value);\n  if (status) {\n    if (status.value === INFECTIOUS_STATUSES.POSITIVE) {\n      return (\n        <b style={{ color: '#DB2729' }}>{status.text}</b>\n      );\n    }\n    return status.text;\n  }\n  return null;\n};\n\nconst renderInfectiousReason = (value) => {\n  const reason = infectiousReasonOptions.find((s) => s.value === value);\n  return reason?.text ?? null;\n};\n\nexport {\n  defaultProfileValue,\n  immunizationStatusOptions,\n  vaccineTypeOptions,\n  infectiousStatusOptions,\n  infectiousReasonOptions,\n  formatGender,\n  renderInfectiousStatus,\n  renderInfectiousReason,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}