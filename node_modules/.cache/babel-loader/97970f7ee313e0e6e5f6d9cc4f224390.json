{"ast":null,"code":"import { treatmentPaging } from 'app/utils/helpers';\nimport types from '../actions/types';\nconst INITIAL_STATE = {\n  quarantineListByFacilityData: treatmentPaging,\n  getQuarantineListByFacilityLoading: false,\n  facilityDetailData: undefined,\n  getFacilityDetailLoading: false,\n  completeTreatmentLoading: false,\n  transitTreatmentLoading: false,\n  outOfProcessTreatmentLoading: false,\n  createTransferLoading: false\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.GET_QUARANTINE_LIST_BY_FACILITY_REQUEST:\n      return {\n        ...state,\n        getQuarantineListByFacilityLoading: true\n      };\n    case types.GET_QUARANTINE_LIST_BY_FACILITY_SUCCESS:\n      return {\n        ...state,\n        getQuarantineListByFacilityLoading: false,\n        quarantineListByFacilityData: action.payload\n      };\n    case types.GET_QUARANTINE_LIST_BY_FACILITY_FAILURE:\n      return {\n        ...state,\n        getQuarantineListByFacilityLoading: false\n      };\n    case types.TM_COMPLETE_REQUEST:\n      return {\n        ...state,\n        completeTreatmentLoading: true\n      };\n    case types.TM_COMPLETE_SUCCESS:\n    case types.TM_COMPLETE_FAILURE:\n      return {\n        ...state,\n        completeTreatmentLoading: false\n      };\n    case types.TM_TRANSIT_REQUEST:\n      return {\n        ...state,\n        transitTreatmentLoading: true\n      };\n    case types.TM_TRANSIT_SUCCESS:\n    case types.TM_TRANSIT_FAILURE:\n      return {\n        ...state,\n        transitTreatmentLoading: false\n      };\n    case types.TM_OUT_OF_PROCESS_REQUEST:\n      return {\n        ...state,\n        outOfProcessTreatmentLoading: true\n      };\n    case types.TM_OUT_OF_PROCESS_SUCCESS:\n    case types.TM_OUT_OF_PROCESS_FAILURE:\n      return {\n        ...state,\n        outOfProcessTreatmentLoading: true\n      };\n    case types.TM_TRANSFER_REQUEST:\n      return {\n        ...state,\n        createTransferLoading: true\n      };\n    case types.TM_TRANSFER_SUCCESS:\n    case types.TM_TRANSFER_FAILURE:\n      return {\n        ...state,\n        createTransferLoading: true\n      };\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["treatmentPaging","types","INITIAL_STATE","quarantineListByFacilityData","getQuarantineListByFacilityLoading","facilityDetailData","undefined","getFacilityDetailLoading","completeTreatmentLoading","transitTreatmentLoading","outOfProcessTreatmentLoading","createTransferLoading","state","arguments","length","action","type","GET_QUARANTINE_LIST_BY_FACILITY_REQUEST","GET_QUARANTINE_LIST_BY_FACILITY_SUCCESS","payload","GET_QUARANTINE_LIST_BY_FACILITY_FAILURE","TM_COMPLETE_REQUEST","TM_COMPLETE_SUCCESS","TM_COMPLETE_FAILURE","TM_TRANSIT_REQUEST","TM_TRANSIT_SUCCESS","TM_TRANSIT_FAILURE","TM_OUT_OF_PROCESS_REQUEST","TM_OUT_OF_PROCESS_SUCCESS","TM_OUT_OF_PROCESS_FAILURE","TM_TRANSFER_REQUEST","TM_TRANSFER_SUCCESS","TM_TRANSFER_FAILURE"],"sources":["H:/BAKCO/pj/data reconciliation/src/treatment/reducers/quarantine-list.js"],"sourcesContent":["import { treatmentPaging } from 'app/utils/helpers';\nimport types from '../actions/types';\n\nconst INITIAL_STATE = {\n  quarantineListByFacilityData: treatmentPaging,\n  getQuarantineListByFacilityLoading: false,\n\n  facilityDetailData: undefined,\n  getFacilityDetailLoading: false,\n\n  completeTreatmentLoading: false,\n\n  transitTreatmentLoading: false,\n\n  outOfProcessTreatmentLoading: false,\n\n  createTransferLoading: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.GET_QUARANTINE_LIST_BY_FACILITY_REQUEST:\n      return {\n        ...state,\n        getQuarantineListByFacilityLoading: true,\n      };\n    case types.GET_QUARANTINE_LIST_BY_FACILITY_SUCCESS:\n      return {\n        ...state,\n        getQuarantineListByFacilityLoading: false,\n        quarantineListByFacilityData: action.payload,\n      };\n    case types.GET_QUARANTINE_LIST_BY_FACILITY_FAILURE:\n      return {\n        ...state,\n        getQuarantineListByFacilityLoading: false,\n      };\n    case types.TM_COMPLETE_REQUEST:\n      return {\n        ...state,\n        completeTreatmentLoading: true,\n      };\n    case types.TM_COMPLETE_SUCCESS:\n    case types.TM_COMPLETE_FAILURE:\n      return {\n        ...state,\n        completeTreatmentLoading: false,\n      };\n    case types.TM_TRANSIT_REQUEST:\n      return {\n        ...state,\n        transitTreatmentLoading: true,\n      };\n    case types.TM_TRANSIT_SUCCESS:\n    case types.TM_TRANSIT_FAILURE:\n      return {\n        ...state,\n        transitTreatmentLoading: false,\n      };\n    case types.TM_OUT_OF_PROCESS_REQUEST:\n      return {\n        ...state,\n        outOfProcessTreatmentLoading: true,\n      };\n    case types.TM_OUT_OF_PROCESS_SUCCESS:\n    case types.TM_OUT_OF_PROCESS_FAILURE:\n      return {\n        ...state,\n        outOfProcessTreatmentLoading: true,\n      };\n    case types.TM_TRANSFER_REQUEST:\n      return {\n        ...state,\n        createTransferLoading: true,\n      };\n    case types.TM_TRANSFER_SUCCESS:\n    case types.TM_TRANSFER_FAILURE:\n      return {\n        ...state,\n        createTransferLoading: true,\n      };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,mBAAmB;AACnD,OAAOC,KAAK,MAAM,kBAAkB;AAEpC,MAAMC,aAAa,GAAG;EACpBC,4BAA4B,EAAEH,eAAe;EAC7CI,kCAAkC,EAAE,KAAK;EAEzCC,kBAAkB,EAAEC,SAAS;EAC7BC,wBAAwB,EAAE,KAAK;EAE/BC,wBAAwB,EAAE,KAAK;EAE/BC,uBAAuB,EAAE,KAAK;EAE9BC,4BAA4B,EAAE,KAAK;EAEnCC,qBAAqB,EAAE;AACzB,CAAC;AAED,gBAAe,YAAmC;EAAA,IAAlCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAP,SAAA,GAAAO,SAAA,MAAGX,aAAa;EAAA,IAAEa,MAAM,GAAAF,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAP,SAAA;EAC3C,QAAQS,MAAM,CAACC,IAAI;IACjB,KAAKf,KAAK,CAACgB,uCAAuC;MAChD,OAAO;QACL,GAAGL,KAAK;QACRR,kCAAkC,EAAE;MACtC,CAAC;IACH,KAAKH,KAAK,CAACiB,uCAAuC;MAChD,OAAO;QACL,GAAGN,KAAK;QACRR,kCAAkC,EAAE,KAAK;QACzCD,4BAA4B,EAAEY,MAAM,CAACI;MACvC,CAAC;IACH,KAAKlB,KAAK,CAACmB,uCAAuC;MAChD,OAAO;QACL,GAAGR,KAAK;QACRR,kCAAkC,EAAE;MACtC,CAAC;IACH,KAAKH,KAAK,CAACoB,mBAAmB;MAC5B,OAAO;QACL,GAAGT,KAAK;QACRJ,wBAAwB,EAAE;MAC5B,CAAC;IACH,KAAKP,KAAK,CAACqB,mBAAmB;IAC9B,KAAKrB,KAAK,CAACsB,mBAAmB;MAC5B,OAAO;QACL,GAAGX,KAAK;QACRJ,wBAAwB,EAAE;MAC5B,CAAC;IACH,KAAKP,KAAK,CAACuB,kBAAkB;MAC3B,OAAO;QACL,GAAGZ,KAAK;QACRH,uBAAuB,EAAE;MAC3B,CAAC;IACH,KAAKR,KAAK,CAACwB,kBAAkB;IAC7B,KAAKxB,KAAK,CAACyB,kBAAkB;MAC3B,OAAO;QACL,GAAGd,KAAK;QACRH,uBAAuB,EAAE;MAC3B,CAAC;IACH,KAAKR,KAAK,CAAC0B,yBAAyB;MAClC,OAAO;QACL,GAAGf,KAAK;QACRF,4BAA4B,EAAE;MAChC,CAAC;IACH,KAAKT,KAAK,CAAC2B,yBAAyB;IACpC,KAAK3B,KAAK,CAAC4B,yBAAyB;MAClC,OAAO;QACL,GAAGjB,KAAK;QACRF,4BAA4B,EAAE;MAChC,CAAC;IACH,KAAKT,KAAK,CAAC6B,mBAAmB;MAC5B,OAAO;QACL,GAAGlB,KAAK;QACRD,qBAAqB,EAAE;MACzB,CAAC;IACH,KAAKV,KAAK,CAAC8B,mBAAmB;IAC9B,KAAK9B,KAAK,CAAC+B,mBAAmB;MAC5B,OAAO;QACL,GAAGpB,KAAK;QACRD,qBAAqB,EAAE;MACzB,CAAC;IACH;MACE,OAAOC,KAAK;EAAC;AAEnB,CAAC"},"metadata":{},"sourceType":"module"}