{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\profile-train\\\\pages\\\\ProfileDetailPages.js\";\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { Loader, Tab } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createProfile, getProfile, updateProfile, verifyProfile } from \"profile/actions/profile\";\nimport { showConfirmModal } from \"app/actions/global\";\nimport ProfileInformation from \"infection-chain/components/subject/information/SubjectForm-train\";\nconst StyledWrapper = styled.div`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  position: relative;\n`;\nconst ProfileDetailPage = () => {\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const {\n    profile,\n    getProfileLoading\n  } = useSelector(state => state.profile);\n  const {\n    relatedProfileId\n  } = useSelector(state => state.subject);\n  const handleRefresh = useCallback(() => {\n    if (id.indexOf(\"-\") === -1) {\n      dispatch(getProfile(id));\n      window.scrollTo(0, 0);\n    }\n  }, [dispatch, id]);\n  useEffect(() => {\n    handleRefresh();\n  }, [handleRefresh]);\n  useEffect(() => {\n    var _profile$fullName;\n    document.title = (_profile$fullName = profile === null || profile === void 0 ? void 0 : profile.fullName) !== null && _profile$fullName !== void 0 ? _profile$fullName : \"CDS\";\n    return () => {\n      document.title = \"CDS\";\n    };\n    // eslint-disable-next-line\n  }, [profile]);\n  const handleSubmit = async (data, isVerified) => {\n    const {\n      dateOfBirth,\n      profileCreationReason: {\n        isFromDomesticInfectedZone,\n        countryValue,\n        domesticInfectedProvinceValue,\n        reason,\n        reasonType,\n        reasonAttribute,\n        realtedPositiveProfileId\n      }\n    } = data || {\n      dateOfBirth: \"\",\n      profileCreationReason: {\n        isFromDomesticInfectedZone: false,\n        countryValue: \"\",\n        domesticInfectedProvinceValue: \"\",\n        reason: \"\",\n        reasonType: \"\",\n        reasonAttribute: \"\",\n        realtedPositiveProfileId: 0\n      }\n    };\n    let formattedDOB = \"\";\n    if ((dateOfBirth === null || dateOfBirth === void 0 ? void 0 : dateOfBirth.length) === 4) {\n      formattedDOB = moment(dateOfBirth, \"YYYY\").startOf(\"year\").format(\"YYYY-MM-DD\");\n    }\n    const profileData = {\n      ...data,\n      id,\n      dateOfBirth: formattedDOB || dateOfBirth,\n      profileCreationReason: {\n        isFromDomesticInfectedZone,\n        countryValue,\n        domesticInfectedProvinceValue,\n        reason,\n        reasonType,\n        reasonAttribute,\n        realtedPositiveProfileId: relatedProfileId || realtedPositiveProfileId || undefined\n      }\n    };\n    if (isVerified) {\n      dispatch(showConfirmModal(\"Xác minh thông tin đối tượng?\", () => {\n        dispatch(verifyProfile(profileData)).then(() => {\n          dispatch(getProfile(id));\n        });\n      }));\n    } else {\n      dispatch(id ? updateProfile(profileData) : createProfile(profileData)).then(() => {\n        dispatch(getProfile(id));\n      });\n    }\n  };\n  const [defaultActiveIndex] = useState(window.location.href.includes(\"chain\") ? 1 : 0);\n  const profileInformation = useMemo(() => /*#__PURE__*/React.createElement(ProfileInformation, {\n    initialData: profile,\n    onSubmit: handleSubmit,\n    onReload: () => {\n      dispatch(getProfile(id));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }),\n  // eslint-disable-next-line\n  [profile]);\n  const panes = [{\n    title: \"Thông tin đối tượng\",\n    component: profileInformation\n  }];\n  return /*#__PURE__*/React.createElement(StyledWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    active: getProfileLoading,\n    inline: \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }), profile && /*#__PURE__*/React.createElement(Tab, {\n    defaultActiveIndex: defaultActiveIndex,\n    renderActiveOnly: true,\n    panes: panes.map(p => ({\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 27\n        }\n      }, p.component)\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }));\n};\nexport default ProfileDetailPage;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","useParams","moment","styled","Loader","Tab","useSelector","useDispatch","createProfile","getProfile","updateProfile","verifyProfile","showConfirmModal","ProfileInformation","StyledWrapper","div","ProfileDetailPage","id","dispatch","profile","getProfileLoading","state","relatedProfileId","subject","handleRefresh","indexOf","window","scrollTo","_profile$fullName","document","title","fullName","handleSubmit","data","isVerified","dateOfBirth","profileCreationReason","isFromDomesticInfectedZone","countryValue","domesticInfectedProvinceValue","reason","reasonType","reasonAttribute","realtedPositiveProfileId","formattedDOB","length","startOf","format","profileData","undefined","then","defaultActiveIndex","location","href","includes","profileInformation","createElement","initialData","onSubmit","onReload","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","panes","component","active","inline","renderActiveOnly","map","p","render","Pane"],"sources":["H:/BAKCO/pj/data reconciliation/src/profile-train/pages/ProfileDetailPages.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Loader, Tab } from \"semantic-ui-react\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  createProfile,\r\n  getProfile,\r\n  updateProfile,\r\n  verifyProfile,\r\n} from \"profile/actions/profile\";\r\n\r\nimport { showConfirmModal } from \"app/actions/global\";\r\n\r\nimport ProfileInformation from \"infection-chain/components/subject/information/SubjectForm-train\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  padding-top: 10px;\r\n  padding-bottom: 10px;\r\n  position: relative;\r\n`;\r\n\r\nconst ProfileDetailPage = () => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  const { profile, getProfileLoading } = useSelector((state) => state.profile);\r\n  const { relatedProfileId } = useSelector((state) => state.subject);\r\n\r\n  const handleRefresh = useCallback(() => {\r\n    if (id.indexOf(\"-\") === -1) {\r\n      dispatch(getProfile(id));\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [dispatch, id]);\r\n\r\n  useEffect(() => {\r\n    handleRefresh();\r\n  }, [handleRefresh]);\r\n\r\n  useEffect(() => {\r\n    document.title = profile?.fullName ?? \"CDS\";\r\n    return () => {\r\n      document.title = \"CDS\";\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [profile]);\r\n\r\n  const handleSubmit = async (data, isVerified) => {\r\n    const {\r\n      dateOfBirth,\r\n      profileCreationReason: {\r\n        isFromDomesticInfectedZone,\r\n        countryValue,\r\n        domesticInfectedProvinceValue,\r\n        reason,\r\n        reasonType,\r\n        reasonAttribute,\r\n        realtedPositiveProfileId,\r\n      },\r\n    } = data || {\r\n      dateOfBirth: \"\",\r\n      profileCreationReason: {\r\n        isFromDomesticInfectedZone: false,\r\n        countryValue: \"\",\r\n        domesticInfectedProvinceValue: \"\",\r\n        reason: \"\",\r\n        reasonType: \"\",\r\n        reasonAttribute: \"\",\r\n        realtedPositiveProfileId: 0,\r\n      },\r\n    };\r\n    let formattedDOB = \"\";\r\n    if (dateOfBirth?.length === 4) {\r\n      formattedDOB = moment(dateOfBirth, \"YYYY\")\r\n        .startOf(\"year\")\r\n        .format(\"YYYY-MM-DD\");\r\n    }\r\n\r\n    const profileData = {\r\n      ...data,\r\n      id,\r\n      dateOfBirth: formattedDOB || dateOfBirth,\r\n      profileCreationReason: {\r\n        isFromDomesticInfectedZone,\r\n        countryValue,\r\n        domesticInfectedProvinceValue,\r\n        reason,\r\n        reasonType,\r\n        reasonAttribute,\r\n        realtedPositiveProfileId:\r\n          relatedProfileId || realtedPositiveProfileId || undefined,\r\n      },\r\n    };\r\n\r\n    if (isVerified) {\r\n      dispatch(\r\n        showConfirmModal(\"Xác minh thông tin đối tượng?\", () => {\r\n          dispatch(verifyProfile(profileData)).then(() => {\r\n            dispatch(getProfile(id));\r\n          });\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        id ? updateProfile(profileData) : createProfile(profileData)\r\n      ).then(() => {\r\n        dispatch(getProfile(id));\r\n      });\r\n    }\r\n  };\r\n\r\n  const [defaultActiveIndex] = useState(\r\n    window.location.href.includes(\"chain\") ? 1 : 0\r\n  );\r\n\r\n  const profileInformation = useMemo(\r\n    () => (\r\n      <ProfileInformation\r\n        initialData={profile}\r\n        onSubmit={handleSubmit}\r\n        onReload={() => {\r\n          dispatch(getProfile(id));\r\n        }}\r\n      />\r\n    ),\r\n    // eslint-disable-next-line\r\n    [profile]\r\n  );\r\n\r\n  const panes = [\r\n    { title: \"Thông tin đối tượng\", component: profileInformation },\r\n  ];\r\n  return (\r\n    <StyledWrapper>\r\n      <Loader active={getProfileLoading} inline=\"centered\" />\r\n      {profile && (\r\n        <Tab\r\n          defaultActiveIndex={defaultActiveIndex}\r\n          renderActiveOnly\r\n          panes={panes.map((p) => ({\r\n            render: () => <Tab.Pane>{p.component}</Tab.Pane>,\r\n          }))}\r\n        />\r\n      )}\r\n    </StyledWrapper>\r\n  );\r\n};\r\n\r\nexport default ProfileDetailPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}