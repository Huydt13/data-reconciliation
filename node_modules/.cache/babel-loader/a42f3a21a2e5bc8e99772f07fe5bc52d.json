{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\infection-chain\\\\components\\\\subject\\\\information\\\\DiseaseHistoryTable.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { DataTable } from 'app/components/shared';\nimport { formatAddressToString, formatToDate } from 'app/utils/helpers';\nimport { getInfectiousDiseaseHistoriesByProfile } from 'profile/actions/profile';\nimport { renderInfectiousReason, renderInfectiousStatus } from 'profile/utils/helpers';\nconst columns = [{\n  Header: '#',\n  accessor: 'index'\n}, {\n  Header: 'Thời gian',\n  formatter: _ref => {\n    let {\n      date\n    } = _ref;\n    return formatToDate(date);\n  }\n}, {\n  Header: 'Tên bệnh',\n  formatter: () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }\n  }, \"Covid-19\")\n}, {\n  Header: 'Loại ca bệnh',\n  formatter: () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  }, \"Ca b\\u1EC7nh x\\xE1c \\u0111\\u1ECBnh\")\n}, {\n  Header: 'Địa chỉ phát bệnh',\n  formatter: r => {\n    var _r$airPlane, _r$airPlane2, _r$estate$streetHouse, _r$vehicle, _r$vehicle2;\n    return (r === null || r === void 0 ? void 0 : r.airPlane) ? `Chuyến bay:${r === null || r === void 0 ? void 0 : (_r$airPlane = r.airPlane) === null || _r$airPlane === void 0 ? void 0 : _r$airPlane.seatNumber}-${r === null || r === void 0 ? void 0 : (_r$airPlane2 = r.airPlane) === null || _r$airPlane2 === void 0 ? void 0 : _r$airPlane2.flightFrom}` : (r === null || r === void 0 ? void 0 : r.estate) ? formatAddressToString({\n      ...(r === null || r === void 0 ? void 0 : r.estate),\n      streetHouseNumber: (_r$estate$streetHouse = r === null || r === void 0 ? void 0 : r.estate.streetHouseNumber) !== null && _r$estate$streetHouse !== void 0 ? _r$estate$streetHouse : ''\n    }) : (r === null || r === void 0 ? void 0 : r.vehicle) ? `Phương tiện :${r === null || r === void 0 ? void 0 : (_r$vehicle = r.vehicle) === null || _r$vehicle === void 0 ? void 0 : _r$vehicle.vehicleName}-${r === null || r === void 0 ? void 0 : (_r$vehicle2 = r.vehicle) === null || _r$vehicle2 === void 0 ? void 0 : _r$vehicle2.from}` : null;\n  },\n  cutlength: 30\n}, {\n  Header: 'Địa chỉ cách ly',\n  formatter: _ref2 => {\n    var _quarantineAddress$st;\n    let {\n      quarantineAddress\n    } = _ref2;\n    return formatAddressToString({\n      ...quarantineAddress,\n      streetHouseNumber: (_quarantineAddress$st = quarantineAddress === null || quarantineAddress === void 0 ? void 0 : quarantineAddress.streetHouseNumber) !== null && _quarantineAddress$st !== void 0 ? _quarantineAddress$st : ''\n    });\n  },\n  cutlength: 30\n}, {\n  Header: 'Trạng thái',\n  formatter: _ref3 => {\n    let {\n      infectiousDiseaseStatus\n    } = _ref3;\n    return renderInfectiousStatus(infectiousDiseaseStatus);\n  }\n}, {\n  Header: 'Lý do xác định ca bệnh',\n  formatter: _ref4 => {\n    let {\n      infectionReason\n    } = _ref4;\n    return renderInfectiousReason(infectionReason);\n  }\n}\n// {\n//   Header: 'Kết thúc theo tiêu chí',\n//   formatter: ({ takeInTime }) => formatToDate(takeInTime),\n// },\n// {\n//   Header: 'Kết quả',\n//   formatter: ({ actualEndTime }) => formatToDate(actualEndTime),\n// },\n];\n\nconst DiseaseHistoryTable = _ref5 => {\n  let {\n    profile\n  } = _ref5;\n  const {\n    infectiousDiseaseHistoriesByProfile: {\n      totalPages,\n      data\n    },\n    getInfectiousDiseaseHistoriesByProfileLoading\n  } = useSelector(state => state.profile);\n  const dispatch = useDispatch();\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n\n  // const getData = useCallback(() => {\n  //   dispatch(\n  //     getHistories({\n  //       id: profile.id,\n  //       pageSize,\n  //       pageIndex,\n  //     }),\n  //   );\n  // }, [dispatch, pageSize, pageIndex, profile]);\n  const getData = useCallback(() => {\n    if (profile === null || profile === void 0 ? void 0 : profile.id) {\n      dispatch(getInfectiousDiseaseHistoriesByProfile({\n        profileId: profile.id\n      }));\n    }\n  }, [dispatch, pageSize, pageIndex, profile]);\n  useEffect(getData, [getData]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    title: \"L\\u1ECBch s\\u1EED ca b\\u1EC7nh\",\n    columns: columns,\n    data: (data || []).map((r, i) => ({\n      ...r,\n      index: i + 1\n    })),\n    loading: getInfectiousDiseaseHistoriesByProfileLoading,\n    pageCount: totalPages,\n    onPaginationChange: p => {\n      setPageIndex(p.pageIndex);\n      setPageSize(p.pageSize);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n};\nDiseaseHistoryTable.propTypes = {\n  // onRefresh: PropTypes.func,\n  profile: PropTypes.shape({\n    id: PropTypes.number,\n    fullName: PropTypes.string,\n    information: PropTypes.shape({\n      fullName: PropTypes.string,\n      alias: PropTypes.string\n    }),\n    diseaseLocation: PropTypes.shape({}),\n    type: PropTypes.number,\n    code: PropTypes.string,\n    createFromType: PropTypes.number\n  })\n};\nDiseaseHistoryTable.defaultProps = {\n  // onRefresh: () => {},\n  profile: {}\n};\nexport default DiseaseHistoryTable;","map":{"version":3,"names":["React","useCallback","useEffect","useState","PropTypes","useDispatch","useSelector","DataTable","formatAddressToString","formatToDate","getInfectiousDiseaseHistoriesByProfile","renderInfectiousReason","renderInfectiousStatus","columns","Header","accessor","formatter","_ref","date","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","r","_r$airPlane","_r$airPlane2","_r$estate$streetHouse","_r$vehicle","_r$vehicle2","airPlane","seatNumber","flightFrom","estate","streetHouseNumber","vehicle","vehicleName","from","cutlength","_ref2","_quarantineAddress$st","quarantineAddress","_ref3","infectiousDiseaseStatus","_ref4","infectionReason","DiseaseHistoryTable","_ref5","profile","infectiousDiseaseHistoriesByProfile","totalPages","data","getInfectiousDiseaseHistoriesByProfileLoading","state","dispatch","pageIndex","setPageIndex","pageSize","setPageSize","getData","id","profileId","title","map","i","index","loading","pageCount","onPaginationChange","p","propTypes","shape","number","fullName","string","information","alias","diseaseLocation","type","code","createFromType","defaultProps"],"sources":["H:/BAKCO/pj/data reconciliation/src/infection-chain/components/subject/information/DiseaseHistoryTable.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { DataTable } from 'app/components/shared';\nimport { formatAddressToString, formatToDate } from 'app/utils/helpers';\n\nimport { getInfectiousDiseaseHistoriesByProfile } from 'profile/actions/profile';\nimport { renderInfectiousReason, renderInfectiousStatus } from 'profile/utils/helpers';\n\nconst columns = [\n  { Header: '#', accessor: 'index' },\n  {\n    Header: 'Thời gian',\n    formatter: ({ date }) => formatToDate(date),\n  },\n  {\n    Header: 'Tên bệnh',\n    formatter: () => (<div>Covid-19</div>),\n  },\n\n  {\n    Header: 'Loại ca bệnh',\n    formatter: () => (<div>Ca bệnh xác định</div>),\n  },\n  {\n    Header: 'Địa chỉ phát bệnh',\n    formatter: (r) => r?.airPlane ? `Chuyến bay:${r?.airPlane?.seatNumber}-${r?.airPlane?.flightFrom}`\n      : r?.estate ? formatAddressToString({\n        ...r?.estate,\n        streetHouseNumber: r?.estate.streetHouseNumber ?? '',\n      })\n        : r?.vehicle ? `Phương tiện :${r?.vehicle?.vehicleName}-${r?.vehicle?.from}`\n          : null,\n    cutlength: 30,\n  },\n  {\n    Header: 'Địa chỉ cách ly',\n    formatter: ({ quarantineAddress }) => formatAddressToString({\n        ...quarantineAddress,\n        streetHouseNumber: quarantineAddress?.streetHouseNumber ?? '',\n      }),\n    cutlength: 30,\n  },\n  {\n    Header: 'Trạng thái',\n    formatter: ({ infectiousDiseaseStatus }) => renderInfectiousStatus(infectiousDiseaseStatus),\n  },\n  {\n    Header: 'Lý do xác định ca bệnh',\n    formatter: ({ infectionReason }) => renderInfectiousReason(infectionReason),\n  },\n  // {\n  //   Header: 'Kết thúc theo tiêu chí',\n  //   formatter: ({ takeInTime }) => formatToDate(takeInTime),\n  // },\n  // {\n  //   Header: 'Kết quả',\n  //   formatter: ({ actualEndTime }) => formatToDate(actualEndTime),\n  // },\n];\n\nconst DiseaseHistoryTable = ({ profile }) => {\n  const {\n    infectiousDiseaseHistoriesByProfile: { totalPages, data },\n    getInfectiousDiseaseHistoriesByProfileLoading,\n  } = useSelector((state) => state.profile);\n  const dispatch = useDispatch();\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n\n  // const getData = useCallback(() => {\n  //   dispatch(\n  //     getHistories({\n  //       id: profile.id,\n  //       pageSize,\n  //       pageIndex,\n  //     }),\n  //   );\n  // }, [dispatch, pageSize, pageIndex, profile]);\n  const getData = useCallback(() => {\n    if (profile?.id) {\n      dispatch(getInfectiousDiseaseHistoriesByProfile({ profileId: profile.id }));\n    }\n  }, [dispatch, pageSize, pageIndex, profile]);\n  useEffect(getData, [getData]);\n\n  return (\n    <div>\n      <DataTable\n        title=\"Lịch sử ca bệnh\"\n        columns={columns}\n        data={(data || []).map((r, i) => ({ ...r, index: i + 1 }))}\n        loading={getInfectiousDiseaseHistoriesByProfileLoading}\n        pageCount={totalPages}\n        onPaginationChange={(p) => {\n          setPageIndex(p.pageIndex);\n          setPageSize(p.pageSize);\n        }}\n      />\n    </div>\n  );\n};\n\nDiseaseHistoryTable.propTypes = {\n  // onRefresh: PropTypes.func,\n  profile: PropTypes.shape({\n    id: PropTypes.number,\n    fullName: PropTypes.string,\n    information: PropTypes.shape({\n      fullName: PropTypes.string,\n      alias: PropTypes.string,\n    }),\n    diseaseLocation: PropTypes.shape({}),\n    type: PropTypes.number,\n    code: PropTypes.string,\n    createFromType: PropTypes.number,\n  }),\n};\n\nDiseaseHistoryTable.defaultProps = {\n  // onRefresh: () => {},\n  profile: {},\n};\n\nexport default DiseaseHistoryTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}