{"ast":null,"code":"import { treatmentPaging } from 'app/utils/helpers';\nimport types from 'treatment/actions/types';\nconst INITIAL_STATE = {\n  hospitalData: treatmentPaging,\n  getHospitalsLoading: false,\n  createHospitalLoading: false,\n  updateHospitalLoading: false,\n  deleteHospitalLoading: false,\n  hospitalByFacilityData: treatmentPaging,\n  getHospitalsByFacilityLoading: false,\n  addHospitalsLoading: false,\n  removeHospitalsLoading: false\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.TM_GET_HOSPITALS_REQUEST:\n      {\n        return {\n          ...state,\n          getHospitalsLoading: true\n        };\n      }\n    case types.TM_GET_HOSPITALS_SUCCESS:\n      {\n        return {\n          ...state,\n          getHospitalsLoading: false,\n          hospitalData: action.payload\n        };\n      }\n    case types.TM_GET_HOSPITALS_FAILURE:\n      {\n        return {\n          ...state,\n          getHospitalsLoading: false\n        };\n      }\n    case types.TM_CREATE_HOSPITAL_REQUEST:\n      {\n        return {\n          ...state,\n          createHospitalLoading: true\n        };\n      }\n    case types.TM_CREATE_HOSPITAL_SUCCESS:\n    case types.TM_CREATE_HOSPITAL_FAILURE:\n      {\n        return {\n          ...state,\n          createHospitalLoading: false\n        };\n      }\n    case types.TM_UPDATE_HOSPITAL_REQUEST:\n      {\n        return {\n          ...state,\n          updateHospitalLoading: true\n        };\n      }\n    case types.TM_UPDATE_HOSPITAL_SUCCESS:\n    case types.TM_UPDATE_HOSPITAL_FAILURE:\n      {\n        return {\n          ...state,\n          updateHospitalLoading: false\n        };\n      }\n    case types.TM_DELETE_HOSPITAL_REQUEST:\n      {\n        return {\n          ...state,\n          deleteHospitalLoading: true\n        };\n      }\n    case types.TM_DELETE_HOSPITAL_SUCCESS:\n    case types.TM_DELETE_HOSPITAL_FAILURE:\n      {\n        return {\n          ...state,\n          deleteHospitalLoading: false\n        };\n      }\n    case types.TM_GET_HOSPITALS_BY_FACILITY_REQUEST:\n      {\n        return {\n          ...state,\n          getHospitalsByFacilityLoading: true\n        };\n      }\n    case types.TM_GET_HOSPITALS_BY_FACILITY_SUCCESS:\n      {\n        return {\n          ...state,\n          getHospitalsByFacilityLoading: false,\n          hospitalByFacilityData: action.payload\n        };\n      }\n    case types.TM_GET_HOSPITALS_BY_FACILITY_FAILURE:\n      {\n        return {\n          ...state,\n          getHospitalsByFacilityLoading: false\n        };\n      }\n    case types.TM_ADD_HOSPITALS_TO_FACILITY_REQUEST:\n      {\n        return {\n          ...state,\n          addHospitalsLoading: true\n        };\n      }\n    case types.TM_ADD_HOSPITALS_TO_FACILITY_SUCCESS:\n    case types.TM_ADD_HOSPITALS_TO_FACILITY_FAILURE:\n      {\n        return {\n          ...state,\n          addHospitalsLoading: false\n        };\n      }\n    case types.TM_REMOVE_HOSPITALS_TO_FACILITY_REQUEST:\n      {\n        return {\n          ...state,\n          removeHospitalsLoading: true\n        };\n      }\n    case types.TM_REMOVE_HOSPITALS_TO_FACILITY_SUCCESS:\n    case types.TM_REMOVE_HOSPITALS_TO_FACILITY_FAILURE:\n      {\n        return {\n          ...state,\n          removeHospitalsLoading: false\n        };\n      }\n    default:\n      {\n        return state;\n      }\n  }\n}","map":{"version":3,"names":["treatmentPaging","types","INITIAL_STATE","hospitalData","getHospitalsLoading","createHospitalLoading","updateHospitalLoading","deleteHospitalLoading","hospitalByFacilityData","getHospitalsByFacilityLoading","addHospitalsLoading","removeHospitalsLoading","state","arguments","length","undefined","action","type","TM_GET_HOSPITALS_REQUEST","TM_GET_HOSPITALS_SUCCESS","payload","TM_GET_HOSPITALS_FAILURE","TM_CREATE_HOSPITAL_REQUEST","TM_CREATE_HOSPITAL_SUCCESS","TM_CREATE_HOSPITAL_FAILURE","TM_UPDATE_HOSPITAL_REQUEST","TM_UPDATE_HOSPITAL_SUCCESS","TM_UPDATE_HOSPITAL_FAILURE","TM_DELETE_HOSPITAL_REQUEST","TM_DELETE_HOSPITAL_SUCCESS","TM_DELETE_HOSPITAL_FAILURE","TM_GET_HOSPITALS_BY_FACILITY_REQUEST","TM_GET_HOSPITALS_BY_FACILITY_SUCCESS","TM_GET_HOSPITALS_BY_FACILITY_FAILURE","TM_ADD_HOSPITALS_TO_FACILITY_REQUEST","TM_ADD_HOSPITALS_TO_FACILITY_SUCCESS","TM_ADD_HOSPITALS_TO_FACILITY_FAILURE","TM_REMOVE_HOSPITALS_TO_FACILITY_REQUEST","TM_REMOVE_HOSPITALS_TO_FACILITY_SUCCESS","TM_REMOVE_HOSPITALS_TO_FACILITY_FAILURE"],"sources":["H:/BAKCO/pj/data reconciliation/src/treatment/reducers/hospital.js"],"sourcesContent":["import { treatmentPaging } from 'app/utils/helpers';\nimport types from 'treatment/actions/types';\n\nconst INITIAL_STATE = {\n  hospitalData: treatmentPaging,\n  getHospitalsLoading: false,\n  createHospitalLoading: false,\n  updateHospitalLoading: false,\n  deleteHospitalLoading: false,\n  hospitalByFacilityData: treatmentPaging,\n  getHospitalsByFacilityLoading: false,\n  addHospitalsLoading: false,\n  removeHospitalsLoading: false,\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case types.TM_GET_HOSPITALS_REQUEST: {\n      return {\n        ...state,\n        getHospitalsLoading: true,\n      };\n    }\n    case types.TM_GET_HOSPITALS_SUCCESS: {\n      return {\n        ...state,\n        getHospitalsLoading: false,\n        hospitalData: action.payload,\n      };\n    }\n    case types.TM_GET_HOSPITALS_FAILURE: {\n      return {\n        ...state,\n        getHospitalsLoading: false,\n      };\n    }\n    case types.TM_CREATE_HOSPITAL_REQUEST: {\n      return {\n        ...state,\n        createHospitalLoading: true,\n      };\n    }\n    case types.TM_CREATE_HOSPITAL_SUCCESS:\n    case types.TM_CREATE_HOSPITAL_FAILURE: {\n      return {\n        ...state,\n        createHospitalLoading: false,\n      };\n    }\n    case types.TM_UPDATE_HOSPITAL_REQUEST: {\n      return {\n        ...state,\n        updateHospitalLoading: true,\n      };\n    }\n    case types.TM_UPDATE_HOSPITAL_SUCCESS:\n    case types.TM_UPDATE_HOSPITAL_FAILURE: {\n      return {\n        ...state,\n        updateHospitalLoading: false,\n      };\n    }\n    case types.TM_DELETE_HOSPITAL_REQUEST: {\n      return {\n        ...state,\n        deleteHospitalLoading: true,\n      };\n    }\n    case types.TM_DELETE_HOSPITAL_SUCCESS:\n    case types.TM_DELETE_HOSPITAL_FAILURE: {\n      return {\n        ...state,\n        deleteHospitalLoading: false,\n      };\n    }\n    case types.TM_GET_HOSPITALS_BY_FACILITY_REQUEST: {\n      return {\n        ...state,\n        getHospitalsByFacilityLoading: true,\n      };\n    }\n    case types.TM_GET_HOSPITALS_BY_FACILITY_SUCCESS: {\n      return {\n        ...state,\n        getHospitalsByFacilityLoading: false,\n        hospitalByFacilityData: action.payload,\n      };\n    }\n    case types.TM_GET_HOSPITALS_BY_FACILITY_FAILURE: {\n      return {\n        ...state,\n        getHospitalsByFacilityLoading: false,\n      };\n    }\n    case types.TM_ADD_HOSPITALS_TO_FACILITY_REQUEST: {\n      return {\n        ...state,\n        addHospitalsLoading: true,\n      };\n    }\n    case types.TM_ADD_HOSPITALS_TO_FACILITY_SUCCESS:\n    case types.TM_ADD_HOSPITALS_TO_FACILITY_FAILURE: {\n      return {\n        ...state,\n        addHospitalsLoading: false,\n      };\n    }\n    case types.TM_REMOVE_HOSPITALS_TO_FACILITY_REQUEST: {\n      return {\n        ...state,\n        removeHospitalsLoading: true,\n      };\n    }\n    case types.TM_REMOVE_HOSPITALS_TO_FACILITY_SUCCESS:\n    case types.TM_REMOVE_HOSPITALS_TO_FACILITY_FAILURE: {\n      return {\n        ...state,\n        removeHospitalsLoading: false,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}