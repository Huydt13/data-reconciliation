{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\medical-test\\\\components\\\\subjects\\\\MedicalTestForm.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Select, Button, Header, Checkbox } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { useForm } from 'react-hook-form';\nimport { KeyboardDatePicker } from 'app/components/shared';\nimport AddressDetails from 'infection-chain/components/subject/information/form-sections/AddressDetails';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPrintedCode, getAllZones } from 'medical-test/actions/medical-test';\nconst positiveTypes = [{\n  key: 0,\n  value: 0,\n  text: 'Dương tính với COVID'\n}, {\n  key: 1,\n  value: 1,\n  text: 'Dương tính với bệnh Sởi'\n}];\nconst statusOptions = [{\n  key: 0,\n  value: false,\n  text: 'Âm tính'\n}, {\n  key: 1,\n  value: true,\n  text: 'Dương tính'\n}, {\n  key: 2,\n  value: 0,\n  text: 'Chưa xác định'\n}];\nconst statuses = ['Âm tính', 'Dương tính', 'Chưa xác định'];\nconst examines = [{\n  key: 'dichHauHong',\n  text: 'Bệnh phẩm đường hô hấp - Dịch hầu họng',\n  result: 'dichHauHong_Result'\n}, {\n  key: 'dichSucHong',\n  text: 'Bệnh phẩm đường hô hấp - Dịch súc họng',\n  result: 'dichSucHong_Result'\n}, {\n  key: 'dom',\n  text: 'Bệnh phẩm đường hô hấp - Đờm',\n  result: 'dom_Result'\n}, {\n  key: 'dichPheQuanPheNan',\n  text: 'Bệnh phẩm đường hô hấp - Dịch phế quản, phế nang ',\n  result: 'dichPheQuanPheNan_Result'\n}, {\n  key: 'mau_GiaiDoanCap',\n  text: 'Máu toàn phần - Giai đoạn cấp',\n  result: 'mau_GiaiDoanCap_Result'\n}, {\n  key: 'mau_GiaiDoanHoiPhuc',\n  text: 'Máu toàn phần - Giai đoạn hồi phục',\n  result: 'mau_GiaiDoanHoiPhuc_Result'\n}, {\n  key: 'mauPhan',\n  text: 'Mẫu phân',\n  result: 'mauPhan_Result'\n}];\nconst StyledForm = styled(Form)`\n  padding: 20px;\n`;\nconst MedicalTestForm = props => {\n  const {\n    initialData,\n    onSubmit,\n    subjectCode,\n    diseaseLocation\n  } = props;\n  const dispatch = useDispatch();\n  const {\n    watch,\n    errors,\n    register,\n    setValue,\n    setError,\n    clearErrors,\n    handleSubmit,\n    trigger\n  } = useForm({\n    defaultValues: initialData || {}\n  });\n  const isPositive = watch('isPositive');\n  const isFinalResult = watch('isFinalResult');\n  const takenDate = watch('takenDate') || '';\n  useEffect(() => {\n    register({\n      name: 'id'\n    });\n    register({\n      name: 'code',\n      required: true\n    }); // cdc\n    register({\n      name: 'alias'\n    }); // byt\n    register({\n      name: 'privateAlias'\n    }); // hcm\n    register({\n      name: 'takenBy'\n    });\n    register({\n      name: 'takenDate'\n    });\n    register({\n      name: 'takenFrom'\n    });\n    register({\n      name: 'resultFrom'\n    });\n    register({\n      name: 'retriveResultDate'\n    });\n    register({\n      name: 'isPositive'\n    });\n    register({\n      name: 'diseaseLocation'\n    });\n    register({\n      name: 'positiveType'\n    });\n    register({\n      name: 'isFinalResult'\n    });\n    register({\n      name: 'dichHauHong'\n    });\n    register({\n      name: 'dichHauHong_Result'\n    });\n    register({\n      name: 'dichHauHong_Result_RetrieveDate'\n    });\n    register({\n      name: 'dichSucHong'\n    });\n    register({\n      name: 'dichSucHong_Result'\n    });\n    register({\n      name: 'dichSucHong_Result_RetrieveDate'\n    });\n    register({\n      name: 'dom'\n    });\n    register({\n      name: 'dom_Result'\n    });\n    register({\n      name: 'dom_Result_RetrieveDate'\n    });\n    register({\n      name: 'dichPheQuanPheNan'\n    });\n    register({\n      name: 'dichPheQuanPheNan_Result'\n    });\n    register({\n      name: 'dichPheQuanPheNan_Result_RetrieveDate'\n    });\n    register({\n      name: 'mau_GiaiDoanCap'\n    });\n    register({\n      name: 'mau_GiaiDoanCap_Result'\n    });\n    register({\n      name: 'mau_GiaiDoanCap_Result_RetrieveDate'\n    });\n    register({\n      name: 'mau_GiaiDoanHoiPhuc'\n    });\n    register({\n      name: 'mau_GiaiDoanHoiPhuc_Result'\n    });\n    register({\n      name: 'mau_GiaiDoanHoiPhuc_Result_RetrieveDate'\n    });\n    register({\n      name: 'mauPhan'\n    });\n    register({\n      name: 'mauPhan_Result'\n    });\n    register({\n      name: 'mauPhan_Result_RetrieveDate'\n    });\n    register({\n      name: 'other'\n    });\n    register({\n      name: 'other_Result'\n    });\n    register({\n      name: 'other_Result_RetrieveDate'\n    });\n    register({\n      name: 'examinationCode'\n    });\n    if (initialData && Object.keys(initialData).length !== 0) {\n      if (watch('isPositive') === null) {\n        setValue('isPositive', 0);\n      }\n    }\n    // eslint-disable-next-line\n  }, [register, setValue, initialData]);\n  const [selectingZone, setSelectingZone] = useState(null);\n  useEffect(() => {\n    if (selectingZone === null || selectingZone === void 0 ? void 0 : selectingZone.id) {\n      dispatch(getPrintedCode(selectingZone.prefix));\n    }\n  }, [dispatch, selectingZone]);\n  useEffect(() => {\n    dispatch(getAllZones());\n  }, [dispatch]);\n  const {\n    zoneList,\n    printedCodeList,\n    getZoneListLoading,\n    getPrintedCodeLoading\n  } = useSelector(state => state.medicalTest);\n  const {\n    getSubjectLoading\n  } = useSelector(state => state.subject);\n  return /*#__PURE__*/React.createElement(StyledForm, {\n    onSubmit: handleSubmit(onSubmit),\n    loading: getSubjectLoading || getZoneListLoading || getPrintedCodeLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    label: \"Ng\\xE0y l\\u1EA5y m\\u1EABu\",\n    control: KeyboardDatePicker,\n    value: takenDate,\n    disabledDays: [{\n      after: new Date()\n    }],\n    onChange: date => {\n      clearErrors('takenDate');\n      setValue('takenDate', date);\n    },\n    onError: e => setError('takenDate', e),\n    error: Boolean(errors.takenDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"N\\u01A1i x\\xE9t nghi\\u1EC7m\",\n    control: Select,\n    options: zoneList.filter(z => (z === null || z === void 0 ? void 0 : z.type) === 1).map(z => ({\n      key: z.id,\n      text: z.name,\n      value: z.name\n    })),\n    value: watch('resultFrom') || '',\n    onChange: (e, _ref) => {\n      let {\n        value\n      } = _ref;\n      setValue('resultFrom', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"N\\u01A1i l\\u1EA5y m\\u1EABu\",\n    control: Select,\n    options: zoneList.filter(z => (z === null || z === void 0 ? void 0 : z.type) === 2).map(z => ({\n      key: z.id,\n      text: z.name,\n      value: z.name\n    })),\n    value: watch('takenFrom') || '',\n    onChange: (e, _ref2) => {\n      let {\n        value\n      } = _ref2;\n      setSelectingZone(zoneList.find(z => z.name === value));\n      setValue('takenFrom', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"M\\xE3 x\\xE9t nghi\\u1EC7m\",\n    control: Select,\n    disabled: !watch('takenFrom'),\n    options: printedCodeList.map(p => ({\n      key: p.code,\n      text: p.code,\n      value: p.code\n    })),\n    value: watch('examinationCode') || '',\n    onChange: (e, _ref3) => {\n      let {\n        value\n      } = _ref3;\n      setValue('examinationCode', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }, \"M\\u1EABu b\\u1EC7nh ph\\u1EA9m\"), examines.map(ex => /*#__PURE__*/React.createElement(Form.Group, {\n    key: ex.key,\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    style: {\n      paddingTop: `${watch(ex.key) ? '1.5rem' : '.5rem'}`\n    },\n    control: Checkbox,\n    label: ex.text,\n    checked: watch(ex.key),\n    onClick: (e, _ref4) => {\n      let {\n        checked\n      } = _ref4;\n      if (checked) {\n        setValue(ex.key, true);\n      } else {\n        setValue(ex.key, false);\n        setValue(`${ex.key}_Result`, '');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }), watch(ex.key) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"Ng\\xE0y c\\xF3 k\\u1EBFt qu\\u1EA3\",\n    control: KeyboardDatePicker,\n    value: watch(`${ex.key}_Result_RetrieveDate`) || '',\n    onChange: date => {\n      clearErrors(`${ex.key}_Result_RetrieveDate`);\n      setValue(`${ex.key}_Result_RetrieveDate`, date);\n    },\n    onError: e => setError(`${ex.key}_Result_RetrieveDate`, e),\n    error: Boolean(errors[`${ex.key}_Result_RetrieveDate`]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    control: Select,\n    label: \"K\\u1EBFt qu\\u1EA3 x\\xE9t nghi\\u1EC7m\",\n    placeholder: \"Ch\\u1ECDn\",\n    options: statuses.map(s => ({\n      key: s,\n      value: s,\n      text: s\n    })),\n    value: watch(`${ex.key}_Result`),\n    onChange: (e, _ref5) => {\n      let {\n        value\n      } = _ref5;\n      setValue(`${ex.key}_Result`, value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"M\\u1EABu kh\\xE1c\",\n    control: Input,\n    value: watch('other') || '',\n    onChange: (e, _ref6) => {\n      let {\n        value\n      } = _ref6;\n      setValue('other', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }), watch('other') && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"Ng\\xE0y c\\xF3 k\\u1EBFt qu\\u1EA3\",\n    control: KeyboardDatePicker,\n    value: watch('other_Result_RetrieveDate') || '',\n    onChange: date => {\n      clearErrors('other_Result_RetrieveDate');\n      setValue('other_Result_RetrieveDate', date);\n    },\n    onError: e => setError('other_Result_RetrieveDate', e),\n    error: Boolean(errors.other_Result_RetrieveDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"K\\u1EBFt qu\\u1EA3 x\\xE9t nghi\\u1EC7m\",\n    control: Select,\n    options: statuses.map(s => ({\n      key: s,\n      value: s,\n      text: s\n    })),\n    value: watch('other_Result'),\n    onChange: (e, _ref7) => {\n      let {\n        value\n      } = _ref7;\n      setValue('other_Result', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"K\\u1EBFt qu\\u1EA3 x\\xE1c \\u0111\\u1ECBnh\",\n    control: Select,\n    options: statusOptions,\n    value: watch('isPositive'),\n    onChange: (e, _ref8) => {\n      let {\n        value\n      } = _ref8;\n      setValue('isPositive', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }), Boolean(isPositive) && /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    label: \"Lo\\u1EA1i d\\u01B0\\u01A1ng t\\xEDnh\",\n    control: Select,\n    options: positiveTypes,\n    value: watch('positiveType'),\n    onChange: (e, _ref9) => {\n      let {\n        value\n      } = _ref9;\n      setValue('positiveType', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 11\n    }\n  })), Boolean(isPositive) && watch('positiveType') === 0 && /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    control: Checkbox,\n    label: \"K\\u1EBFt qu\\u1EA3 x\\xE1c \\u0111\\u1ECBnh\",\n    checked: isFinalResult,\n    onClick: (e, _ref10) => {\n      let {\n        checked\n      } = _ref10;\n      setValue('isFinalResult', checked);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  })), Boolean(isFinalResult) && Boolean(isPositive) && /*#__PURE__*/React.createElement(React.Fragment, null, !subjectCode && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    as: \"h4\",\n    content: \"Th\\xF4ng tin ng\\u01B0\\u1EDDi b\\u1EC7nh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    control: Input,\n    label: \"B\\xED danh CDC\",\n    value: watch('code') || '',\n    onChange: (e, _ref11) => {\n      let {\n        value\n      } = _ref11;\n      trigger('code');\n      setValue('code', value);\n    },\n    error: Boolean(errors.code),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    control: Input,\n    label: \"B\\xED danh HCM\",\n    value: watch('privateAlias') || '',\n    onChange: (e, _ref12) => {\n      let {\n        value\n      } = _ref12;\n      trigger('privateAlias');\n      setValue('privateAlias', value);\n    },\n    error: Boolean(errors.code),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    control: Input,\n    label: \"B\\xED danh BYT\",\n    value: watch('alias') || '',\n    onChange: (e, _ref13) => {\n      let {\n        value\n      } = _ref13;\n      return setValue('alias', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }))), !(diseaseLocation === null || diseaseLocation === void 0 ? void 0 : diseaseLocation.id) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    as: \"h4\",\n    content: \"\\u0110\\u1ECBa \\u0111i\\u1EC3m ph\\xE1t b\\u1EC7nh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    control: AddressDetails,\n    initialData: watch('diseaseLocation') || {},\n    onChange: d => setValue('diseaseLocation', d),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    type: \"submit\",\n    content: \"X\\xE1c nh\\u1EADn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }\n  }));\n};\nMedicalTestForm.propTypes = {\n  initialData: PropTypes.shape({}),\n  diseaseLocation: PropTypes.shape({}),\n  subjectCode: PropTypes.string,\n  onSubmit: PropTypes.func\n};\nMedicalTestForm.defaultProps = {\n  initialData: {},\n  diseaseLocation: {},\n  subjectCode: '',\n  onSubmit: () => {}\n};\nexport default MedicalTestForm;","map":{"version":3,"names":["React","useEffect","useState","PropTypes","Form","Input","Select","Button","Header","Checkbox","styled","useForm","KeyboardDatePicker","AddressDetails","useSelector","useDispatch","getPrintedCode","getAllZones","positiveTypes","key","value","text","statusOptions","statuses","examines","result","StyledForm","MedicalTestForm","props","initialData","onSubmit","subjectCode","diseaseLocation","dispatch","watch","errors","register","setValue","setError","clearErrors","handleSubmit","trigger","defaultValues","isPositive","isFinalResult","takenDate","name","required","Object","keys","length","selectingZone","setSelectingZone","id","prefix","zoneList","printedCodeList","getZoneListLoading","getPrintedCodeLoading","state","medicalTest","getSubjectLoading","subject","createElement","loading","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Group","widths","Field","label","control","disabledDays","after","Date","onChange","date","onError","e","error","Boolean","options","filter","z","type","map","_ref","_ref2","find","disabled","p","code","_ref3","ex","style","paddingTop","checked","onClick","_ref4","Fragment","placeholder","s","_ref5","_ref6","other_Result_RetrieveDate","_ref7","_ref8","_ref9","_ref10","as","content","_ref11","_ref12","_ref13","d","primary","propTypes","shape","string","func","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/medical-test/components/subjects/MedicalTestForm.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Input,\n  Select,\n  Button,\n  Header,\n  Checkbox,\n} from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nimport { useForm } from 'react-hook-form';\n\nimport { KeyboardDatePicker } from 'app/components/shared';\nimport AddressDetails from 'infection-chain/components/subject/information/form-sections/AddressDetails';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPrintedCode, getAllZones } from 'medical-test/actions/medical-test';\n\nconst positiveTypes = [\n  { key: 0, value: 0, text: 'Dương tính với COVID' },\n  { key: 1, value: 1, text: 'Dương tính với bệnh Sởi' },\n];\n\nconst statusOptions = [\n  {\n    key: 0,\n    value: false,\n    text: 'Âm tính',\n  },\n  {\n    key: 1,\n    value: true,\n    text: 'Dương tính',\n  },\n  {\n    key: 2,\n    value: 0,\n    text: 'Chưa xác định',\n  },\n];\n\nconst statuses = ['Âm tính', 'Dương tính', 'Chưa xác định'];\n\nconst examines = [\n  { key: 'dichHauHong', text: 'Bệnh phẩm đường hô hấp - Dịch hầu họng', result: 'dichHauHong_Result' },\n  { key: 'dichSucHong', text: 'Bệnh phẩm đường hô hấp - Dịch súc họng', result: 'dichSucHong_Result' },\n  { key: 'dom', text: 'Bệnh phẩm đường hô hấp - Đờm', result: 'dom_Result' },\n  { key: 'dichPheQuanPheNan', text: 'Bệnh phẩm đường hô hấp - Dịch phế quản, phế nang ', result: 'dichPheQuanPheNan_Result' },\n  { key: 'mau_GiaiDoanCap', text: 'Máu toàn phần - Giai đoạn cấp', result: 'mau_GiaiDoanCap_Result' },\n  { key: 'mau_GiaiDoanHoiPhuc', text: 'Máu toàn phần - Giai đoạn hồi phục', result: 'mau_GiaiDoanHoiPhuc_Result' },\n  { key: 'mauPhan', text: 'Mẫu phân', result: 'mauPhan_Result' },\n];\n\nconst StyledForm = styled(Form)`\n  padding: 20px;\n`;\n\nconst MedicalTestForm = (props) => {\n  const {\n    initialData,\n    onSubmit,\n    subjectCode,\n    diseaseLocation,\n  } = props;\n  const dispatch = useDispatch();\n\n  const {\n    watch,\n    errors,\n    register,\n    setValue,\n    setError,\n    clearErrors,\n    handleSubmit,\n    trigger,\n  } = useForm({ defaultValues: initialData || {} });\n\n  const isPositive = watch('isPositive');\n  const isFinalResult = watch('isFinalResult');\n  const takenDate = watch('takenDate') || '';\n\n  useEffect(() => {\n    register({ name: 'id' });\n    register({ name: 'code', required: true }); // cdc\n    register({ name: 'alias' }); // byt\n    register({ name: 'privateAlias' }); // hcm\n    register({ name: 'takenBy' });\n    register({ name: 'takenDate' });\n    register({ name: 'takenFrom' });\n    register({ name: 'resultFrom' });\n    register({ name: 'retriveResultDate' });\n    register({ name: 'isPositive' });\n    register({ name: 'diseaseLocation' });\n    register({ name: 'positiveType' });\n    register({ name: 'isFinalResult' });\n    register({ name: 'dichHauHong' });\n    register({ name: 'dichHauHong_Result' });\n    register({ name: 'dichHauHong_Result_RetrieveDate' });\n    register({ name: 'dichSucHong' });\n    register({ name: 'dichSucHong_Result' });\n    register({ name: 'dichSucHong_Result_RetrieveDate' });\n    register({ name: 'dom' });\n    register({ name: 'dom_Result' });\n    register({ name: 'dom_Result_RetrieveDate' });\n    register({ name: 'dichPheQuanPheNan' });\n    register({ name: 'dichPheQuanPheNan_Result' });\n    register({ name: 'dichPheQuanPheNan_Result_RetrieveDate' });\n    register({ name: 'mau_GiaiDoanCap' });\n    register({ name: 'mau_GiaiDoanCap_Result' });\n    register({ name: 'mau_GiaiDoanCap_Result_RetrieveDate' });\n    register({ name: 'mau_GiaiDoanHoiPhuc' });\n    register({ name: 'mau_GiaiDoanHoiPhuc_Result' });\n    register({ name: 'mau_GiaiDoanHoiPhuc_Result_RetrieveDate' });\n    register({ name: 'mauPhan' });\n    register({ name: 'mauPhan_Result' });\n    register({ name: 'mauPhan_Result_RetrieveDate' });\n    register({ name: 'other' });\n    register({ name: 'other_Result' });\n    register({ name: 'other_Result_RetrieveDate' });\n    register({ name: 'examinationCode' });\n    if (initialData && Object.keys(initialData).length !== 0) {\n      if (watch('isPositive') === null) {\n        setValue('isPositive', 0);\n      }\n    }\n    // eslint-disable-next-line\n  }, [register, setValue, initialData]);\n\n  const [selectingZone, setSelectingZone] = useState(null);\n  useEffect(() => {\n    if (selectingZone?.id) {\n      dispatch(getPrintedCode(selectingZone.prefix));\n    }\n  }, [dispatch, selectingZone]);\n  useEffect(() => {\n    dispatch(getAllZones());\n  }, [dispatch]);\n\n  const {\n    zoneList,\n    printedCodeList,\n    getZoneListLoading,\n    getPrintedCodeLoading,\n  } = useSelector((state) => state.medicalTest);\n\n  const { getSubjectLoading } = useSelector((state) => state.subject);\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)} loading={getSubjectLoading || getZoneListLoading || getPrintedCodeLoading}>\n      <Form.Group widths=\"equal\">\n        <Form.Field\n          required\n          label=\"Ngày lấy mẫu\"\n          control={KeyboardDatePicker}\n          value={takenDate}\n          disabledDays={[{ after: new Date() }]}\n          onChange={(date) => {\n            clearErrors('takenDate');\n            setValue('takenDate', date);\n          }}\n          onError={(e) => setError('takenDate', e)}\n          error={Boolean(errors.takenDate)}\n        />\n        <Form.Field\n          label=\"Nơi xét nghiệm\"\n          control={Select}\n          options={zoneList\n            .filter((z) => z?.type === 1)\n            .map((z) => ({\n              key: z.id,\n              text: z.name,\n              value: z.name,\n            }))}\n          value={watch('resultFrom') || ''}\n          onChange={(e, { value }) => {\n            setValue('resultFrom', value);\n          }}\n        />\n      </Form.Group>\n      <Form.Group widths=\"equal\">\n        <Form.Field\n          label=\"Nơi lấy mẫu\"\n          control={Select}\n          options={zoneList\n            .filter((z) => z?.type === 2)\n            .map((z) => ({\n              key: z.id,\n              text: z.name,\n              value: z.name,\n            }))}\n          value={watch('takenFrom') || ''}\n          onChange={(e, { value }) => {\n            setSelectingZone(zoneList.find((z) => z.name === value));\n            setValue('takenFrom', value);\n          }}\n        />\n        <Form.Field\n          label=\"Mã xét nghiệm\"\n          control={Select}\n          disabled={!watch('takenFrom')}\n          options={printedCodeList.map((p) => ({\n            key: p.code,\n            text: p.code,\n            value: p.code,\n          }))}\n          value={watch('examinationCode') || ''}\n          onChange={(e, { value }) => {\n            setValue('examinationCode', value);\n          }}\n        />\n      </Form.Group>\n      <h5>Mẫu bệnh phẩm</h5>\n      {examines.map((ex) => (\n        <Form.Group key={ex.key} widths=\"equal\">\n          <Form.Field\n            style={{ paddingTop: `${watch(ex.key) ? '1.5rem' : '.5rem'}` }}\n            control={Checkbox}\n            label={ex.text}\n            checked={watch(ex.key)}\n            onClick={(e, { checked }) => {\n              if (checked) {\n                setValue(ex.key, true);\n              } else {\n                setValue(ex.key, false);\n                setValue(`${ex.key}_Result`, '');\n              }\n            }}\n          />\n          {watch(ex.key) && (\n            <>\n              <Form.Field\n                label=\"Ngày có kết quả\"\n                control={KeyboardDatePicker}\n                value={watch(`${ex.key}_Result_RetrieveDate`) || ''}\n                onChange={(date) => {\n                  clearErrors(`${ex.key}_Result_RetrieveDate`);\n                  setValue(`${ex.key}_Result_RetrieveDate`, date);\n                }}\n                onError={(e) => setError(`${ex.key}_Result_RetrieveDate`, e)}\n                error={Boolean(errors[`${ex.key}_Result_RetrieveDate`])}\n              />\n              <Form.Field\n                control={Select}\n                label=\"Kết quả xét nghiệm\"\n                placeholder=\"Chọn\"\n                options={statuses.map((s) => ({\n                  key: s,\n                  value: s,\n                  text: s,\n                }))}\n                value={watch(`${ex.key}_Result`)}\n                onChange={(e, { value }) => {\n                  setValue(`${ex.key}_Result`, value);\n                }}\n              />\n            </>\n          )}\n        </Form.Group>\n      ))}\n      <Form.Group widths=\"equal\">\n        <Form.Field\n          label=\"Mẫu khác\"\n          control={Input}\n          value={watch('other') || ''}\n          onChange={(e, { value }) => {\n            setValue('other', value);\n          }}\n        />\n        {watch('other') && (\n          <>\n            <Form.Field\n              label=\"Ngày có kết quả\"\n              control={KeyboardDatePicker}\n              value={watch('other_Result_RetrieveDate') || ''}\n              onChange={(date) => {\n                clearErrors('other_Result_RetrieveDate');\n                setValue('other_Result_RetrieveDate', date);\n              }}\n              onError={(e) => setError('other_Result_RetrieveDate', e)}\n              error={Boolean(errors.other_Result_RetrieveDate)}\n            />\n            <Form.Field\n              label=\"Kết quả xét nghiệm\"\n              control={Select}\n              options={statuses.map((s) => ({\n                key: s,\n                value: s,\n                text: s,\n              }))}\n              value={watch('other_Result')}\n              onChange={(e, { value }) => {\n                setValue('other_Result', value);\n              }}\n            />\n          </>\n        )}\n      </Form.Group>\n      <Form.Group widths=\"equal\">\n        <Form.Field\n          label=\"Kết quả xác định\"\n          control={Select}\n          options={statusOptions}\n          value={watch('isPositive')}\n          onChange={(e, { value }) => {\n            setValue('isPositive', value);\n          }}\n        />\n        {Boolean(isPositive) && (\n          <Form.Field\n            required\n            label=\"Loại dương tính\"\n            control={Select}\n            options={positiveTypes}\n            value={watch('positiveType')}\n            onChange={(e, { value }) => {\n              setValue('positiveType', value);\n            }}\n          />\n        )}\n      </Form.Group>\n      {Boolean(isPositive) && (watch('positiveType') === 0) && (\n        <Form.Group widths=\"equal\">\n          <Form.Field\n            control={Checkbox}\n            label=\"Kết quả xác định\"\n            checked={isFinalResult}\n            onClick={(e, { checked }) => {\n              setValue('isFinalResult', checked);\n            }}\n          />\n        </Form.Group>\n      )}\n      {Boolean(isFinalResult) && Boolean(isPositive) && (\n        <>\n          {!subjectCode && (\n            <>\n              <Header as=\"h4\" content=\"Thông tin người bệnh\" />\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  control={Input}\n                  label=\"Bí danh CDC\"\n                  value={watch('code') || ''}\n                  onChange={(e, { value }) => {\n                    trigger('code');\n                    setValue('code', value);\n                  }}\n                  error={Boolean(errors.code)}\n                />\n                <Form.Field\n                  control={Input}\n                  label=\"Bí danh HCM\"\n                  value={watch('privateAlias') || ''}\n                  onChange={(e, { value }) => {\n                    trigger('privateAlias');\n                    setValue('privateAlias', value);\n                  }}\n                  error={Boolean(errors.code)}\n                />\n                <Form.Field\n                  control={Input}\n                  label=\"Bí danh BYT\"\n                  value={watch('alias') || ''}\n                  onChange={(e, { value }) => setValue('alias', value)}\n                />\n              </Form.Group>\n            </>\n          )}\n          {!diseaseLocation?.id && (\n            <>\n              <Header as=\"h4\" content=\"Địa điểm phát bệnh\" />\n              <Form.Group widths=\"equal\">\n                <Form.Field\n                  control={AddressDetails}\n                  initialData={watch('diseaseLocation') || {}}\n                  onChange={(d) => setValue('diseaseLocation', d)}\n                />\n              </Form.Group>\n            </>\n          )}\n        </>\n      )}\n      <Button\n        primary\n        type=\"submit\"\n        content=\"Xác nhận\"\n      />\n    </StyledForm>\n  );\n};\n\nMedicalTestForm.propTypes = {\n  initialData: PropTypes.shape({}),\n  diseaseLocation: PropTypes.shape({}),\n  subjectCode: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n\nMedicalTestForm.defaultProps = {\n  initialData: {},\n  diseaseLocation: {},\n  subjectCode: '',\n  onSubmit: () => {},\n};\n\nexport default MedicalTestForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}