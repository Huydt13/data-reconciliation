{"ast":null,"code":"import { treatmentPaging } from 'app/utils/helpers';\nimport types from '../actions/types';\nconst INITIAL_STATE = {\n  facilityInfo: undefined,\n  getFacilityInfoLoading: false,\n  facilityData: treatmentPaging,\n  getFacilityListLoading: false,\n  facilityDetailData: undefined,\n  getFacilityDetailLoading: false,\n  createFacilityLoading: false,\n  updateFacilityLoading: false,\n  deleteFacilityLoading: false,\n  completedData: treatmentPaging,\n  getCompletedLoading: false,\n  transitedData: treatmentPaging,\n  getTransitedLoading: false,\n  outOfProcessData: treatmentPaging,\n  getOutOfProcessLoading: false,\n  getTransferLoading: false,\n  transferData: treatmentPaging,\n  approveTransferLoading: false,\n  undoTreatmentLoading: false\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.TM_GET_FACILITY_INFO_REQUEST:\n      return {\n        ...state,\n        getFacilityInfoLoading: true\n      };\n    case types.TM_GET_FACILITY_INFO_SUCCESS:\n      return {\n        ...state,\n        getFacilityInfoLoading: false,\n        facilityInfo: action.payload\n      };\n    case types.TM_GET_FACILITY_INFO_FAILURE:\n      return {\n        ...state,\n        getFacilityInfoLoading: false\n      };\n    case types.GET_FACILITY_LIST_REQUEST:\n      return {\n        ...state,\n        getFacilityListLoading: true\n      };\n    case types.GET_FACILITY_LIST_SUCCESS:\n      return {\n        ...state,\n        facilityData: action.payload,\n        getFacilityListLoading: false\n      };\n    case types.GET_FACILITY_LIST_FAILURE:\n      return {\n        ...state,\n        getFacilityInfoLoading: false\n      };\n    case types.GET_FACILITY_DETAIL_REQUEST:\n      return {\n        ...state,\n        getFacilityDetailLoading: true\n      };\n    case types.GET_FACILITY_DETAIL_SUCCESS:\n      return {\n        ...state,\n        facilityDetailData: action.payload,\n        getFacilityDetailLoading: false\n      };\n    case types.GET_FACILITY_DETAIL_FAILURE:\n      return {\n        ...state,\n        getFacilityDetailLoading: false\n      };\n    case types.CREATE_FACILITY_REQUEST:\n      return {\n        ...state,\n        createFacilityLoading: true\n      };\n    case types.CREATE_FACILITY_SUCCESS:\n    case types.CREATE_FACILITY_FAILURE:\n      return {\n        ...state,\n        createFacilityLoading: false\n      };\n    case types.UPDATE_FACILITY_REQUEST:\n      return {\n        ...state,\n        updateFacilityLoading: true\n      };\n    case types.UPDATE_FACILITY_SUCCESS:\n    case types.UPDATE_FACILITY_FAILURE:\n      return {\n        ...state,\n        updateFacilityLoading: false\n      };\n    case types.DELETE_FACILITY_REQUEST:\n      return {\n        ...state,\n        deleteFacilityLoading: true\n      };\n    case types.DELETE_FACILITY_SUCCESS:\n    case types.DELETE_FACILITY_FAILURE:\n      return {\n        ...state,\n        deleteFacilityLoading: true\n      };\n    case types.TM_GET_COMPLETED_REQUEST:\n      return {\n        ...state,\n        getCompletedLoading: true\n      };\n    case types.TM_GET_COMPLETED_SUCCESS:\n      return {\n        ...state,\n        completedData: action.payload,\n        getCompletedLoading: false\n      };\n    case types.TM_GET_COMPLETED_FAILURE:\n      return {\n        ...state,\n        getCompletedLoading: false\n      };\n    case types.TM_GET_OUT_OF_PROCESS_REQUEST:\n      return {\n        ...state,\n        getOutOfProcessLoading: true\n      };\n    case types.TM_GET_OUT_OF_PROCESS_SUCCESS:\n      return {\n        ...state,\n        outOfProcessData: action.payload,\n        getOutOfProcessLoading: false\n      };\n    case types.TM_GET_OUT_OF_PROCESS_FAILURE:\n      return {\n        ...state,\n        getOutOfProcessLoading: false\n      };\n    case types.TM_GET_TRANSITED_REQUEST:\n      return {\n        ...state,\n        getTransitedLoading: true\n      };\n    case types.TM_GET_TRANSITED_SUCCESS:\n      return {\n        ...state,\n        transitedData: action.payload,\n        getTransitedLoading: false\n      };\n    case types.TM_GET_TRANSITED_FAILURE:\n      return {\n        ...state,\n        getTransitedLoading: false\n      };\n    case types.TM_GET_TRANSFER_REQUEST:\n      {\n        return {\n          ...state,\n          getTransferLoading: true\n        };\n      }\n    case types.TM_GET_TRANSFER_SUCCESS:\n      {\n        return {\n          ...state,\n          getTransferLoading: false,\n          transferData: action.payload\n        };\n      }\n    case types.TM_GET_TRANSFER_FAILURE:\n      {\n        return {\n          ...state,\n          getTransferLoading: false\n        };\n      }\n    case types.TM_APPROVE_TRANSFER_REQUEST:\n      {\n        return {\n          ...state,\n          approveTransferLoading: false\n        };\n      }\n    case types.TM_APPROVE_TRANSFER_SUCCESS:\n    case types.TM_APPROVE_TRANSFER_FAILURE:\n      {\n        return {\n          ...state,\n          approveTransferLoading: false\n        };\n      }\n    case types.TM_UNDO_REQUEST:\n      {\n        return {\n          ...state,\n          undoTreatmentLoading: true\n        };\n      }\n    case types.TM_UNDO_SUCCESS:\n    case types.TM_UNDO_FAILURE:\n      {\n        return {\n          ...state,\n          undoTreatmentLoading: false\n        };\n      }\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["treatmentPaging","types","INITIAL_STATE","facilityInfo","undefined","getFacilityInfoLoading","facilityData","getFacilityListLoading","facilityDetailData","getFacilityDetailLoading","createFacilityLoading","updateFacilityLoading","deleteFacilityLoading","completedData","getCompletedLoading","transitedData","getTransitedLoading","outOfProcessData","getOutOfProcessLoading","getTransferLoading","transferData","approveTransferLoading","undoTreatmentLoading","state","arguments","length","action","type","TM_GET_FACILITY_INFO_REQUEST","TM_GET_FACILITY_INFO_SUCCESS","payload","TM_GET_FACILITY_INFO_FAILURE","GET_FACILITY_LIST_REQUEST","GET_FACILITY_LIST_SUCCESS","GET_FACILITY_LIST_FAILURE","GET_FACILITY_DETAIL_REQUEST","GET_FACILITY_DETAIL_SUCCESS","GET_FACILITY_DETAIL_FAILURE","CREATE_FACILITY_REQUEST","CREATE_FACILITY_SUCCESS","CREATE_FACILITY_FAILURE","UPDATE_FACILITY_REQUEST","UPDATE_FACILITY_SUCCESS","UPDATE_FACILITY_FAILURE","DELETE_FACILITY_REQUEST","DELETE_FACILITY_SUCCESS","DELETE_FACILITY_FAILURE","TM_GET_COMPLETED_REQUEST","TM_GET_COMPLETED_SUCCESS","TM_GET_COMPLETED_FAILURE","TM_GET_OUT_OF_PROCESS_REQUEST","TM_GET_OUT_OF_PROCESS_SUCCESS","TM_GET_OUT_OF_PROCESS_FAILURE","TM_GET_TRANSITED_REQUEST","TM_GET_TRANSITED_SUCCESS","TM_GET_TRANSITED_FAILURE","TM_GET_TRANSFER_REQUEST","TM_GET_TRANSFER_SUCCESS","TM_GET_TRANSFER_FAILURE","TM_APPROVE_TRANSFER_REQUEST","TM_APPROVE_TRANSFER_SUCCESS","TM_APPROVE_TRANSFER_FAILURE","TM_UNDO_REQUEST","TM_UNDO_SUCCESS","TM_UNDO_FAILURE"],"sources":["H:/BAKCO/pj/cds/src/treatment/reducers/facility.js"],"sourcesContent":["import { treatmentPaging } from 'app/utils/helpers';\nimport types from '../actions/types';\n\nconst INITIAL_STATE = {\n  facilityInfo: undefined,\n  getFacilityInfoLoading: false,\n\n  facilityData: treatmentPaging,\n  getFacilityListLoading: false,\n\n  facilityDetailData: undefined,\n  getFacilityDetailLoading: false,\n\n  createFacilityLoading: false,\n\n  updateFacilityLoading: false,\n\n  deleteFacilityLoading: false,\n\n  completedData: treatmentPaging,\n  getCompletedLoading: false,\n  transitedData: treatmentPaging,\n  getTransitedLoading: false,\n  outOfProcessData: treatmentPaging,\n  getOutOfProcessLoading: false,\n\n  getTransferLoading: false,\n  transferData: treatmentPaging,\n  approveTransferLoading: false,\n\n  undoTreatmentLoading: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.TM_GET_FACILITY_INFO_REQUEST:\n      return {\n        ...state,\n        getFacilityInfoLoading: true,\n      };\n    case types.TM_GET_FACILITY_INFO_SUCCESS:\n      return {\n        ...state,\n        getFacilityInfoLoading: false,\n        facilityInfo: action.payload,\n      };\n    case types.TM_GET_FACILITY_INFO_FAILURE:\n      return {\n        ...state,\n        getFacilityInfoLoading: false,\n      };\n    case types.GET_FACILITY_LIST_REQUEST:\n      return {\n        ...state,\n        getFacilityListLoading: true,\n      };\n    case types.GET_FACILITY_LIST_SUCCESS:\n      return {\n        ...state,\n        facilityData: action.payload,\n        getFacilityListLoading: false,\n      };\n    case types.GET_FACILITY_LIST_FAILURE:\n      return {\n        ...state,\n        getFacilityInfoLoading: false,\n      };\n    case types.GET_FACILITY_DETAIL_REQUEST:\n      return {\n        ...state,\n        getFacilityDetailLoading: true,\n      };\n    case types.GET_FACILITY_DETAIL_SUCCESS:\n      return {\n        ...state,\n        facilityDetailData: action.payload,\n        getFacilityDetailLoading: false,\n      };\n    case types.GET_FACILITY_DETAIL_FAILURE:\n      return {\n        ...state,\n        getFacilityDetailLoading: false,\n      };\n    case types.CREATE_FACILITY_REQUEST:\n      return {\n        ...state,\n        createFacilityLoading: true,\n      };\n    case types.CREATE_FACILITY_SUCCESS:\n    case types.CREATE_FACILITY_FAILURE:\n      return {\n        ...state,\n        createFacilityLoading: false,\n      };\n    case types.UPDATE_FACILITY_REQUEST:\n      return {\n        ...state,\n        updateFacilityLoading: true,\n      };\n    case types.UPDATE_FACILITY_SUCCESS:\n    case types.UPDATE_FACILITY_FAILURE:\n      return {\n        ...state,\n        updateFacilityLoading: false,\n      };\n    case types.DELETE_FACILITY_REQUEST:\n      return {\n        ...state,\n        deleteFacilityLoading: true,\n      };\n    case types.DELETE_FACILITY_SUCCESS:\n    case types.DELETE_FACILITY_FAILURE:\n      return {\n        ...state,\n        deleteFacilityLoading: true,\n      };\n    case types.TM_GET_COMPLETED_REQUEST:\n      return {\n        ...state,\n        getCompletedLoading: true,\n      };\n    case types.TM_GET_COMPLETED_SUCCESS:\n      return {\n        ...state,\n        completedData: action.payload,\n        getCompletedLoading: false,\n      };\n    case types.TM_GET_COMPLETED_FAILURE:\n      return {\n        ...state,\n        getCompletedLoading: false,\n      };\n    case types.TM_GET_OUT_OF_PROCESS_REQUEST:\n      return {\n        ...state,\n        getOutOfProcessLoading: true,\n      };\n    case types.TM_GET_OUT_OF_PROCESS_SUCCESS:\n      return {\n        ...state,\n        outOfProcessData: action.payload,\n        getOutOfProcessLoading: false,\n      };\n    case types.TM_GET_OUT_OF_PROCESS_FAILURE:\n      return {\n        ...state,\n        getOutOfProcessLoading: false,\n      };\n    case types.TM_GET_TRANSITED_REQUEST:\n      return {\n        ...state,\n        getTransitedLoading: true,\n      };\n    case types.TM_GET_TRANSITED_SUCCESS:\n      return {\n        ...state,\n        transitedData: action.payload,\n        getTransitedLoading: false,\n      };\n    case types.TM_GET_TRANSITED_FAILURE:\n      return {\n        ...state,\n        getTransitedLoading: false,\n      };\n    case types.TM_GET_TRANSFER_REQUEST: {\n      return {\n        ...state,\n        getTransferLoading: true,\n      };\n    }\n    case types.TM_GET_TRANSFER_SUCCESS: {\n      return {\n        ...state,\n        getTransferLoading: false,\n        transferData: action.payload,\n      };\n    }\n    case types.TM_GET_TRANSFER_FAILURE: {\n      return {\n        ...state,\n        getTransferLoading: false,\n      };\n    }\n    case types.TM_APPROVE_TRANSFER_REQUEST: {\n      return {\n        ...state,\n        approveTransferLoading: false,\n      };\n    }\n    case types.TM_APPROVE_TRANSFER_SUCCESS:\n    case types.TM_APPROVE_TRANSFER_FAILURE: {\n      return {\n        ...state,\n        approveTransferLoading: false,\n      };\n    }\n\n    case types.TM_UNDO_REQUEST: {\n      return {\n        ...state,\n        undoTreatmentLoading: true,\n      };\n    }\n    case types.TM_UNDO_SUCCESS:\n    case types.TM_UNDO_FAILURE: {\n      return {\n        ...state,\n        undoTreatmentLoading: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}