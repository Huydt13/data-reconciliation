{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\chain\\\\components\\\\ChainMap.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Button, Card } from 'semantic-ui-react';\nimport { FiMaximize } from 'react-icons/fi';\nimport { TOKEN } from 'app/utils/constants';\nconst StyledCard = styled(Card)`\n  width: 100% !important;\n  height: ${_ref => {\n  let {\n    fullscreen\n  } = _ref;\n  return fullscreen ? '100vh !important' : '600px !important';\n}};\n  overflow: hidden;\n  position: relative;\n`;\nconst StyledButton = styled(Button)`\n  position: absolute;\n  right: 2%;\n  bottom: 2%;\n  color: #000;\n`;\nconst StyledIframe = styled.iframe`\n  height: 100% !important;\n  width: 100% !important;\n`;\nconst isDev = window.location.href.includes('abcde') || process.env.NODE_ENV === 'development';\nconst iframeBaseUrl = 'https://graph.hcdc.vn/index.html?';\n// const iframeBaseUrl = 'http://127.0.0.1:8080/index.html?';\n// const iframeBaseUrl = 'http://192.168.35.101:8080/index.html?';\n\nconst ChainMap = _ref2 => {\n  let {\n    chainId,\n    diseaseTypeId,\n    infectionTypeId: infectionTypeLevelId,\n    withLocations,\n    hasNodeName,\n    fullscreen\n  } = _ref2;\n  const [iframeSrc, setIframeSrc] = useState('');\n  const [fullScreenUrl, setFullScreenUrl] = useState('');\n  useEffect(() => {\n    let chainIdParam = '';\n    let infectionTypeLevelIdParam = '';\n    let diseaseTypeParam = '';\n    let withLocationsParam = '';\n    let hasNodeNameParam = '';\n    const token = localStorage.getItem(TOKEN) || sessionStorage.getItem(TOKEN);\n    const tokenParam = `&token=${token}`;\n    const isDevParam = `&isDev=${isDev}`;\n    const refParam = `&ref=${new Date().getTime()}`;\n    if (diseaseTypeId) {\n      diseaseTypeParam = `&diseaseTypeId=${diseaseTypeId}`;\n    } else {\n      diseaseTypeParam = '&diseaseTypeId=b597cc8f-74b6-434d-8b9d-52b74595a1de';\n    }\n    if (chainId) {\n      chainIdParam = `&chainId=${chainId}`;\n    }\n    if (infectionTypeLevelId) {\n      infectionTypeLevelIdParam = `&infectionTypeLevelId=${infectionTypeLevelId}`;\n    }\n    if (typeof withLocations === 'boolean') {\n      withLocationsParam = `&withLocations=${withLocations}`;\n    }\n    if (typeof hasNodeName === 'boolean') {\n      hasNodeNameParam = `&hasNodeName=${hasNodeName}`;\n    }\n    setIframeSrc(iframeBaseUrl + chainIdParam + infectionTypeLevelIdParam + isDevParam + hasNodeNameParam + diseaseTypeParam + withLocationsParam + refParam + tokenParam);\n    setFullScreenUrl(`/graph?${chainIdParam}${infectionTypeLevelIdParam}${diseaseTypeParam}${withLocationsParam}${hasNodeNameParam}`);\n  }, [chainId, infectionTypeLevelId, withLocations, diseaseTypeId, hasNodeName, fullscreen]);\n  return /*#__PURE__*/React.createElement(StyledCard, {\n    fullscreen: fullscreen ? 1 : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledIframe, {\n    name: new Date().getDate(),\n    id: \"frame\",\n    title: \"iframeGraph\",\n    frameBorder: \"0\",\n    src: iframeSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: '#000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, !window.location.href.includes('graph') && /*#__PURE__*/React.createElement(StyledButton, {\n    as: Link,\n    target: \"_blank\",\n    to: fullScreenUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FiMaximize, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }))));\n};\nChainMap.propTypes = {\n  chainId: PropTypes.string,\n  diseaseTypeId: PropTypes.string,\n  infectionTypeId: PropTypes.string,\n  withLocations: PropTypes.bool,\n  hasNodeName: PropTypes.bool,\n  fullscreen: PropTypes.bool\n};\nChainMap.defaultProps = {\n  chainId: '',\n  diseaseTypeId: '',\n  infectionTypeId: '',\n  withLocations: false,\n  hasNodeName: true,\n  fullscreen: null\n};\nexport default ChainMap;","map":{"version":3,"names":["React","useEffect","useState","PropTypes","styled","Link","Button","Card","FiMaximize","TOKEN","StyledCard","_ref","fullscreen","StyledButton","StyledIframe","iframe","isDev","window","location","href","includes","process","env","NODE_ENV","iframeBaseUrl","ChainMap","_ref2","chainId","diseaseTypeId","infectionTypeId","infectionTypeLevelId","withLocations","hasNodeName","iframeSrc","setIframeSrc","fullScreenUrl","setFullScreenUrl","chainIdParam","infectionTypeLevelIdParam","diseaseTypeParam","withLocationsParam","hasNodeNameParam","token","localStorage","getItem","sessionStorage","tokenParam","isDevParam","refParam","Date","getTime","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","getDate","id","title","frameBorder","src","style","color","as","target","to","size","propTypes","string","bool","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/chain/components/ChainMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\nimport { Button, Card } from 'semantic-ui-react';\n\nimport { FiMaximize } from 'react-icons/fi';\nimport { TOKEN } from 'app/utils/constants';\n\nconst StyledCard = styled(Card)`\n  width: 100% !important;\n  height: ${({ fullscreen }) =>\n    fullscreen ? '100vh !important' : '600px !important'};\n  overflow: hidden;\n  position: relative;\n`;\n\nconst StyledButton = styled(Button)`\n  position: absolute;\n  right: 2%;\n  bottom: 2%;\n  color: #000;\n`;\n\nconst StyledIframe = styled.iframe`\n  height: 100% !important;\n  width: 100% !important;\n`;\n\nconst isDev =\n  window.location.href.includes('abcde') ||\n  process.env.NODE_ENV === 'development';\nconst iframeBaseUrl = 'https://graph.hcdc.vn/index.html?';\n// const iframeBaseUrl = 'http://127.0.0.1:8080/index.html?';\n// const iframeBaseUrl = 'http://192.168.35.101:8080/index.html?';\n\nconst ChainMap = ({\n  chainId,\n  diseaseTypeId,\n  infectionTypeId: infectionTypeLevelId,\n  withLocations,\n  hasNodeName,\n  fullscreen,\n}) => {\n  const [iframeSrc, setIframeSrc] = useState('');\n  const [fullScreenUrl, setFullScreenUrl] = useState('');\n  useEffect(() => {\n    let chainIdParam = '';\n    let infectionTypeLevelIdParam = '';\n    let diseaseTypeParam = '';\n    let withLocationsParam = '';\n    let hasNodeNameParam = '';\n    const token = localStorage.getItem(TOKEN) || sessionStorage.getItem(TOKEN);\n    const tokenParam = `&token=${token}`;\n    const isDevParam = `&isDev=${isDev}`;\n    const refParam = `&ref=${new Date().getTime()}`;\n    if (diseaseTypeId) {\n      diseaseTypeParam = `&diseaseTypeId=${diseaseTypeId}`;\n    } else {\n      diseaseTypeParam = '&diseaseTypeId=b597cc8f-74b6-434d-8b9d-52b74595a1de';\n    }\n    if (chainId) {\n      chainIdParam = `&chainId=${chainId}`;\n    }\n    if (infectionTypeLevelId) {\n      infectionTypeLevelIdParam = `&infectionTypeLevelId=${infectionTypeLevelId}`;\n    }\n    if (typeof withLocations === 'boolean') {\n      withLocationsParam = `&withLocations=${withLocations}`;\n    }\n    if (typeof hasNodeName === 'boolean') {\n      hasNodeNameParam = `&hasNodeName=${hasNodeName}`;\n    }\n    setIframeSrc(\n      iframeBaseUrl +\n        chainIdParam +\n        infectionTypeLevelIdParam +\n        isDevParam +\n        hasNodeNameParam +\n        diseaseTypeParam +\n        withLocationsParam +\n        refParam +\n        tokenParam,\n    );\n    setFullScreenUrl(\n      `/graph?${chainIdParam}${infectionTypeLevelIdParam}${diseaseTypeParam}${withLocationsParam}${hasNodeNameParam}`,\n    );\n  }, [\n    chainId,\n    infectionTypeLevelId,\n    withLocations,\n    diseaseTypeId,\n    hasNodeName,\n    fullscreen,\n  ]);\n  return (\n    <StyledCard fullscreen={fullscreen ? 1 : 0}>\n      <StyledIframe\n        name={new Date().getDate()}\n        id=\"frame\"\n        title=\"iframeGraph\"\n        frameBorder=\"0\"\n        src={iframeSrc}\n      />\n      <div style={{ color: '#000' }}>\n        {!window.location.href.includes('graph') && (\n          <StyledButton as={Link} target=\"_blank\" to={fullScreenUrl}>\n            <FiMaximize size={20} />\n          </StyledButton>\n        )}\n      </div>\n    </StyledCard>\n  );\n};\n\nChainMap.propTypes = {\n  chainId: PropTypes.string,\n  diseaseTypeId: PropTypes.string,\n  infectionTypeId: PropTypes.string,\n  withLocations: PropTypes.bool,\n  hasNodeName: PropTypes.bool,\n  fullscreen: PropTypes.bool,\n};\n\nChainMap.defaultProps = {\n  chainId: '',\n  diseaseTypeId: '',\n  infectionTypeId: '',\n  withLocations: false,\n  hasNodeName: true,\n  fullscreen: null,\n};\n\nexport default ChainMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}