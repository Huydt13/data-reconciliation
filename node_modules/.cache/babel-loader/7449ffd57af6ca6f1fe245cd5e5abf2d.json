{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\app\\\\components\\\\shared\\\\KeyboardDatePicker.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport MomentLocaleUtils, { formatDate, parseDate } from 'react-day-picker/moment';\nimport 'moment/locale/vi';\nimport moment from 'moment';\nconst locale = 'vi';\nconst dateFormat = 'DD-MM-YYYY';\nconst serverDateFormat = 'YYYY-MM-DD';\nconst months = ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12'];\nconst KeyboardDatePicker = _ref => {\n  let {\n    // popupOnTop,\n    value,\n    onChange,\n    onError,\n    readOnly,\n    disabledDays,\n    placeholder\n  } = _ref;\n  const [date, setDate] = useState(null);\n  const [input, setInput] = useState(null);\n  useEffect(() => {\n    if (value && !moment(date).isSame(value)) {\n      setDate(new Date(value));\n    }\n    // eslint-disable-next-line\n  }, [value]);\n  useEffect(() => {\n    if (date) {\n      onChange(moment(date).format(serverDateFormat));\n    }\n    // eslint-disable-next-line\n  }, [date]);\n  const handleKeyUp = e => {\n    const inputValue = e.target.value;\n    if (inputValue === '') {\n      setDate(null);\n    }\n    const d = inputValue.replace(/\\D/g, '').slice(0, 10);\n    if (d.length >= 5) {\n      const stringResult = `${d.slice(0, 2)}-${d.slice(2, 4)}-${d.slice(4)}`;\n      setInput(stringResult);\n    } else if (d.length >= 3) {\n      setInput(`${d.slice(0, 2)}-${d.slice(2)}`);\n    } else {\n      setInput(d);\n    }\n  };\n  return /*#__PURE__*/React.createElement(DayPickerInput\n  // classNames={{\n  //   overlay: popupOnTop\n  //     ? 'DayPickerInput-Overlay overlay-top'\n  //     : 'DayPickerInput-Overlay',\n  // }}\n  , {\n    value: input || date,\n    format: dateFormat,\n    parseDate: parseDate,\n    formatDate: formatDate,\n    placeholder: placeholder || dateFormat,\n    onDayChange: d => {\n      if (d === undefined) {\n        onError('InvalidDate');\n      } else {\n        setDate(d || null);\n      }\n    },\n    inputProps: {\n      readOnly,\n      maxLength: 10,\n      onKeyUp: handleKeyUp\n    },\n    dayPickerProps: {\n      months,\n      locale,\n      localeUtils: MomentLocaleUtils,\n      className: readOnly ? 'd-none' : '',\n      modifiers: {\n        disabled: disabledDays\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  });\n};\nKeyboardDatePicker.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.objectOf(Date)]),\n  onChange: PropTypes.func,\n  onError: PropTypes.func,\n  // popupOnTop: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  disabledDays: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({})), PropTypes.func]),\n  placeholder: PropTypes.string\n};\nKeyboardDatePicker.defaultProps = {\n  value: null,\n  placeholder: '',\n  onChange: () => {},\n  onError: () => {},\n  // popupOnTop: false,\n  readOnly: false,\n  disabledDays: []\n};\nexport default KeyboardDatePicker;","map":{"version":3,"names":["React","useState","useEffect","PropTypes","DayPickerInput","MomentLocaleUtils","formatDate","parseDate","moment","locale","dateFormat","serverDateFormat","months","KeyboardDatePicker","_ref","value","onChange","onError","readOnly","disabledDays","placeholder","date","setDate","input","setInput","isSame","Date","format","handleKeyUp","e","inputValue","target","d","replace","slice","length","stringResult","createElement","onDayChange","undefined","inputProps","maxLength","onKeyUp","dayPickerProps","localeUtils","className","modifiers","disabled","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","propTypes","oneOfType","string","objectOf","func","bool","arrayOf","shape","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/app/components/shared/KeyboardDatePicker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\n\nimport MomentLocaleUtils, {\n  formatDate,\n  parseDate,\n} from 'react-day-picker/moment';\nimport 'moment/locale/vi';\nimport moment from 'moment';\n\nconst locale = 'vi';\nconst dateFormat = 'DD-MM-YYYY';\nconst serverDateFormat = 'YYYY-MM-DD';\n\nconst months = [\n  'Tháng 1',\n  'Tháng 2',\n  'Tháng 3',\n  'Tháng 4',\n  'Tháng 5',\n  'Tháng 6',\n  'Tháng 7',\n  'Tháng 8',\n  'Tháng 9',\n  'Tháng 10',\n  'Tháng 11',\n  'Tháng 12',\n];\n\nconst KeyboardDatePicker = ({\n  // popupOnTop,\n  value,\n  onChange,\n  onError,\n  readOnly,\n  disabledDays,\n  placeholder,\n}) => {\n  const [date, setDate] = useState(null);\n  const [input, setInput] = useState(null);\n  useEffect(() => {\n    if (value && !moment(date).isSame(value)) {\n      setDate(new Date(value));\n    }\n    // eslint-disable-next-line\n  }, [value]);\n  useEffect(() => {\n    if (date) {\n      onChange(moment(date).format(serverDateFormat));\n    }\n    // eslint-disable-next-line\n  }, [date]);\n\n  const handleKeyUp = (e) => {\n    const inputValue = e.target.value;\n    if (inputValue === '') {\n      setDate(null);\n    }\n    const d = inputValue.replace(/\\D/g, '').slice(0, 10);\n    if (d.length >= 5) {\n      const stringResult = `${d.slice(0, 2)}-${d.slice(2, 4)}-${d.slice(4)}`;\n      setInput(stringResult);\n    } else if (d.length >= 3) {\n      setInput(`${d.slice(0, 2)}-${d.slice(2)}`);\n    } else {\n      setInput(d);\n    }\n  };\n\n  return (\n    <DayPickerInput\n      // classNames={{\n      //   overlay: popupOnTop\n      //     ? 'DayPickerInput-Overlay overlay-top'\n      //     : 'DayPickerInput-Overlay',\n      // }}\n      value={input || date}\n      format={dateFormat}\n      parseDate={parseDate}\n      formatDate={formatDate}\n      placeholder={placeholder || dateFormat}\n      onDayChange={(d) => {\n        if (d === undefined) {\n          onError('InvalidDate');\n        } else {\n          setDate(d || null);\n        }\n      }}\n      inputProps={{\n        readOnly,\n        maxLength: 10,\n        onKeyUp: handleKeyUp,\n      }}\n      dayPickerProps={{\n        months,\n        locale,\n        localeUtils: MomentLocaleUtils,\n        className: readOnly ? 'd-none' : '',\n        modifiers: {\n          disabled: disabledDays,\n        },\n      }}\n    />\n  );\n};\n\nKeyboardDatePicker.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.objectOf(Date)]),\n  onChange: PropTypes.func,\n  onError: PropTypes.func,\n  // popupOnTop: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  disabledDays: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.shape({})),\n    PropTypes.func,\n  ]),\n  placeholder: PropTypes.string,\n};\n\nKeyboardDatePicker.defaultProps = {\n  value: null,\n  placeholder: '',\n  onChange: () => {},\n  onError: () => {},\n  // popupOnTop: false,\n  readOnly: false,\n  disabledDays: [],\n};\n\nexport default KeyboardDatePicker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}