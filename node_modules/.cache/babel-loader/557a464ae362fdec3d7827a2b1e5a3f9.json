{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\profile-train\\\\components\\\\ProfileTable.js\";\nimport { DataTable } from \"app/components/shared\";\nimport moment from \"moment/moment\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { getProfiles } from \"profile/actions/profile\";\nimport PropTypes from \"prop-types\";\nimport { formatAddressToString, renderProfileKey } from \"app/utils/helpers\";\nimport { FiFileText, FiUpload } from \"react-icons/fi\";\nimport { useHistory } from \"react-router-dom\";\nimport ProfileFilter from \"./ProfileFilter\";\nconst columns = [{\n  Header: \"ID hồ sơ\",\n  accessor: \"id\"\n}, {\n  Header: \"Tên\",\n  formatter: _ref => {\n    let {\n      fullName\n    } = _ref;\n    return fullName || \"\";\n  },\n  cutlength: 50\n}, {\n  Header: \"Ngày sinh\",\n  formatter: row => row.dateOfBirth ? !row.hasYearOfBirthOnly ? moment(row.dateOfBirth).format(\"DD-MM-YYYY\") : moment(row.dateOfBirth).format(\"YYYY\") : \"Chưa xác định\"\n}, {\n  Header: \"Địa chỉ nhà\",\n  formatter: _ref2 => {\n    let {\n      addressesInVietnam\n    } = _ref2;\n    return formatAddressToString(addressesInVietnam[0]);\n  }\n},\n// {\n//   Header: \"Thông tin xác thực\",\n//   formatter: (r) => renderProfileKey({ ...r, keyWithAddress: false }),\n// },\n{\n  Header: \"Số điện thoại\",\n  accessor: \"phoneNumber\"\n}];\nconst ProfileTable = _ref3 => {\n  let {\n    hasGroupProfiles\n  } = _ref3;\n  const [filter, setFilter] = useState({});\n  const [pageIndex, setpageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [groupProfile, setGroupProfile] = useState(undefined);\n  const [importGroupRisk, setImportGroupRisk] = useState(false);\n  const history = useHistory();\n  const {\n    profileList,\n    getProfilesLoading,\n    createProfileLoading,\n    updateProfileLoading,\n    deleteProfileLoading\n  } = useSelector(state => state.profile);\n  const loading = getProfilesLoading || createProfileLoading || updateProfileLoading || deleteProfileLoading;\n  const dispatch = useDispatch();\n  const getData = useCallback(() => {\n    dispatch(getProfiles({\n      ...filter,\n      pageIndex,\n      pageSize\n    }));\n  }, [dispatch, filter, pageIndex, pageSize]);\n  useEffect(getData, [getData]);\n  const {\n    data,\n    totalRows,\n    totalPages\n  } = profileList;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProfileFilter, {\n    onChange: setFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(DataTable, {\n    columns: columns,\n    data: (data || []).map((r, i) => ({\n      ...r,\n      index: i + 1\n    })),\n    loading: loading,\n    pageCount: totalPages,\n    totalCount: totalRows,\n    onPaginationChange: p => {\n      setpageIndex(p.pageIndex);\n      setPageSize(p.pageSize);\n    },\n    actions: [{\n      icon: /*#__PURE__*/React.createElement(FiFileText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }\n      }),\n      disabled: false,\n      title: \"Hồ sơ\",\n      color: \"blue\",\n      onClick: e => {\n        console.log(e);\n        window.open(`/train/${e.id}`, \"_blank\");\n      },\n      // eslint-disable-next-line no-dupe-keys\n      disabled: false\n    }, {\n      icon: /*#__PURE__*/React.createElement(FiUpload, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }\n      }),\n      title: \"Import\",\n      color: \"green\",\n      onClick: () => setImportGroupRisk(true),\n      globalAction: true\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ImportModal, {\n    open: importGroupRisk,\n    onClose: () => setImportGroupRisk(false),\n    onRefresh: getData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }));\n};\nProfileTable.defaultProps = {\n  hasOnUsingProfiles: undefined,\n  hasGroupProfiles: undefined\n};\nProfileTable.propTypes = {\n  hasOnUsingProfiles: PropTypes.bool,\n  hasGroupProfiles: PropTypes.bool\n};\nexport default ProfileTable;","map":{"version":3,"names":["DataTable","moment","React","useCallback","useEffect","useState","useDispatch","useSelector","getProfiles","PropTypes","formatAddressToString","renderProfileKey","FiFileText","FiUpload","useHistory","ProfileFilter","columns","Header","accessor","formatter","_ref","fullName","cutlength","row","dateOfBirth","hasYearOfBirthOnly","format","_ref2","addressesInVietnam","ProfileTable","_ref3","hasGroupProfiles","filter","setFilter","pageIndex","setpageIndex","pageSize","setPageSize","groupProfile","setGroupProfile","undefined","importGroupRisk","setImportGroupRisk","history","profileList","getProfilesLoading","createProfileLoading","updateProfileLoading","deleteProfileLoading","state","profile","loading","dispatch","getData","data","totalRows","totalPages","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","r","i","index","pageCount","totalCount","onPaginationChange","p","actions","icon","disabled","title","color","onClick","e","console","log","window","open","id","globalAction","ImportModal","onClose","onRefresh","defaultProps","hasOnUsingProfiles","propTypes","bool"],"sources":["H:/BAKCO/pj/data reconciliation/src/profile-train/components/ProfileTable.js"],"sourcesContent":["import { DataTable } from \"app/components/shared\";\r\nimport moment from \"moment/moment\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { getProfiles } from \"profile/actions/profile\";\r\nimport PropTypes from \"prop-types\";\r\nimport { formatAddressToString, renderProfileKey } from \"app/utils/helpers\";\r\nimport { FiFileText, FiUpload } from \"react-icons/fi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ProfileFilter from \"./ProfileFilter\";\r\n\r\nconst columns = [\r\n  {\r\n    Header: \"ID hồ sơ\",\r\n    accessor: \"id\",\r\n  },\r\n  {\r\n    Header: \"Tên\",\r\n    formatter: ({ fullName }) => fullName || \"\",\r\n    cutlength: 50,\r\n  },\r\n  {\r\n    Header: \"Ngày sinh\",\r\n    formatter: (row) =>\r\n      row.dateOfBirth\r\n        ? !row.hasYearOfBirthOnly\r\n          ? moment(row.dateOfBirth).format(\"DD-MM-YYYY\")\r\n          : moment(row.dateOfBirth).format(\"YYYY\")\r\n        : \"Chưa xác định\",\r\n  },\r\n  {\r\n    Header: \"Địa chỉ nhà\",\r\n    formatter: ({ addressesInVietnam }) =>\r\n      formatAddressToString(addressesInVietnam[0]),\r\n  },\r\n  // {\r\n  //   Header: \"Thông tin xác thực\",\r\n  //   formatter: (r) => renderProfileKey({ ...r, keyWithAddress: false }),\r\n  // },\r\n  { Header: \"Số điện thoại\", accessor: \"phoneNumber\" },\r\n];\r\nconst ProfileTable = ({ hasGroupProfiles }) => {\r\n  const [filter, setFilter] = useState({});\r\n  const [pageIndex, setpageIndex] = useState(0);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [groupProfile, setGroupProfile] = useState(undefined);\r\n  const [importGroupRisk, setImportGroupRisk] = useState(false);\r\n\r\n  const history = useHistory();\r\n  const {\r\n    profileList,\r\n    getProfilesLoading,\r\n    createProfileLoading,\r\n    updateProfileLoading,\r\n    deleteProfileLoading,\r\n  } = useSelector((state) => state.profile);\r\n\r\n  const loading =\r\n    getProfilesLoading ||\r\n    createProfileLoading ||\r\n    updateProfileLoading ||\r\n    deleteProfileLoading;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const getData = useCallback(() => {\r\n    dispatch(\r\n      getProfiles({\r\n        ...filter,\r\n        pageIndex,\r\n        pageSize,\r\n      })\r\n    );\r\n  }, [dispatch, filter, pageIndex, pageSize]);\r\n  useEffect(getData, [getData]);\r\n  const { data, totalRows, totalPages } = profileList;\r\n  return (\r\n    <div>\r\n      <ProfileFilter onChange={setFilter} />\r\n      <DataTable\r\n        columns={columns}\r\n        data={(data || []).map((r, i) => ({ ...r, index: i + 1 }))}\r\n        loading={loading}\r\n        pageCount={totalPages}\r\n        totalCount={totalRows}\r\n        onPaginationChange={(p) => {\r\n          setpageIndex(p.pageIndex);\r\n          setPageSize(p.pageSize);\r\n        }}\r\n        actions={[\r\n          {\r\n            icon: <FiFileText />,\r\n            disabled: false,\r\n            title: \"Hồ sơ\",\r\n            color: \"blue\",\r\n            onClick: (e) => {\r\n              console.log(e);\r\n              window.open(`/train/${e.id}`, \"_blank\");\r\n            },\r\n            // eslint-disable-next-line no-dupe-keys\r\n            disabled: false,\r\n          },\r\n          {\r\n            icon: <FiUpload />,\r\n            title: \"Import\",\r\n            color: \"green\",\r\n            onClick: () => setImportGroupRisk(true),\r\n            globalAction: true,\r\n          },\r\n        ]}\r\n      />\r\n      <ImportModal\r\n        open={importGroupRisk}\r\n        onClose={() => setImportGroupRisk(false)}\r\n        onRefresh={getData}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nProfileTable.defaultProps = {\r\n  hasOnUsingProfiles: undefined,\r\n  hasGroupProfiles: undefined,\r\n};\r\nProfileTable.propTypes = {\r\n  hasOnUsingProfiles: PropTypes.bool,\r\n  hasGroupProfiles: PropTypes.bool,\r\n};\r\nexport default ProfileTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}