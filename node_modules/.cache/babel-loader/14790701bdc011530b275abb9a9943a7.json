{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\medical-test\\\\components\\\\transports\\\\AvailableExaminationTable.js\";\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Label } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAvailableExamForTransport } from 'medical-test/actions/transport';\nimport { checkFilter } from 'app/utils/helpers';\nimport { getImportantType } from 'infection-chain/utils/helpers';\nimport SelectTable from 'app/components/shared/data-table/SelectTable';\nimport ExaminationDetailsFilter from 'medical-test/components/transports/ExaminationDetailsFilter';\nconst AvailableExaminationTable = props => {\n  const {\n    importantValue,\n    onChange\n  } = props;\n  const columns = useMemo(() => [{\n    Header: '#',\n    accessor: 'index'\n  }, {\n    Header: 'Người được xét nghiệm',\n    formatter: row => {\n      var _row$person;\n      return row === null || row === void 0 ? void 0 : (_row$person = row.person) === null || _row$person === void 0 ? void 0 : _row$person.name;\n    },\n    maxlength: 20\n  }, {\n    Header: 'Mã xét nghiệm',\n    // eslint-disable-next-line react/prop-types\n    formatter: _ref => {\n      let {\n        code\n      } = _ref;\n      return (code === null || code === void 0 ? void 0 : code.length) === 12 ? /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 57\n        }\n      }, code) : code;\n    }\n  }, {\n    Header: 'Mẫu bệnh phẩm',\n    formatter: row => {\n      var _row$diseaseSample;\n      return row === null || row === void 0 ? void 0 : (_row$diseaseSample = row.diseaseSample) === null || _row$diseaseSample === void 0 ? void 0 : _row$diseaseSample.name;\n    }\n  }, {\n    Header: 'Ngày lấy mẫu',\n    formatter: row => row.dateTaken ? moment(row.dateTaken).format('DD-MM-YY HH:mm') : ''\n  }, {\n    Header: 'Kỹ thuật xét nghiệm',\n    accessor: 'testTechnique'\n  }, {\n    Header: 'Độ ưu tiên',\n    formatter: _ref2 => {\n      var _getImportantType, _getImportantType2, _getImportantType3;\n      let {\n        importantValue: iv\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Label, {\n        empty: true,\n        circular: true,\n        style: {\n          marginRight: '5px'\n        },\n        key: (_getImportantType = getImportantType(iv)) === null || _getImportantType === void 0 ? void 0 : _getImportantType.color,\n        color: (_getImportantType2 = getImportantType(iv)) === null || _getImportantType2 === void 0 ? void 0 : _getImportantType2.color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }), (_getImportantType3 = getImportantType(iv)) === null || _getImportantType3 === void 0 ? void 0 : _getImportantType3.label);\n    }\n  }], []);\n  const dispatch = useDispatch();\n  const {\n    availableExamForTransportList: {\n      data,\n      pageCount\n    },\n    getAvailableExamForTransportLoading\n  } = useSelector(state => state.transport);\n  const [pageSize, setPageSize] = useState(10);\n  const [pageIndex, setPageIndex] = useState(0);\n  const [filter, setFilter] = useState({});\n  const getData = useCallback(() => {\n    dispatch(getAvailableExamForTransport({\n      ...filter,\n      importantValue,\n      pageIndex,\n      pageSize\n    }));\n  }, [dispatch, filter, pageSize, pageIndex, importantValue]);\n  useEffect(getData, [getData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ExaminationDetailsFilter, {\n    nonImportantValue: true,\n    onChange: d => checkFilter(filter, d) && setFilter(d),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SelectTable, {\n    title: \"Danh s\\xE1ch m\\u1EABu trong h\\u1EC7 th\\u1ED1ng\",\n    selectable: true,\n    columns: columns,\n    data: data.map((d, i) => ({\n      ...d,\n      index: i + 1\n    })),\n    loading: getAvailableExamForTransportLoading,\n    pageCount: pageCount,\n    onPaginationChange: _ref3 => {\n      let {\n        pageSize: ps,\n        pageIndex: pi\n      } = _ref3;\n      setPageSize(ps);\n      setPageIndex(pi);\n    },\n    onSelectionChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }));\n};\nAvailableExaminationTable.propTypes = {\n  importantValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func\n};\nAvailableExaminationTable.defaultProps = {\n  importantValue: '',\n  onChange: () => {}\n};\nexport default AvailableExaminationTable;","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","PropTypes","moment","Label","useDispatch","useSelector","getAvailableExamForTransport","checkFilter","getImportantType","SelectTable","ExaminationDetailsFilter","AvailableExaminationTable","props","importantValue","onChange","columns","Header","accessor","formatter","row","_row$person","person","name","maxlength","_ref","code","length","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_row$diseaseSample","diseaseSample","dateTaken","format","_ref2","_getImportantType","_getImportantType2","_getImportantType3","iv","Fragment","empty","circular","style","marginRight","key","color","label","dispatch","availableExamForTransportList","data","pageCount","getAvailableExamForTransportLoading","state","transport","pageSize","setPageSize","pageIndex","setPageIndex","filter","setFilter","getData","nonImportantValue","d","title","selectable","map","i","index","loading","onPaginationChange","_ref3","ps","pi","onSelectionChange","propTypes","oneOfType","string","number","func","defaultProps"],"sources":["H:/BAKCO/pj/data reconciliation/src/medical-test/components/transports/AvailableExaminationTable.js"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport { Label } from 'semantic-ui-react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAvailableExamForTransport } from 'medical-test/actions/transport';\n\nimport { checkFilter } from 'app/utils/helpers';\nimport { getImportantType } from 'infection-chain/utils/helpers';\n\nimport SelectTable from 'app/components/shared/data-table/SelectTable';\nimport ExaminationDetailsFilter from 'medical-test/components/transports/ExaminationDetailsFilter';\n\nconst AvailableExaminationTable = (props) => {\n  const { importantValue, onChange } = props;\n  const columns = useMemo(\n    () => [\n      { Header: '#', accessor: 'index' },\n      {\n        Header: 'Người được xét nghiệm',\n        formatter: (row) => row?.person?.name,\n        maxlength: 20,\n      },\n      {\n        Header: 'Mã xét nghiệm',\n        // eslint-disable-next-line react/prop-types\n        formatter: ({ code }) => (code?.length === 12 ? <b>{code}</b> : code),\n      },\n      { Header: 'Mẫu bệnh phẩm', formatter: (row) => row?.diseaseSample?.name },\n      {\n        Header: 'Ngày lấy mẫu',\n        formatter: (row) =>\n          row.dateTaken ? moment(row.dateTaken).format('DD-MM-YY HH:mm') : '',\n      },\n      { Header: 'Kỹ thuật xét nghiệm', accessor: 'testTechnique' },\n      {\n        Header: 'Độ ưu tiên',\n        formatter: ({ importantValue: iv }) => (\n          <>\n            <Label\n              empty\n              circular\n              style={{ marginRight: '5px' }}\n              key={getImportantType(iv)?.color}\n              color={getImportantType(iv)?.color}\n            />\n            {getImportantType(iv)?.label}\n          </>\n        ),\n      },\n    ],\n    [],\n  );\n  const dispatch = useDispatch();\n\n  const {\n    availableExamForTransportList: { data, pageCount },\n    getAvailableExamForTransportLoading,\n  } = useSelector((state) => state.transport);\n\n  const [pageSize, setPageSize] = useState(10);\n  const [pageIndex, setPageIndex] = useState(0);\n\n  const [filter, setFilter] = useState({});\n\n  const getData = useCallback(() => {\n    dispatch(\n      getAvailableExamForTransport({\n        ...filter,\n        importantValue,\n        pageIndex,\n        pageSize,\n      }),\n    );\n  }, [dispatch, filter, pageSize, pageIndex, importantValue]);\n  useEffect(getData, [getData]);\n\n  return (\n    <>\n      <ExaminationDetailsFilter\n        nonImportantValue\n        onChange={(d) => checkFilter(filter, d) && setFilter(d)}\n      />\n      <SelectTable\n        title=\"Danh sách mẫu trong hệ thống\"\n        selectable\n        columns={columns}\n        data={data.map((d, i) => ({ ...d, index: i + 1 }))}\n        loading={getAvailableExamForTransportLoading}\n        pageCount={pageCount}\n        onPaginationChange={({ pageSize: ps, pageIndex: pi }) => {\n          setPageSize(ps);\n          setPageIndex(pi);\n        }}\n        onSelectionChange={onChange}\n      />\n    </>\n  );\n};\n\nAvailableExaminationTable.propTypes = {\n  importantValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onChange: PropTypes.func,\n};\n\nAvailableExaminationTable.defaultProps = {\n  importantValue: '',\n  onChange: () => {},\n};\n\nexport default AvailableExaminationTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}