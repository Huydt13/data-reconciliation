{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\infection-chain\\\\components\\\\subject\\\\information\\\\form-sections\\\\MinimizeImmunization.js\";\n/* eslint-disable consistent-return */\n/* eslint-disable no-nested-ternary */\nimport React, { useState, useMemo } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Form, Select, Button } from 'semantic-ui-react';\nimport { KeyboardDateTimePicker } from 'app/components/shared';\nimport EditableLabel from 'app/components/shared/EditableLabel';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuth } from 'app/hooks';\nimport { getProfile, createImmunizationForProfile, updateImmunizationForProfile } from 'profile/actions/profile';\nimport { formatToTime } from 'app/utils/helpers';\nimport { immunizationStatusOptions /* , vaccineTypeOptions */ } from 'profile/utils/helpers';\nimport { IMMUNIZATION_STATUSES } from 'profile/utils/constants';\nconst Flex = styled.div`\n  display: flex;\n`;\nconst Wrapper = styled.div`\n  margin-left: 3px;\n  margin-top: 5px;\n  margin-bottom: 3px;\n\n  & .DayPickerInput {\n    & input {\n      padding: 0.435em 0.875em !important;\n    }\n  }\n`;\nconst MinimizeImmunization = _ref => {\n  let {\n    data,\n    disabled\n  } = _ref;\n  const {\n    immunizations\n  } = data;\n  const [readOnly, setReadOnly] = useState(false);\n  const [openCreate, setOpenCreate] = useState(false);\n  const {\n    createImmunizationForProfileLoading,\n    updateImmunizationForProfileLoading\n  } = useSelector(state => state.profile);\n  const dispatch = useDispatch();\n  const {\n    isUsername\n  } = useAuth();\n  const {\n    control,\n    reset,\n    watch,\n    setValue,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const loading = createImmunizationForProfileLoading || updateImmunizationForProfileLoading;\n  const immunizationLatest = useMemo(() => {\n    if (immunizations && immunizations.length > 0) {\n      return immunizations.reduce((o, i) => new Date(i.dateCreated) > new Date(o.dateCreated) ? i : o, immunizations[0]);\n    }\n    return undefined;\n  }, [immunizations]);\n  const statusOptions = useMemo(() => {\n    if (!isUsername('hcdc') && immunizationLatest && typeof immunizationLatest.immunizationStatus === 'number') {\n      const key = immunizationStatusOptions.reduce((_, status, index) => {\n        if (status.value === immunizationLatest.immunizationStatus) {\n          return index;\n        }\n        return _;\n      }, 0);\n      return immunizationStatusOptions.slice(key);\n    }\n    return immunizationStatusOptions;\n    // eslint-disable-next-line\n  }, [immunizationLatest]);\n  const onSubmit = async d => {\n    if (data === null || data === void 0 ? void 0 : data.id) {\n      try {\n        await dispatch(immunizationLatest && d.immunizationStatus <= immunizationLatest.immunizationStatus ? updateImmunizationForProfile({\n          ...d,\n          id: immunizationLatest.guid,\n          guid: immunizationLatest.guid,\n          profileId: immunizationLatest.profileId,\n          // vaccine:\n          //   (d.immunizationStatus === IMMUNIZATION_STATUSES.NO_RECORD ||\n          //     d.immunizationStatus === IMMUNIZATION_STATUSES.NO_VACCINE)\n          //   ? null\n          //   : d.vaccine,\n          injectionDate: d.immunizationStatus === IMMUNIZATION_STATUSES.NO_RECORD || d.immunizationStatus === IMMUNIZATION_STATUSES.NO_VACCINE ? null : d.injectionDate\n        }) : createImmunizationForProfile({\n          ...d,\n          profileId: data.id,\n          // vaccine:\n          //   (d.immunizationStatus === IMMUNIZATION_STATUSES.NO_RECORD ||\n          //     d.immunizationStatus === IMMUNIZATION_STATUSES.NO_VACCINE)\n          //   ? null\n          //   : d.vaccine,\n          injectionDate: d.immunizationStatus === IMMUNIZATION_STATUSES.NO_RECORD || d.immunizationStatus === IMMUNIZATION_STATUSES.NO_VACCINE ? null : d.injectionDate\n        }));\n        // eslint-disable-next-line no-empty\n      } catch (error) {}\n      await dispatch(getProfile(data.id));\n    }\n    setOpenCreate(false);\n    reset({});\n  };\n  const labels = [{\n    rowIndex: 0,\n    col: [{\n      name: 'disease',\n      label: 'Bệnh:',\n      value: immunizationLatest === null || immunizationLatest === void 0 ? void 0 : immunizationLatest.disease,\n      disabled: true\n    }, {\n      type: 'select',\n      name: 'immunizationStatus',\n      label: 'Trạng thái tiêm vắc xin:',\n      value: immunizationLatest === null || immunizationLatest === void 0 ? void 0 : immunizationLatest.immunizationStatus,\n      dropdownOptions: statusOptions,\n      disabled: true\n    },\n    // {\n    //   type: 'select',\n    //   name: 'vaccine',\n    //   label: 'Loại vắc xin:',\n    //   value: immunizationLatest?.vaccine,\n    //   dropdownOptions: vaccineTypeOptions,\n    //   disabled: true,\n    // },\n    {\n      type: 'date-time',\n      name: 'injectionDate',\n      label: 'Ngày tiêm gần nhất:',\n      value: formatToTime(immunizationLatest === null || immunizationLatest === void 0 ? void 0 : immunizationLatest.injectionDate),\n      disabled: true\n    }]\n  }];\n  const ruleOptions = {\n    immunizationStatus: {\n      validate: () => {\n        const immunizationStatus = watch('immunizationStatus');\n        const error = typeof immunizationStatus !== 'number' ? 'Bắt buộc' : undefined;\n        return error || true;\n      }\n    },\n    // vaccine: {\n    //   required: 'Bắt buộc',\n    // },\n    injectionDate: {\n      validate: () => {\n        const immunizationStatus = watch('immunizationStatus');\n        if (immunizationStatus !== IMMUNIZATION_STATUSES.NO_RECORD && immunizationStatus !== IMMUNIZATION_STATUSES.NO_VACCINE) {\n          const date = watch('injectionDate');\n          const error = date ? date < new Date(2021, 0, 1) ? 'Thời gian phải lớn hơn 01/01/2021' : undefined : 'Bắt buộc';\n          return error || true;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !openCreate && labels.map(r => /*#__PURE__*/React.createElement(Flex, {\n    key: r.rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }, r.col.map(f => /*#__PURE__*/React.createElement(EditableLabel\n  // style props\n  , {\n    key: f.name,\n    header: f.label,\n    content: f.value\n    // logic props\n    ,\n    name: f.name,\n    disabled: f === null || f === void 0 ? void 0 : f.disabled,\n    type: f === null || f === void 0 ? void 0 : f.type,\n    dropdownOptions: f === null || f === void 0 ? void 0 : f.dropdownOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, openCreate && /*#__PURE__*/React.createElement(Form, {\n    size: \"tiny\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    name: \"disease\",\n    control: control,\n    defaultValue: \"Covid-19\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Controller, {\n    name: \"immunizationStatus\",\n    control: control,\n    defaultValue: \"\",\n    rules: ruleOptions.immunizationStatus,\n    render: _ref2 => {\n      var _errors$immunizationS;\n      let {\n        onChange,\n        onBlur,\n        value\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Form.Field, {\n        fluid: true,\n        search: true,\n        width: 3,\n        error: (_errors$immunizationS = errors.immunizationStatus) === null || _errors$immunizationS === void 0 ? void 0 : _errors$immunizationS.message,\n        label: \"Tr\\u1EA1ng th\\xE1i ti\\xEAm v\\u1EAFc xin\",\n        control: Select,\n        value: value,\n        options: statusOptions,\n        onChange: (__, _ref3) => {\n          let {\n            value: v\n          } = _ref3;\n          if (v === IMMUNIZATION_STATUSES.NO_RECORD || v === IMMUNIZATION_STATUSES.NO_VACCINE) {\n            // setValue('vaccine', undefined);\n            setValue('injectionDate', null);\n            setReadOnly(true);\n          } else if (readOnly) {\n            setReadOnly(false);\n          }\n          onChange(v);\n        },\n        onBlur: onBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 19\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Controller, {\n    name: \"injectionDate\",\n    control: control,\n    defaultValue: \"\",\n    rules: ruleOptions.injectionDate,\n    render: _ref4 => {\n      var _errors$injectionDate;\n      let {\n        onChange,\n        onBlur,\n        value\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(Form.Field, {\n        fluid: true,\n        width: 5,\n        required: !readOnly,\n        disabled: readOnly,\n        error: (_errors$injectionDate = errors.injectionDate) === null || _errors$injectionDate === void 0 ? void 0 : _errors$injectionDate.message,\n        label: \"Ng\\xE0y ti\\xEAm g\\u1EA7n nh\\u1EA5t\",\n        control: KeyboardDateTimePicker,\n        disabledDays: [{\n          before: new Date(2021, 0, 1),\n          after: new Date()\n        }],\n        value: value,\n        onChange: v => onChange(v),\n        onBlur: onBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 19\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }))), !disabled && /*#__PURE__*/React.createElement(Button, {\n    size: \"mini\",\n    color: \"green\",\n    content: \"C\\u1EADp nh\\u1EADt\",\n    loading: loading,\n    onClick: () => {\n      if (!openCreate) {\n        setOpenCreate(true);\n        reset(immunizationLatest);\n      } else {\n        handleSubmit(d => onSubmit(d))();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }), openCreate && /*#__PURE__*/React.createElement(Button, {\n    size: \"mini\",\n    content: \"\\u0110\\xF3ng\",\n    onClick: () => setOpenCreate(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }\n  })));\n};\nMinimizeImmunization.propTypes = {\n  disabled: PropTypes.bool,\n  data: PropTypes.shape({\n    id: PropTypes.number,\n    immunizations: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.number,\n      disease: PropTypes.string,\n      immunizationStatus: PropTypes.number,\n      // vaccine: PropTypes.string,\n      injectionDate: PropTypes.string\n    }))\n  })\n};\nMinimizeImmunization.defaultProps = {\n  disabled: false,\n  data: {}\n};\nexport default MinimizeImmunization;","map":{"version":3,"names":["React","useState","useMemo","useForm","Controller","styled","PropTypes","Form","Select","Button","KeyboardDateTimePicker","EditableLabel","useDispatch","useSelector","useAuth","getProfile","createImmunizationForProfile","updateImmunizationForProfile","formatToTime","immunizationStatusOptions","IMMUNIZATION_STATUSES","Flex","div","Wrapper","MinimizeImmunization","_ref","data","disabled","immunizations","readOnly","setReadOnly","openCreate","setOpenCreate","createImmunizationForProfileLoading","updateImmunizationForProfileLoading","state","profile","dispatch","isUsername","control","reset","watch","setValue","handleSubmit","formState","errors","loading","immunizationLatest","length","reduce","o","i","Date","dateCreated","undefined","statusOptions","immunizationStatus","key","_","status","index","value","slice","onSubmit","d","id","guid","profileId","injectionDate","NO_RECORD","NO_VACCINE","error","labels","rowIndex","col","name","label","disease","type","dropdownOptions","ruleOptions","validate","date","createElement","Fragment","map","r","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","f","header","content","size","Group","defaultValue","rules","render","_ref2","_errors$immunizationS","onChange","onBlur","Field","fluid","search","width","message","options","__","_ref3","v","_ref4","_errors$injectionDate","required","disabledDays","before","after","color","onClick","propTypes","bool","shape","number","arrayOf","string","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/infection-chain/components/subject/information/form-sections/MinimizeImmunization.js"],"sourcesContent":["/* eslint-disable consistent-return */\r\n/* eslint-disable no-nested-ternary */\r\nimport React, { useState, useMemo } from 'react';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Form, Select, Button } from 'semantic-ui-react';\r\nimport { KeyboardDateTimePicker } from 'app/components/shared';\r\nimport EditableLabel from 'app/components/shared/EditableLabel';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useAuth } from 'app/hooks';\r\nimport {\r\n  getProfile,\r\n  createImmunizationForProfile,\r\n  updateImmunizationForProfile,\r\n} from 'profile/actions/profile';\r\nimport { formatToTime } from 'app/utils/helpers';\r\nimport {\r\n  immunizationStatusOptions /* , vaccineTypeOptions */,\r\n} from 'profile/utils/helpers';\r\nimport { IMMUNIZATION_STATUSES } from 'profile/utils/constants';\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n`;\r\nconst Wrapper = styled.div`\r\n  margin-left: 3px;\r\n  margin-top: 5px;\r\n  margin-bottom: 3px;\r\n\r\n  & .DayPickerInput {\r\n    & input {\r\n      padding: 0.435em 0.875em !important;\r\n    }\r\n  }\r\n`;\r\n\r\nconst MinimizeImmunization = ({ data, disabled }) => {\r\n  const { immunizations } = data;\r\n\r\n  const [readOnly, setReadOnly] = useState(false);\r\n  const [openCreate, setOpenCreate] = useState(false);\r\n  const {\r\n    createImmunizationForProfileLoading,\r\n    updateImmunizationForProfileLoading,\r\n  } = useSelector((state) => state.profile);\r\n\r\n  const dispatch = useDispatch();\r\n  const { isUsername } = useAuth();\r\n  const {\r\n    control,\r\n    reset,\r\n    watch,\r\n    setValue,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm();\r\n\r\n  const loading =\r\n    createImmunizationForProfileLoading || updateImmunizationForProfileLoading;\r\n\r\n  const immunizationLatest = useMemo(() => {\r\n    if (immunizations && immunizations.length > 0) {\r\n      return immunizations.reduce(\r\n        (o, i) => (new Date(i.dateCreated) > new Date(o.dateCreated) ? i : o),\r\n        immunizations[0]\r\n      );\r\n    }\r\n    return undefined;\r\n  }, [immunizations]);\r\n\r\n  const statusOptions = useMemo(() => {\r\n    if (\r\n      !isUsername('hcdc') &&\r\n      immunizationLatest &&\r\n      typeof immunizationLatest.immunizationStatus === 'number'\r\n    ) {\r\n      const key = immunizationStatusOptions.reduce((_, status, index) => {\r\n        if (status.value === immunizationLatest.immunizationStatus) {\r\n          return index;\r\n        }\r\n        return _;\r\n      }, 0);\r\n\r\n      return immunizationStatusOptions.slice(key);\r\n    }\r\n    return immunizationStatusOptions;\r\n    // eslint-disable-next-line\r\n  }, [immunizationLatest]);\r\n\r\n  const onSubmit = async (d) => {\r\n    if (data?.id) {\r\n      try {\r\n        await dispatch(\r\n          immunizationLatest &&\r\n            d.immunizationStatus <= immunizationLatest.immunizationStatus\r\n            ? updateImmunizationForProfile({\r\n                ...d,\r\n                id: immunizationLatest.guid,\r\n                guid: immunizationLatest.guid,\r\n                profileId: immunizationLatest.profileId,\r\n                // vaccine:\r\n                //   (d.immunizationStatus === IMMUNIZATION_STATUSES.NO_RECORD ||\r\n                //     d.immunizationStatus === IMMUNIZATION_STATUSES.NO_VACCINE)\r\n                //   ? null\r\n                //   : d.vaccine,\r\n                injectionDate:\r\n                  d.immunizationStatus === IMMUNIZATION_STATUSES.NO_RECORD ||\r\n                  d.immunizationStatus === IMMUNIZATION_STATUSES.NO_VACCINE\r\n                    ? null\r\n                    : d.injectionDate,\r\n              })\r\n            : createImmunizationForProfile({\r\n                ...d,\r\n                profileId: data.id,\r\n                // vaccine:\r\n                //   (d.immunizationStatus === IMMUNIZATION_STATUSES.NO_RECORD ||\r\n                //     d.immunizationStatus === IMMUNIZATION_STATUSES.NO_VACCINE)\r\n                //   ? null\r\n                //   : d.vaccine,\r\n                injectionDate:\r\n                  d.immunizationStatus === IMMUNIZATION_STATUSES.NO_RECORD ||\r\n                  d.immunizationStatus === IMMUNIZATION_STATUSES.NO_VACCINE\r\n                    ? null\r\n                    : d.injectionDate,\r\n              })\r\n        );\r\n        // eslint-disable-next-line no-empty\r\n      } catch (error) {}\r\n      await dispatch(getProfile(data.id));\r\n    }\r\n    setOpenCreate(false);\r\n    reset({});\r\n  };\r\n\r\n  const labels = [\r\n    {\r\n      rowIndex: 0,\r\n      col: [\r\n        {\r\n          name: 'disease',\r\n          label: 'Bệnh:',\r\n          value: immunizationLatest?.disease,\r\n          disabled: true,\r\n        },\r\n        {\r\n          type: 'select',\r\n          name: 'immunizationStatus',\r\n          label: 'Trạng thái tiêm vắc xin:',\r\n          value: immunizationLatest?.immunizationStatus,\r\n          dropdownOptions: statusOptions,\r\n          disabled: true,\r\n        },\r\n        // {\r\n        //   type: 'select',\r\n        //   name: 'vaccine',\r\n        //   label: 'Loại vắc xin:',\r\n        //   value: immunizationLatest?.vaccine,\r\n        //   dropdownOptions: vaccineTypeOptions,\r\n        //   disabled: true,\r\n        // },\r\n        {\r\n          type: 'date-time',\r\n          name: 'injectionDate',\r\n          label: 'Ngày tiêm gần nhất:',\r\n          value: formatToTime(immunizationLatest?.injectionDate),\r\n          disabled: true,\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const ruleOptions = {\r\n    immunizationStatus: {\r\n      validate: () => {\r\n        const immunizationStatus = watch('immunizationStatus');\r\n        const error =\r\n          typeof immunizationStatus !== 'number' ? 'Bắt buộc' : undefined;\r\n        return error || true;\r\n      },\r\n    },\r\n    // vaccine: {\r\n    //   required: 'Bắt buộc',\r\n    // },\r\n    injectionDate: {\r\n      validate: () => {\r\n        const immunizationStatus = watch('immunizationStatus');\r\n        if (\r\n          immunizationStatus !== IMMUNIZATION_STATUSES.NO_RECORD &&\r\n          immunizationStatus !== IMMUNIZATION_STATUSES.NO_VACCINE\r\n        ) {\r\n          const date = watch('injectionDate');\r\n          const error = date\r\n            ? date < new Date(2021, 0, 1)\r\n              ? 'Thời gian phải lớn hơn 01/01/2021'\r\n              : undefined\r\n            : 'Bắt buộc';\r\n          return error || true;\r\n        }\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!openCreate &&\r\n        labels.map((r) => (\r\n          <Flex key={r.rowIndex}>\r\n            {r.col.map((f) => (\r\n              <EditableLabel\r\n                // style props\r\n                key={f.name}\r\n                header={f.label}\r\n                content={f.value}\r\n                // logic props\r\n                name={f.name}\r\n                disabled={f?.disabled}\r\n                type={f?.type}\r\n                dropdownOptions={f?.dropdownOptions}\r\n              />\r\n            ))}\r\n          </Flex>\r\n        ))}\r\n      <Wrapper>\r\n        {openCreate && (\r\n          <Form size='tiny'>\r\n            <Form.Group>\r\n              <Controller\r\n                name='disease'\r\n                control={control}\r\n                defaultValue='Covid-19'\r\n              />\r\n              <Controller\r\n                name='immunizationStatus'\r\n                control={control}\r\n                defaultValue=''\r\n                rules={ruleOptions.immunizationStatus}\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Form.Field\r\n                    fluid\r\n                    search\r\n                    width={3}\r\n                    error={errors.immunizationStatus?.message}\r\n                    label='Trạng thái tiêm vắc xin'\r\n                    control={Select}\r\n                    value={value}\r\n                    options={statusOptions}\r\n                    onChange={(__, { value: v }) => {\r\n                      if (\r\n                        v === IMMUNIZATION_STATUSES.NO_RECORD ||\r\n                        v === IMMUNIZATION_STATUSES.NO_VACCINE\r\n                      ) {\r\n                        // setValue('vaccine', undefined);\r\n                        setValue('injectionDate', null);\r\n                        setReadOnly(true);\r\n                      } else if (readOnly) {\r\n                        setReadOnly(false);\r\n                      }\r\n                      onChange(v);\r\n                    }}\r\n                    onBlur={onBlur}\r\n                  />\r\n                )}\r\n              />\r\n              {/* <Controller\r\n                name=\"vaccine\"\r\n                control={control}\r\n                defaultValue=\"\"\r\n                rules={ruleOptions.vaccine}\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Form.Field\r\n                    fluid\r\n                    search\r\n                    width={3}\r\n                    error={errors.vaccine?.message}\r\n                    label=\"Loại vắc xin\"\r\n                    control={Select}\r\n                    value={value}\r\n                    options={vaccineTypeOptions}\r\n                    onChange={(__, { value: v }) => onChange(v)}\r\n                    onBlur={onBlur}\r\n                  />\r\n                )}\r\n              /> */}\r\n              <Controller\r\n                name='injectionDate'\r\n                control={control}\r\n                defaultValue=''\r\n                rules={ruleOptions.injectionDate}\r\n                render={({ onChange, onBlur, value }) => (\r\n                  <Form.Field\r\n                    fluid\r\n                    width={5}\r\n                    required={!readOnly}\r\n                    disabled={readOnly}\r\n                    error={errors.injectionDate?.message}\r\n                    label='Ngày tiêm gần nhất'\r\n                    control={KeyboardDateTimePicker}\r\n                    disabledDays={[\r\n                      {\r\n                        before: new Date(2021, 0, 1),\r\n                        after: new Date(),\r\n                      },\r\n                    ]}\r\n                    value={value}\r\n                    onChange={(v) => onChange(v)}\r\n                    onBlur={onBlur}\r\n                  />\r\n                )}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        )}\r\n        {!disabled && (\r\n          <Button\r\n            size='mini'\r\n            color='green'\r\n            content='Cập nhật'\r\n            loading={loading}\r\n            onClick={() => {\r\n              if (!openCreate) {\r\n                setOpenCreate(true);\r\n                reset(immunizationLatest);\r\n              } else {\r\n                handleSubmit((d) => onSubmit(d))();\r\n              }\r\n            }}\r\n          />\r\n        )}\r\n        {openCreate && (\r\n          <Button\r\n            size='mini'\r\n            content='Đóng'\r\n            onClick={() => setOpenCreate(false)}\r\n          />\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nMinimizeImmunization.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  data: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    immunizations: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.number,\r\n        disease: PropTypes.string,\r\n        immunizationStatus: PropTypes.number,\r\n        // vaccine: PropTypes.string,\r\n        injectionDate: PropTypes.string,\r\n      })\r\n    ),\r\n  }),\r\n};\r\n\r\nMinimizeImmunization.defaultProps = {\r\n  disabled: false,\r\n  data: {},\r\n};\r\n\r\nexport default MinimizeImmunization;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}