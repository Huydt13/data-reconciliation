{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\infection-chain\\\\components\\\\subject\\\\medical-test\\\\MedicalTestModal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'semantic-ui-react';\nimport ExaminationTable from './ExaminationTable';\nconst MedicalTestModal = props => {\n  var _ref, _subject$fullName, _subject$information;\n  const {\n    open,\n    onClose,\n    subject,\n    examination,\n    handleSubmit,\n    isUpdate,\n    onDelete\n  } = props;\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, (_ref = (_subject$fullName = subject === null || subject === void 0 ? void 0 : subject.fullName) !== null && _subject$fullName !== void 0 ? _subject$fullName : subject === null || subject === void 0 ? void 0 : (_subject$information = subject.information) === null || _subject$information === void 0 ? void 0 : _subject$information.fullName) !== null && _ref !== void 0 ? _ref : 'CHƯA XÁC ĐỊNH'), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExaminationTable, {\n    isUpdate: isUpdate,\n    examination: examination,\n    subject: subject,\n    onSubmit: handleSubmit,\n    onDelete: onDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  })));\n};\nMedicalTestModal.propTypes = {\n  open: PropTypes.bool,\n  isUpdate: PropTypes.bool,\n  onClose: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  onDelete: PropTypes.func,\n  subject: PropTypes.shape({\n    fullName: PropTypes.string\n  }),\n  examination: PropTypes.shape({})\n};\nMedicalTestModal.defaultProps = {\n  open: false,\n  isUpdate: false,\n  onClose: () => {},\n  handleSubmit: () => {},\n  onDelete: () => {},\n  subject: {},\n  examination: {}\n};\nexport default MedicalTestModal;","map":{"version":3,"names":["React","PropTypes","Modal","ExaminationTable","MedicalTestModal","props","_ref","_subject$fullName","_subject$information","open","onClose","subject","examination","handleSubmit","isUpdate","onDelete","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Header","fullName","information","Content","onSubmit","propTypes","bool","func","shape","string","defaultProps"],"sources":["H:/BAKCO/pj/data reconciliation/src/infection-chain/components/subject/medical-test/MedicalTestModal.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from 'semantic-ui-react';\n\nimport ExaminationTable from './ExaminationTable';\n\nconst MedicalTestModal = (props) => {\n  const {\n    open,\n    onClose,\n    subject,\n    examination,\n    handleSubmit,\n    isUpdate,\n    onDelete,\n  } = props;\n\n  return (\n    <Modal open={open} onClose={onClose}>\n      <Modal.Header>\n        {subject?.fullName ?? subject?.information?.fullName ?? 'CHƯA XÁC ĐỊNH'}\n      </Modal.Header>\n      <Modal.Content>\n        <ExaminationTable\n          isUpdate={isUpdate}\n          examination={examination}\n          subject={subject}\n          onSubmit={handleSubmit}\n          onDelete={onDelete}\n        />\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nMedicalTestModal.propTypes = {\n  open: PropTypes.bool,\n  isUpdate: PropTypes.bool,\n  onClose: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  onDelete: PropTypes.func,\n  subject: PropTypes.shape({\n    fullName: PropTypes.string,\n  }),\n  examination: PropTypes.shape({}),\n};\n\nMedicalTestModal.defaultProps = {\n  open: false,\n  isUpdate: false,\n  onClose: () => {},\n  handleSubmit: () => {},\n  onDelete: () => {},\n  subject: {},\n  examination: {},\n};\n\nexport default MedicalTestModal;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,KAAK,QAAQ,mBAAmB;AAEzC,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;EAAA,IAAAC,IAAA,EAAAC,iBAAA,EAAAC,oBAAA;EAClC,MAAM;IACJC,IAAI;IACJC,OAAO;IACPC,OAAO;IACPC,WAAW;IACXC,YAAY;IACZC,QAAQ;IACRC;EACF,CAAC,GAAGV,KAAK;EAET,oBACEL,KAAA,CAAAgB,aAAA,CAACd,KAAK;IAACO,IAAI,EAAEA,IAAK;IAACC,OAAO,EAAEA,OAAQ;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClCtB,KAAA,CAAAgB,aAAA,CAACd,KAAK,CAACqB,MAAM;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,IAAAhB,IAAA,IAAAC,iBAAA,GACVI,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEa,QAAQ,cAAAjB,iBAAA,cAAAA,iBAAA,GAAII,OAAO,aAAPA,OAAO,wBAAAH,oBAAA,GAAPG,OAAO,CAAEc,WAAW,cAAAjB,oBAAA,uBAApBA,oBAAA,CAAsBgB,QAAQ,cAAAlB,IAAA,cAAAA,IAAA,GAAI,eAAe,CAC1D,eACfN,KAAA,CAAAgB,aAAA,CAACd,KAAK,CAACwB,OAAO;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACZtB,KAAA,CAAAgB,aAAA,CAACb,gBAAgB;IACfW,QAAQ,EAAEA,QAAS;IACnBF,WAAW,EAAEA,WAAY;IACzBD,OAAO,EAAEA,OAAQ;IACjBgB,QAAQ,EAAEd,YAAa;IACvBE,QAAQ,EAAEA,QAAS;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACnB,CACY,CACV;AAEZ,CAAC;AAEDlB,gBAAgB,CAACwB,SAAS,GAAG;EAC3BnB,IAAI,EAAER,SAAS,CAAC4B,IAAI;EACpBf,QAAQ,EAAEb,SAAS,CAAC4B,IAAI;EACxBnB,OAAO,EAAET,SAAS,CAAC6B,IAAI;EACvBjB,YAAY,EAAEZ,SAAS,CAAC6B,IAAI;EAC5Bf,QAAQ,EAAEd,SAAS,CAAC6B,IAAI;EACxBnB,OAAO,EAAEV,SAAS,CAAC8B,KAAK,CAAC;IACvBP,QAAQ,EAAEvB,SAAS,CAAC+B;EACtB,CAAC,CAAC;EACFpB,WAAW,EAAEX,SAAS,CAAC8B,KAAK,CAAC,CAAC,CAAC;AACjC,CAAC;AAED3B,gBAAgB,CAAC6B,YAAY,GAAG;EAC9BxB,IAAI,EAAE,KAAK;EACXK,QAAQ,EAAE,KAAK;EACfJ,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAC;EACjBG,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAC;EACtBE,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC;EAClBJ,OAAO,EAAE,CAAC,CAAC;EACXC,WAAW,EAAE,CAAC;AAChB,CAAC;AAED,eAAeR,gBAAgB"},"metadata":{},"sourceType":"module"}