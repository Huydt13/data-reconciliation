{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\contact\\\\components\\\\locations\\\\estate\\\\EstateModal.js\";\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport Geocode from 'react-geocode';\nimport locations from 'app/assets/mock/locations.json';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createLocation, updateEstate } from 'contact/actions/contact';\nimport { LocationType } from 'infection-chain/utils/constants';\nimport LocationSection from 'chain/components/LocationSection';\nconst EstateModal = props => {\n  const {\n    open,\n    onClose,\n    onRefresh,\n    onSelect,\n    data\n  } = props;\n  const dispatch = useDispatch();\n  const updateLoading = useSelector(s => s.contact.updateEstateLoading);\n  const createLoading = useSelector(s => s.contact.createLocationLoading);\n  const [loading, setLoading] = useState(false);\n  const [selecting, setSelecting] = useState({});\n  useEffect(() => {\n    setSelecting(data);\n  }, [data]);\n  const isUpdate = Boolean(data === null || data === void 0 ? void 0 : data.id);\n  const handleSubmit = async () => {\n    let lat;\n    let lng;\n    if (selecting.provinceValue && selecting.wardValue && selecting.districtValue && selecting.streetHouseNumber) {\n      var _selecting$contactNam, _selecting$contactPho;\n      setLoading(true);\n      const provinceLabel = locations.find(p => p.value === selecting.provinceValue).label;\n      const districtLabel = locations.find(p => p.value === selecting.provinceValue).districts.find(d => d.value === selecting.districtValue).label;\n      const wardLabel = locations.find(p => p.value === selecting.provinceValue).districts.find(d => d.value === selecting.districtValue).wards.find(w => w.value === selecting.wardValue).label;\n      const house = selecting.streetHouseNumber;\n      const searchAddress = `${house}, ${wardLabel}, ${districtLabel}, ${provinceLabel}`;\n      await Geocode.fromAddress(searchAddress).then(response => {\n        lat = response.results[0].geometry.location.lat;\n        lng = response.results[0].geometry.location.lng;\n      });\n      setLoading(false);\n      await dispatch(isUpdate ? updateEstate({\n        id: selecting.id,\n        name: selecting.name,\n        lat,\n        lng\n      }) : createLocation({\n        name: selecting.name,\n        contactName: (_selecting$contactNam = selecting === null || selecting === void 0 ? void 0 : selecting.contactName) !== null && _selecting$contactNam !== void 0 ? _selecting$contactNam : undefined,\n        contactPhoneNumber: (_selecting$contactPho = selecting === null || selecting === void 0 ? void 0 : selecting.contactPhoneNumber) !== null && _selecting$contactPho !== void 0 ? _selecting$contactPho : undefined,\n        address: selecting,\n        lat,\n        lng,\n        locationType: LocationType.LOCATION\n      }));\n      onClose();\n      onRefresh();\n    } else {\n      toast.warn('Chưa đủ thông tin!');\n    }\n  };\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, isUpdate ? 'Chỉnh sửa thông tin nơi tiếp xúc' : 'Tạo mới nơi tiếp xúc'), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LocationSection, {\n    required: true,\n    notFetchApi: true,\n    data: data,\n    onChange: d => setSelecting(initial => ({\n      ...initial,\n      ...d\n    })),\n    onSelect: isUpdate ? null : onSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, isUpdate ? /*#__PURE__*/React.createElement(Button, {\n    color: \"violet\",\n    labelPosition: \"right\",\n    icon: \"sync\",\n    content: \"C\\u1EADp nh\\u1EADt\",\n    loading: createLoading || updateLoading || loading,\n    disabled: createLoading || updateLoading || loading,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Button, {\n    color: \"green\",\n    labelPosition: \"right\",\n    icon: \"plus\",\n    content: \"T\\u1EA1o m\\u1EDBi\",\n    loading: createLoading || updateLoading || loading,\n    disabled: createLoading || updateLoading || loading,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })));\n};\nEstateModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({}).isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  onSelect: PropTypes.func\n};\nEstateModal.defaultProps = {\n  onSelect: () => {}\n};\nexport default EstateModal;","map":{"version":3,"names":["React","useEffect","useState","PropTypes","Button","Modal","toast","Geocode","locations","useDispatch","useSelector","createLocation","updateEstate","LocationType","LocationSection","EstateModal","props","open","onClose","onRefresh","onSelect","data","dispatch","updateLoading","s","contact","updateEstateLoading","createLoading","createLocationLoading","loading","setLoading","selecting","setSelecting","isUpdate","Boolean","id","handleSubmit","lat","lng","provinceValue","wardValue","districtValue","streetHouseNumber","_selecting$contactNam","_selecting$contactPho","provinceLabel","find","p","value","label","districtLabel","districts","d","wardLabel","wards","w","house","searchAddress","fromAddress","then","response","results","geometry","location","name","contactName","undefined","contactPhoneNumber","address","locationType","LOCATION","warn","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Header","Content","required","notFetchApi","onChange","initial","Actions","color","labelPosition","icon","content","disabled","onClick","propTypes","bool","isRequired","func","shape","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/contact/components/locations/estate/EstateModal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Modal } from 'semantic-ui-react';\n\nimport { toast } from 'react-toastify';\nimport Geocode from 'react-geocode';\nimport locations from 'app/assets/mock/locations.json';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createLocation, updateEstate } from 'contact/actions/contact';\n\nimport { LocationType } from 'infection-chain/utils/constants';\nimport LocationSection from 'chain/components/LocationSection';\n\nconst EstateModal = (props) => {\n  const { open, onClose, onRefresh, onSelect, data } = props;\n\n  const dispatch = useDispatch();\n  const updateLoading = useSelector((s) => s.contact.updateEstateLoading);\n  const createLoading = useSelector((s) => s.contact.createLocationLoading);\n\n  const [loading, setLoading] = useState(false);\n  const [selecting, setSelecting] = useState({});\n  useEffect(() => {\n    setSelecting(data);\n  }, [data]);\n\n  const isUpdate = Boolean(data?.id);\n  const handleSubmit = async () => {\n    let lat;\n    let lng;\n    if (\n      selecting.provinceValue &&\n      selecting.wardValue &&\n      selecting.districtValue &&\n      selecting.streetHouseNumber\n    ) {\n      setLoading(true);\n      const provinceLabel = locations.find(\n        (p) => p.value === selecting.provinceValue,\n      ).label;\n      const districtLabel = locations\n        .find((p) => p.value === selecting.provinceValue)\n        .districts.find((d) => d.value === selecting.districtValue).label;\n      const wardLabel = locations\n        .find((p) => p.value === selecting.provinceValue)\n        .districts.find((d) => d.value === selecting.districtValue)\n        .wards.find((w) => w.value === selecting.wardValue).label;\n      const house = selecting.streetHouseNumber;\n      const searchAddress = `${house}, ${wardLabel}, ${districtLabel}, ${provinceLabel}`;\n      await Geocode.fromAddress(searchAddress).then((response) => {\n        lat = response.results[0].geometry.location.lat;\n        lng = response.results[0].geometry.location.lng;\n      });\n      setLoading(false);\n\n      await dispatch(\n        isUpdate\n          ? updateEstate({\n              id: selecting.id,\n              name: selecting.name,\n              lat,\n              lng,\n            })\n          : createLocation({\n              name: selecting.name,\n              contactName: selecting?.contactName ?? undefined,\n              contactPhoneNumber: selecting?.contactPhoneNumber ?? undefined,\n              address: selecting,\n              lat,\n              lng,\n              locationType: LocationType.LOCATION,\n            }),\n      );\n      onClose();\n      onRefresh();\n    } else {\n      toast.warn('Chưa đủ thông tin!');\n    }\n  };\n  return (\n    <Modal open={open} onClose={onClose}>\n      <Modal.Header>\n        {isUpdate ? 'Chỉnh sửa thông tin nơi tiếp xúc' : 'Tạo mới nơi tiếp xúc'}\n      </Modal.Header>\n      <Modal.Content>\n        <LocationSection\n          required\n          notFetchApi\n          data={data}\n          onChange={(d) => setSelecting((initial) => ({ ...initial, ...d }))}\n          onSelect={isUpdate ? null : onSelect}\n        />\n      </Modal.Content>\n      <Modal.Actions>\n        {isUpdate ? (\n          <Button\n            color=\"violet\"\n            labelPosition=\"right\"\n            icon=\"sync\"\n            content=\"Cập nhật\"\n            loading={createLoading || updateLoading || loading}\n            disabled={createLoading || updateLoading || loading}\n            onClick={handleSubmit}\n          />\n        ) : (\n          <Button\n            color=\"green\"\n            labelPosition=\"right\"\n            icon=\"plus\"\n            content=\"Tạo mới\"\n            loading={createLoading || updateLoading || loading}\n            disabled={createLoading || updateLoading || loading}\n            onClick={handleSubmit}\n          />\n        )}\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nEstateModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  data: PropTypes.shape({}).isRequired,\n  onRefresh: PropTypes.func.isRequired,\n  onSelect: PropTypes.func,\n};\n\nEstateModal.defaultProps = {\n  onSelect: () => {},\n};\n\nexport default EstateModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}