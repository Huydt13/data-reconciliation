{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\medical-test\\\\components\\\\codes\\\\CreateCodeModal.js\";\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button, Modal, Select } from 'semantic-ui-react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport SelectYear from 'app/components/shared/SelectYear';\nimport moment from 'moment';\nconst CreateCodeModal = props => {\n  const {\n    open,\n    onClose,\n    onSubmit\n  } = props;\n  const {\n    watch,\n    setValue,\n    register,\n    getValues\n  } = useForm();\n  useEffect(() => {\n    register({\n      name: 'unitId'\n    });\n    register({\n      name: 'unitCode'\n    });\n    register({\n      name: 'diseaseCode'\n    });\n    register({\n      name: 'year'\n    });\n    setValue('year', moment().format('YYYY'));\n  }, [register, setValue]);\n  const {\n    prefixList,\n    diseaseList,\n    createMedicalTestCodeLoading\n  } = useSelector(state => state.medicalTest);\n  const allowToSubmit = watch('unitId') && watch('diseaseCode') && watch('quantity');\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"T\\u1EA1o m\\xE3 x\\xE9t nghi\\u1EC7m\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    loading: createMedicalTestCodeLoading,\n    onSubmit: () => onSubmit(getValues()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    search: true,\n    deburr: true,\n    clearable: true,\n    label: \"T\\xEAn c\\u01A1 s\\u1EDF\",\n    control: Select,\n    value: watch('unitId') || '',\n    options: prefixList.map(p => ({\n      key: p.id,\n      text: p.name,\n      value: p.id\n    })),\n    onChange: (e, _ref) => {\n      let {\n        value\n      } = _ref;\n      setValue('unitId', value);\n      setValue('unitCode', prefixList.find(p => p.id === value).code);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    search: true,\n    deburr: true,\n    clearable: true,\n    label: \"Lo\\u1EA1i b\\u1EC7nh\",\n    control: Select,\n    options: diseaseList.map(c => ({\n      key: c.id,\n      text: `${c.name} - Mã bệnh: ${c.code}`,\n      value: c.code\n    })),\n    onChange: (e, _ref2) => {\n      let {\n        value\n      } = _ref2;\n      return setValue('diseaseCode', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    type: \"number\",\n    control: Input,\n    label: \"S\\u1ED1 l\\u01B0\\u1EE3ng\",\n    name: \"quantity\",\n    input: {\n      ref: register\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SelectYear, {\n    onChange: year => setValue('year', year),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    disabled: !allowToSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"X\\xE1c nh\\u1EADn\"))));\n};\nCreateCodeModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  initialData: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    notes: PropTypes.string,\n    address: PropTypes.shape({\n      floor: PropTypes.string,\n      block: PropTypes.string,\n      streetHouseNumber: PropTypes.string,\n      provinceValue: PropTypes.string,\n      districtValue: PropTypes.string,\n      wardValue: PropTypes.string\n    })\n  }),\n  onSubmit: PropTypes.func\n};\nCreateCodeModal.defaultProps = {\n  initialData: {},\n  onSubmit: () => {}\n};\nexport default CreateCodeModal;","map":{"version":3,"names":["React","useEffect","PropTypes","Form","Input","Button","Modal","Select","useForm","useSelector","SelectYear","moment","CreateCodeModal","props","open","onClose","onSubmit","watch","setValue","register","getValues","name","format","prefixList","diseaseList","createMedicalTestCodeLoading","state","medicalTest","allowToSubmit","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Header","Content","loading","Group","widths","Field","required","search","deburr","clearable","label","control","value","options","map","p","key","id","text","onChange","e","_ref","find","code","c","_ref2","type","input","ref","year","primary","disabled","propTypes","bool","isRequired","func","initialData","shape","string","notes","address","floor","block","streetHouseNumber","provinceValue","districtValue","wardValue","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/medical-test/components/codes/CreateCodeModal.js"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Form,\n  Input,\n  Button,\n  Modal,\n  Select,\n} from 'semantic-ui-react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector } from 'react-redux';\nimport SelectYear from 'app/components/shared/SelectYear';\nimport moment from 'moment';\n\nconst CreateCodeModal = (props) => {\n  const { open, onClose, onSubmit } = props;\n  const {\n    watch,\n    setValue,\n    register,\n    getValues,\n  } = useForm();\n\n  useEffect(() => {\n    register({ name: 'unitId' });\n    register({ name: 'unitCode' });\n    register({ name: 'diseaseCode' });\n    register({ name: 'year' });\n    setValue('year', moment().format('YYYY'));\n  }, [register, setValue]);\n\n  const { prefixList, diseaseList, createMedicalTestCodeLoading } = useSelector((state) => state.medicalTest);\n\n  const allowToSubmit = watch('unitId') && watch('diseaseCode') && watch('quantity');\n\n  return (\n    <Modal open={open} onClose={onClose}>\n      <Modal.Header>Tạo mã xét nghiệm</Modal.Header>\n      <Modal.Content>\n        <Form loading={createMedicalTestCodeLoading} onSubmit={() => onSubmit(getValues())}>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              required\n              search\n              deburr\n              clearable\n              label=\"Tên cơ sở\"\n              control={Select}\n              value={watch('unitId') || ''}\n              options={prefixList.map((p) => ({\n                key: p.id,\n                text: p.name,\n                value: p.id,\n              }))}\n              onChange={(e, { value }) => {\n                setValue('unitId', value);\n                setValue(\n                  'unitCode',\n                  prefixList.find((p) => p.id === value).code,\n                );\n              }}\n            />\n            <Form.Field\n              required\n              search\n              deburr\n              clearable\n              label=\"Loại bệnh\"\n              control={Select}\n              options={diseaseList.map((c) => ({\n                key: c.id,\n                text: `${c.name} - Mã bệnh: ${c.code}`,\n                value: c.code,\n              }))}\n              onChange={(e, { value }) => setValue('diseaseCode', value)}\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              required\n              type=\"number\"\n              control={Input}\n              label=\"Số lượng\"\n              name=\"quantity\"\n              input={{ ref: register }}\n            />\n            <SelectYear onChange={(year) => setValue('year', year)} />\n          </Form.Group>\n          <Button primary disabled={!allowToSubmit}>\n            Xác nhận\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nCreateCodeModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  initialData: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    notes: PropTypes.string,\n    address: PropTypes.shape({\n      floor: PropTypes.string,\n      block: PropTypes.string,\n      streetHouseNumber: PropTypes.string,\n      provinceValue: PropTypes.string,\n      districtValue: PropTypes.string,\n      wardValue: PropTypes.string,\n    }),\n  }),\n  onSubmit: PropTypes.func,\n};\n\nCreateCodeModal.defaultProps = {\n  initialData: {},\n  onSubmit: () => {},\n};\n\nexport default CreateCodeModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}