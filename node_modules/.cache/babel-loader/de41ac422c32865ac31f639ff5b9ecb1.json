{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\medical-test\\\\components\\\\assigns\\\\ImportPcrModal.js\";\n/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable arrow-parens */\n/* eslint-disable consistent-return */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-await-in-loop */\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable camelcase */\n/* eslint-disable react/prop-types */\n/* eslint-disable no-param-reassign */\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment';\nimport xlsx from 'xlsx';\nimport { FiEdit3 } from 'react-icons/fi';\nimport { Modal, Button, Message, Icon, Header, Tab, List, Dimmer, Loader, Menu } from 'semantic-ui-react';\nimport { DataTable } from 'app/components/shared';\nimport ProfileSection from 'medical-test/components/quick-test/ProfileSection';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfileWithouDispatch, updateProfile, updateImmunizationForProfile, createImmunizationForProfile } from 'profile/actions/profile';\nimport { getSamplingPlaces, getExaminationTypes } from 'medical-test/actions/medical-test';\nimport { formatProfileRequest, downloadFile, getExaminationError, formatAddressToString } from 'app/utils/helpers';\nimport locations from 'app/assets/mock/locations';\nimport excelTemplate from 'app/assets/excels/Mẫu import PCR.xlsx';\nimport { IMMUNIZATION_STATUSES } from 'profile/utils/constants';\nimport { createPcrExamination } from 'medical-test/actions/transport';\nimport { defaultProfileValue } from 'profile/utils/helpers';\nconst Wrapper = styled.div`\n  position: relative;\n`;\nconst MenuWrapper = styled.div`\n  margin-top: 15px;\n  & .tab {\n    padding-top: 0.1em !important;\n  }\n  & .fVDZkI {\n    margin-top: 0 !important;\n  }\n`;\nconst startWithRow = 2;\nconst steps = {\n  downloadTemplate: 0,\n  reviewData: 1,\n  result: 2\n};\nconst ImportPcrModal = _ref => {\n  var _conflictProfile$exis2, _conflictProfile$exis3;\n  let {\n    open,\n    onClose: onCloseProps\n  } = _ref;\n  const [step, setStep] = useState(steps.downloadTemplate);\n  const [disabled, setDisabled] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const method = useForm();\n  const fileInputRef = useRef();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [informationData, setInformationData] = useState(undefined);\n  const [readData, setReadData] = useState([]);\n  const [errorData, setErrorData] = useState([]);\n  const [uploadResult, setUploadResult] = useState([]);\n  const [conflictProfile, setConflictProfile] = useState(undefined);\n  const dispatch = useDispatch();\n  const {\n    examinationTypeList,\n    samplingPlaceList,\n    createImmunizationForProfileLoading,\n    updateImmunizationForProfileLoading\n  } = useSelector(state => state.medicalTest);\n  const {\n    updateProfileLoading\n  } = useSelector(state => state.profile);\n  const exception = useMemo(() => ['#'], []);\n  const empty = useMemo(() => ['__EMPTY', 'Mã Tổng Hợp', 'Hình thức lấy mẫu'], []);\n  const immunizationStatusOptions = [{\n    key: 0,\n    value: IMMUNIZATION_STATUSES.NO_RECORD,\n    text: 'Chưa rõ'\n  }, {\n    key: 1,\n    value: IMMUNIZATION_STATUSES.NO_VACCINE,\n    text: 'Chưa tiêm'\n  }, {\n    key: 2,\n    value: IMMUNIZATION_STATUSES.ONE_SHOT,\n    text: 'Tiêm 1 mũi'\n  }, {\n    key: 3,\n    value: IMMUNIZATION_STATUSES.TWO_SHOT,\n    text: 'Tiêm 2 mũi'\n  }, {\n    key: 4,\n    value: IMMUNIZATION_STATUSES.MORE_THAN_TWO_SHOT,\n    text: 'Tiêm trên 2 mũi'\n  }];\n  const errorCode = {\n    NULL_UNIT: 'Lỗi: không tìm thấy đơn vị',\n    CODE_HAS_BEEN_USED: 'Lỗi: Mã đã được dùng',\n    CODE_HAS_BEEN_ISSUED: 'Lỗi: Mã chưa được cấp',\n    NULL_DISEASE: 'Lỗi: Không xác định loại bệnh',\n    NULL_EXAM_TYPE: 'Lỗi: Không xác định loại xét nghiệm',\n    NULL_DISEASE_SAMPLE: 'Lỗi: Không xác định mẫu bệnh phẩm',\n    SINGLE_PROFILE_MODIFY_FAILED: 'Lỗi: Tạo/Chỉnh sửa hồ sơ đơn thất bại',\n    GROUP_PROFILE_MODIFY_FAILED: 'Lỗi: Tạo/Chỉnh sủa hồ sơ gộp thất bại',\n    NULL_SAMPLING_PLACE: 'Lỗi: Nơi lấy mẫu không hợp lệ',\n    OVER_DATE_TAKEN: 'Lỗi: Ngày lấy mẫu đã quá 7 ngày'\n  };\n  const informationModels = useMemo(() => [{\n    row: 2,\n    column: 4,\n    name: 'nameOfImporter'\n  }, {\n    row: 2,\n    column: 12,\n    name: 'phoneNumberOfImporter'\n  }, {\n    row: 2,\n    column: 16,\n    name: 'unitOfImporter'\n  }, {\n    row: 6,\n    column: 1,\n    name: 'feeType',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc phải chọn loại hình thu phí';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 5,\n    name: 'dateTaken',\n    formatter: (__, value) => ({\n      ...__.dateTaken,\n      day: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      const day = moment().format('DD');\n      if (!value) {\n        return 'Bắt buộc phải nhập ngày lấy mẫu';\n      }\n      if (parsed > 31 || parsed < 0) {\n        return 'Ngày bắt đầu lấy mẫu không đúng định dạng (31 > ngày > 0)';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 6,\n    name: 'dateTaken',\n    formatter: (__, value) => ({\n      ...__.dateTaken,\n      month: value - 1\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      const month = moment().format('MM');\n      if (!value) {\n        return 'Bắt buộc phải nhập tháng lấy mẫu';\n      }\n      if (parsed > parseInt(month, 10) || parsed < 0) {\n        return `Tháng bắt đầu lấy mẫu không đúng định dạng (${month} > tháng > 0)`;\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 7,\n    name: 'dateTaken',\n    formatter: (__, value) => ({\n      ...__.dateTaken,\n      year: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      const year = moment().format('YYYY');\n      if (!value) {\n        return 'Bắt buộc phải nhập năm lấy mẫu';\n      }\n      if (parsed > parseInt(year, 10) || parsed < 1921) {\n        return `Năm bắt đầu lấy mẫu không đúng định dạng (${year} > năm > 1921)`;\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 8,\n    name: 'dateTaken',\n    formatter: (__, value) => ({\n      ...__.dateTaken,\n      hour: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      if (!value) {\n        return 'Bắt buộc phải nhập giờ lấy mẫu';\n      }\n      if (parsed > 24 || parsed < 1) {\n        return 'Giờ bắt đầu lấy mẫu không đúng định dạng (24 > giờ > 1)';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 9,\n    name: 'dateTaken',\n    formatter: (__, value) => ({\n      ...__.dateTaken,\n      minute: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      if (!value) {\n        return 'Bắt buộc phải nhập thời gian lấy mẫu';\n      }\n      if (parsed > 60 || parsed < 0) {\n        return 'Phút bắt đầu lấy mẫu không đúng định dạng (60 > phút > 0)';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 11,\n    name: 'addressInVietnam',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc phải nhập địa chỉ chi tiết nơi lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 13,\n    name: 'province',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc phải nhập tỉnh/thành nơi lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 16,\n    name: 'district',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc phải nhập quận/huyện nơi lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 17,\n    name: 'ward',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc phải nhập phường/xã nơi lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 18,\n    name: 'quarter',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc phải nhập khu phố/ấp nơi lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    row: 6,\n    column: 19,\n    name: 'quarterGroup',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc phải nhập tổ dân phô nơi lấy mẫu';\n      }\n      return false;\n    }\n  }], []);\n  const dataModels = useMemo(() => [{\n    header: 'Mã Tổng Hợp',\n    assign: 'code',\n    formatter: (__, value) => value.toUpperCase().trim(),\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập mã tổng hợp';\n      }\n      return false;\n    }\n  }, {\n    header: 'Hình thức lấy mẫu',\n    assign: 'sampleForm',\n    formatter: (__, value) => `${value}`,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập hình thức lấy mẫu';\n      }\n      return false;\n    }\n  }, {\n    header: 'Mã TT (*)',\n    assign: 'index',\n    formatter: (__, value) => value.toString().trim(),\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập mã thứ tự';\n      }\n      return false;\n    }\n  }, {\n    header: 'Họ và tên (*)',\n    assign: 'name',\n    formatter: (__, value) => value.toUpperCase().trim(),\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập họ và tên';\n      }\n      return false;\n    }\n  }, {\n    encoding: false,\n    header: 'Ng%E0ysinh',\n    assign: 'dateOfBirth',\n    formatter: (__, value) => ({\n      ...__.dateOfBirth,\n      day: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      if (parsed > 31 || parsed < 0) {\n        return 'Ngày sinh không đúng định dạng (31 > ngày > 0)';\n      }\n      return false;\n    }\n  }, {\n    encoding: false,\n    header: 'Th%E1ngsinh',\n    assign: 'dateOfBirth',\n    formatter: (__, value) => ({\n      ...__.dateOfBirth,\n      month: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      if (parsed > 12 || parsed < 0) {\n        return 'Tháng sinh không đúng định dạng (12 > tháng > 0)';\n      }\n      return false;\n    }\n  }, {\n    encoding: false,\n    header: 'N%u0103msinh%20%28*%29',\n    assign: 'dateOfBirth',\n    formatter: (__, value) => ({\n      ...__.dateOfBirth,\n      year: value\n    }),\n    validate: (__, value) => {\n      const parsed = parseInt(value, 10);\n      const year = moment().format('YYYY');\n      if (!value) {\n        return 'Bắt buộc phải nhập năm sinh';\n      }\n      if (parsed > parseInt(year, 10) || parsed < 1921) {\n        return `Năm sinh không đúng định dạng (${year} > năm > 1921)`;\n      }\n      return false;\n    }\n  }, {\n    encoding: false,\n    header: 'Gi%u1EDBit%EDnh%20%28*%29',\n    assign: 'gender',\n    formatter: (__, value) => value.toUpperCase().includes('NAM') ? 1 : value.toUpperCase().includes('KHÁC') ? 2 : 0,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập giới tính';\n      }\n      return false;\n    }\n  }, {\n    header: 'Số ĐT (*)',\n    assign: 'phoneNumber',\n    formatter: (__, value) => typeof value === 'number' ? `0${value}` : value,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập số điện thoại';\n      }\n      return false;\n    }\n  }, {\n    header: 'Tiêm vắc xin (*)',\n    assign: 'vaccinationStatus',\n    formatter: (__, value) => {\n      const status = immunizationStatusOptions.find(p => p.text.toUpperCase() === value.toUpperCase());\n      return status === null || status === void 0 ? void 0 : status.value;\n    },\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc chọn trạng thái tiêm vắc xin';\n      }\n      const status = immunizationStatusOptions.find(p => p.text.toUpperCase() === value.toUpperCase());\n      if (!status) {\n        return 'Trạng thái tiêm vắc xin không đúng định dạng';\n      }\n      return false;\n    }\n  }, {\n    header: 'Ngày tiêm gần nhất',\n    assign: 'lastInjectionDate',\n    formatter: (__, value) => moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n    validate: (obj, value) => {\n      if (typeof obj.immunizationStatus === 'number') {\n        if (!value && obj.immunizationStatus >= IMMUNIZATION_STATUSES.ONE_SHOT) {\n          return 'Bắt buộc nhập ngày tiêm (mũi 1)';\n        }\n        const date = moment(value, 'DD/MM/YYYY');\n        const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n        const afterDate = moment().endOf('day');\n        if (date > afterDate || date < beforeDate) {\n          return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format('DD/MM/YYYY')} đến ${afterDate.format('DD/MM/YYYY')}`;\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Địa chỉ chi tiết (*)',\n    assign: 'streetHouseNumber',\n    formatter: (__, value) => value.toString().trim(),\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập họ và tên';\n      }\n      return false;\n    }\n  }, {\n    header: 'Tỉnh/Thành (*)',\n    assign: 'provinceValue',\n    formatter: (__, value) => {\n      var _locations$find;\n      return locations === null || locations === void 0 ? void 0 : (_locations$find = locations.find(p => {\n        var _p$label, _p$label$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$label = p.label) === null || _p$label === void 0 ? void 0 : (_p$label$toLowerCase = _p$label.toLowerCase()) === null || _p$label$toLowerCase === void 0 ? void 0 : _p$label$toLowerCase.includes(`${value}`.toLowerCase());\n      })) === null || _locations$find === void 0 ? void 0 : _locations$find.value;\n    },\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập tỉnh/thành';\n      }\n      const province = locations === null || locations === void 0 ? void 0 : locations.find(p => {\n        var _p$label2, _p$label2$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$label2 = p.label) === null || _p$label2 === void 0 ? void 0 : (_p$label2$toLowerCase = _p$label2.toLowerCase()) === null || _p$label2$toLowerCase === void 0 ? void 0 : _p$label2$toLowerCase.includes(`${value}`.toLowerCase());\n      });\n      if (!province) {\n        return 'Tỉnh/Thành không hợp lệ';\n      }\n      return false;\n    }\n  }, {\n    header: 'Quận/Huyện (*)',\n    assign: 'districtValue',\n    formatter: (__, value) => {\n      var _locations$find2, _locations$find2$dist, _locations$find2$dist2;\n      return locations === null || locations === void 0 ? void 0 : (_locations$find2 = locations.find(p => {\n        var _p$value, _p$value$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$value = p.value) === null || _p$value === void 0 ? void 0 : (_p$value$toLowerCase = _p$value.toLowerCase()) === null || _p$value$toLowerCase === void 0 ? void 0 : _p$value$toLowerCase.includes(`${__.provinceValue}`.toLowerCase());\n      })) === null || _locations$find2 === void 0 ? void 0 : (_locations$find2$dist = _locations$find2.districts) === null || _locations$find2$dist === void 0 ? void 0 : (_locations$find2$dist2 = _locations$find2$dist.find(d => {\n        var _d$label, _d$label$toLowerCase;\n        return d === null || d === void 0 ? void 0 : (_d$label = d.label) === null || _d$label === void 0 ? void 0 : (_d$label$toLowerCase = _d$label.toLowerCase()) === null || _d$label$toLowerCase === void 0 ? void 0 : _d$label$toLowerCase.includes(`${value}`.toLowerCase());\n      })) === null || _locations$find2$dist2 === void 0 ? void 0 : _locations$find2$dist2.value;\n    },\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập quận/huyện';\n      }\n      if (__ === null || __ === void 0 ? void 0 : __.provinceValue) {\n        var _locations$find3, _locations$find3$dist;\n        const district = locations === null || locations === void 0 ? void 0 : (_locations$find3 = locations.find(p => {\n          var _p$value2, _p$value2$toLowerCase;\n          return (_p$value2 = p.value) === null || _p$value2 === void 0 ? void 0 : (_p$value2$toLowerCase = _p$value2.toLowerCase()) === null || _p$value2$toLowerCase === void 0 ? void 0 : _p$value2$toLowerCase.includes(`${__.provinceValue}`.toLowerCase());\n        })) === null || _locations$find3 === void 0 ? void 0 : (_locations$find3$dist = _locations$find3.districts) === null || _locations$find3$dist === void 0 ? void 0 : _locations$find3$dist.find(d => {\n          var _d$label2, _d$label2$toLowerCase;\n          return (_d$label2 = d.label) === null || _d$label2 === void 0 ? void 0 : (_d$label2$toLowerCase = _d$label2.toLowerCase()) === null || _d$label2$toLowerCase === void 0 ? void 0 : _d$label2$toLowerCase.includes(`${value}`.toLowerCase());\n        });\n        if (!district) {\n          return 'Quận/Huyện không hợp lệ';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Phường/Xã (*)',\n    assign: 'wardValue',\n    formatter: (__, value) => {\n      var _locations$find4, _locations$find4$dist, _locations$find4$dist2, _locations$find4$dist3, _locations$find4$dist4;\n      return locations === null || locations === void 0 ? void 0 : (_locations$find4 = locations.find(p => {\n        var _p$value3, _p$value3$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$value3 = p.value) === null || _p$value3 === void 0 ? void 0 : (_p$value3$toLowerCase = _p$value3.toLowerCase()) === null || _p$value3$toLowerCase === void 0 ? void 0 : _p$value3$toLowerCase.includes(`${__.provinceValue}`.toLowerCase());\n      })) === null || _locations$find4 === void 0 ? void 0 : (_locations$find4$dist = _locations$find4.districts) === null || _locations$find4$dist === void 0 ? void 0 : (_locations$find4$dist2 = _locations$find4$dist.find(d => {\n        var _d$value, _d$value$toLowerCase;\n        return d === null || d === void 0 ? void 0 : (_d$value = d.value) === null || _d$value === void 0 ? void 0 : (_d$value$toLowerCase = _d$value.toLowerCase()) === null || _d$value$toLowerCase === void 0 ? void 0 : _d$value$toLowerCase.includes(`${__.districtValue}`.toLowerCase());\n      })) === null || _locations$find4$dist2 === void 0 ? void 0 : (_locations$find4$dist3 = _locations$find4$dist2.wards) === null || _locations$find4$dist3 === void 0 ? void 0 : (_locations$find4$dist4 = _locations$find4$dist3.find(d => {\n        var _d$label3, _d$label3$toLowerCase;\n        return d === null || d === void 0 ? void 0 : (_d$label3 = d.label) === null || _d$label3 === void 0 ? void 0 : (_d$label3$toLowerCase = _d$label3.toLowerCase()) === null || _d$label3$toLowerCase === void 0 ? void 0 : _d$label3$toLowerCase.includes(`${value}`.toLowerCase());\n      })) === null || _locations$find4$dist4 === void 0 ? void 0 : _locations$find4$dist4.value;\n    },\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập phường/xã';\n      }\n      if ((__ === null || __ === void 0 ? void 0 : __.provinceValue) && (__ === null || __ === void 0 ? void 0 : __.districtValue)) {\n        var _locations$find5, _locations$find5$dist, _locations$find5$dist2, _locations$find5$dist3;\n        const ward = locations === null || locations === void 0 ? void 0 : (_locations$find5 = locations.find(p => {\n          var _p$value4, _p$value4$toLowerCase;\n          return p === null || p === void 0 ? void 0 : (_p$value4 = p.value) === null || _p$value4 === void 0 ? void 0 : (_p$value4$toLowerCase = _p$value4.toLowerCase()) === null || _p$value4$toLowerCase === void 0 ? void 0 : _p$value4$toLowerCase.includes(`${__.provinceValue}`.toLowerCase());\n        })) === null || _locations$find5 === void 0 ? void 0 : (_locations$find5$dist = _locations$find5.districts) === null || _locations$find5$dist === void 0 ? void 0 : (_locations$find5$dist2 = _locations$find5$dist.find(d => {\n          var _d$value2, _d$value2$toLowerCase;\n          return d === null || d === void 0 ? void 0 : (_d$value2 = d.value) === null || _d$value2 === void 0 ? void 0 : (_d$value2$toLowerCase = _d$value2.toLowerCase()) === null || _d$value2$toLowerCase === void 0 ? void 0 : _d$value2$toLowerCase.includes(`${__.districtValue}`.toLowerCase());\n        })) === null || _locations$find5$dist2 === void 0 ? void 0 : (_locations$find5$dist3 = _locations$find5$dist2.wards) === null || _locations$find5$dist3 === void 0 ? void 0 : _locations$find5$dist3.find(d => {\n          var _d$label4, _d$label4$toLowerCase;\n          return d === null || d === void 0 ? void 0 : (_d$label4 = d.label) === null || _d$label4 === void 0 ? void 0 : (_d$label4$toLowerCase = _d$label4.toLowerCase()) === null || _d$label4$toLowerCase === void 0 ? void 0 : _d$label4$toLowerCase.includes(`${value}`.toLowerCase());\n        });\n        if (!ward) {\n          return 'Phường/Xã không hợp lệ';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Khu phố / Thôn / Ấp (*)',\n    assign: 'quarter',\n    formatter: (__, value) => value.toString().trim(),\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập khu phố/thôn/ấp';\n      }\n      return false;\n    }\n  }, {\n    header: 'Tổ DP (*)',\n    assign: 'quarterGroup',\n    formatter: (__, value) => value.toString().trim(),\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập khu tổ dân phố';\n      }\n      return false;\n    }\n  }, {\n    header: 'Lý do lấy mẫu (*)',\n    assign: 'examinationType',\n    formatter: (__, value) => {\n      var _examinationTypeList$;\n      return (_examinationTypeList$ = examinationTypeList.find(s => {\n        let keyword = value.toLowerCase().trim();\n        let match = /(\\d+.\\s+)(.*)/i.exec(keyword);\n        if (match === null) {\n          match = /(\\d+.\\s+)(.*)/i.exec(keyword);\n          if (match !== null) {\n            // eslint-disable-next-line prefer-destructuring\n            keyword = match[2];\n          }\n        } else {\n          // eslint-disable-next-line prefer-destructuring\n          keyword = match[2];\n        }\n        const name = s.name.toLowerCase().trim();\n        return name.includes(keyword.normalize('NFC'));\n      })) === null || _examinationTypeList$ === void 0 ? void 0 : _examinationTypeList$.name;\n    },\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập lý do lấy mẫu';\n      }\n      const examinationType = examinationTypeList.find(s => {\n        let keyword = value.toLowerCase().trim();\n        let match = /(\\d+.\\s+)(.*)/i.exec(keyword);\n        if (match === null) {\n          match = /(\\d+.\\s+)(.*)/i.exec(keyword);\n          if (match !== null) {\n            // eslint-disable-next-line prefer-destructuring\n            keyword = match[2];\n          }\n        } else {\n          // eslint-disable-next-line prefer-destructuring\n          keyword = match[2];\n        }\n        const name = s.name.toLowerCase().trim();\n        return name.includes(keyword.normalize('NFC')) || keyword.normalize('NFC').includes(name);\n      });\n      if (!examinationType) {\n        return 'Lý do lấy mẫu không hợp lệ';\n      }\n      return false;\n    }\n  }, {\n    header: 'Nơi lấy mẫu (*)',\n    assign: 'samplingPlaceId',\n    formatter: (__, value) => {\n      var _samplingPlaceList$fi;\n      return (_samplingPlaceList$fi = samplingPlaceList.find(s => {\n        const keyword = /(\\d+.\\s+)(.*)/i.exec(value.toLowerCase().trim())[2];\n        const name = /(\\d+.\\s+)(.*)/i.exec(s.name.toLowerCase().trim())[2];\n        return name.normalize('NFC') === keyword.normalize('NFC');\n      })) === null || _samplingPlaceList$fi === void 0 ? void 0 : _samplingPlaceList$fi.id;\n    },\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buôc phải nhập nơi lấy mẫu (loại hình)';\n      }\n      const samplingPlace = samplingPlaceList.find(s => {\n        const keyword = /(\\d+.\\s+)(.*)/i.exec(value.toLowerCase().trim())[2];\n        const name = /(\\d+.\\s+)(.*)/i.exec(s.name.toLowerCase().trim())[2];\n        return name.normalize('NFC') === keyword.normalize('NFC');\n      });\n      if (!samplingPlace) {\n        return 'Nơi lấy mẫu không hợp lệ';\n      }\n      return false;\n    }\n  }, {\n    header: 'Mẫu bệnh phẩm (*)',\n    assign: 'diseaseSample',\n    formatter: (__, value) => value,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập mẫu bệnh phẩm';\n      }\n      return false;\n    }\n  }, {\n    header: 'Kỹ thuật xét nghiệm (*)',\n    assign: 'testTechnique',\n    formatter: (__, value) => value,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập kỹ thuật xét nghiệm';\n      }\n      return false;\n    }\n  }], [examinationTypeList, samplingPlaceList]);\n  const refresh = () => {\n    setStep(steps.downloadTemplate);\n    setDisabled(false);\n    setSelectedFile(null);\n    setReadData([]);\n    setErrorData([]);\n    setUploadResult([]);\n  };\n\n  // #region Parse data\n  const parseSheetInformation = useCallback(binary => {\n    try {\n      const book = xlsx.read(binary, {\n        type: 'binary',\n        cellDates: true,\n        cellNF: false,\n        cellText: false\n      });\n      const sheet = book.Sheets[book.SheetNames[0]];\n      const parserData = informationModels.reduce((obj, model) => {\n        var _sheet$xlsx$utils$enc;\n        const value = (_sheet$xlsx$utils$enc = sheet[xlsx.utils.encode_cell({\n          r: model.row,\n          c: model.column\n        })]) === null || _sheet$xlsx$utils$enc === void 0 ? void 0 : _sheet$xlsx$utils$enc.v;\n        const validation = (model === null || model === void 0 ? void 0 : model.validate) ? model.validate(obj, value) : false;\n        if (!validation) {\n          obj[model.name] = (model === null || model === void 0 ? void 0 : model.formatter) ? model.formatter(obj, value) : value;\n        }\n        return obj;\n      }, {});\n      setInformationData(parserData);\n    } catch (e) {\n      toast.warn('Tệp tin không đúng định dạng');\n    }\n  }, [informationModels]);\n  const parseSheetData = useCallback(binary => {\n    try {\n      const book = xlsx.read(binary, {\n        type: 'binary',\n        cellDates: true,\n        cellNF: false,\n        cellText: false\n      });\n      const sheet = book.Sheets[book.SheetNames[1]];\n      const rawData = xlsx.utils.sheet_to_json(sheet, {\n        range: startWithRow\n      }).map(row => Object.keys(row).reduce((obj, key) => {\n        const convertedKey = key.replace(/(\\r\\n|\\n|\\r)/gm, '').trim();\n        if (!exception.includes(convertedKey)) {\n          obj[escape(convertedKey)] = row[key];\n        }\n        return obj;\n      }, {})).filter(row => Object.keys(row).length > empty.length);\n      const parserData = rawData.map((row, index) => dataModels.reduce((obj, props) => {\n        const header = typeof props.encoding !== 'undefined' ? props.encoding ? escape(props.header) : props.header : escape(props.header);\n        const resultOfValidation = (props === null || props === void 0 ? void 0 : props.validate) ? props.validate(obj, row[header]) : false;\n        if (resultOfValidation) {\n          if (typeof obj.errors === 'undefined') {\n            obj.errors = {\n              row: index + 1,\n              messages: []\n            };\n          }\n          obj.errors.messages.push(resultOfValidation);\n        } else if (typeof row[header] !== 'undefined' && row[header] !== '') {\n          obj[props.assign] = (props === null || props === void 0 ? void 0 : props.formatter) ? props.formatter(obj, row[header]) : row[header];\n        }\n        return obj;\n      }, {}));\n      setReadData(parserData.filter(d => !(d === null || d === void 0 ? void 0 : d.errors)));\n      setErrorData(parserData.filter(d => d === null || d === void 0 ? void 0 : d.errors));\n    } catch (e) {\n      toast.warn('Tệp tin không đúng định dạng');\n    }\n  }, [dataModels]);\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      if (reader.readAsBinaryString) {\n        reader.onload = () => {\n          parseSheetInformation(reader.result);\n          parseSheetData(reader.result);\n          setStep(steps.reviewData);\n        };\n        reader.readAsBinaryString(selectedFile);\n      }\n    }\n    // eslint-disable-next-line\n  }, [selectedFile]);\n  // #endregion\n\n  // #region Upload data\n  const formatDateOfBirth = d => {\n    if ((d === null || d === void 0 ? void 0 : d.day) && (d === null || d === void 0 ? void 0 : d.month)) {\n      const formatData = {\n        year: d.year,\n        month: d.month.toString().length === 1 ? `0${d.month}` : d.month,\n        day: d.day.toString().length === 1 ? `0${d.day}` : d.day\n      };\n      return `${formatData.year}-${formatData.month}-${formatData.day}`;\n    }\n    return `${d.year}-01-01`;\n  };\n  const onClose = () => {\n    refresh();\n    onCloseProps();\n  };\n  const formatRequestForProfile = d => {\n    var _d$initialMovingInfor, _examinationTypeList$2, _examinationTypeList$3;\n    return {\n      fullName: d.name,\n      gender: d.gender,\n      cmnd: (d === null || d === void 0 ? void 0 : d.identityCard) ? d.identityCard.length !== 12 ? `${d.identityCard}` : null : null,\n      cccd: (d === null || d === void 0 ? void 0 : d.identityCard) ? d.identityCard.length === 12 ? `${d.identityCard}` : null : null,\n      phoneNumber: d.phoneNumber,\n      dateOfBirth: d.dateOfBirth,\n      hasYearOfBirthOnly: false,\n      nationality: 'vn',\n      initialMovingInformation: (_d$initialMovingInfor = d === null || d === void 0 ? void 0 : d.initialMovingInformation) !== null && _d$initialMovingInfor !== void 0 ? _d$initialMovingInfor : '',\n      workAddresses: [{\n        provinceValue: d.workplaceProvinceValue,\n        districtValue: d.workplaceDistrictValue,\n        wardValue: d.workplaceWardValue,\n        streetHouseNumber: d.streetWorkplaceNumber\n      }],\n      addressesInVietnam: [{\n        provinceValue: d.provinceValue,\n        districtValue: d.districtValue,\n        wardValue: d.wardValue,\n        quarter: d.quarter,\n        quarterGroup: d.quarterGroup,\n        streetHouseNumber: d.streetHouseNumber\n      }],\n      immunizations: [{\n        disease: 'Covid-19',\n        immunizationStatus: d.vaccinationStatus,\n        // vaccine: d.vaccine,\n        injectionDate: (d === null || d === void 0 ? void 0 : d.lastInjectionDate) ? moment(d.lastInjectionDate).format('YYYY-MM-DDT02:00:00') : null\n      }],\n      symptoms: [],\n      profileCreationReason: {\n        reason: (_examinationTypeList$2 = examinationTypeList.find(e => e.id === d.examinationTypeId)) === null || _examinationTypeList$2 === void 0 ? void 0 : _examinationTypeList$2.name,\n        reasonType: (_examinationTypeList$3 = examinationTypeList.find(e => e.id === d.examinationTypeId)) === null || _examinationTypeList$3 === void 0 ? void 0 : _examinationTypeList$3.name\n      }\n    };\n  };\n  const formatRequestForImmunization = (d, id, profileId) => ({\n    id,\n    guid: id,\n    profileId,\n    disease: 'Covid-19',\n    immunizationStatus: d.immunizationStatus,\n    // vaccine: d.vaccine,\n    injectionDate: (d === null || d === void 0 ? void 0 : d.injectionDate) ? moment(d.injectionDate).format('YYYY-MM-DDT02:00:00') : null\n  });\n  const formatExamination = d => {\n    var _d$dateOfBirth, _d$dateOfBirth2, _d$dateOfBirth3, _d$dateOfBirth4;\n    return [{\n      profiles: Array.isArray(d) ? d.map(obj => {\n        var _obj$dateOfBirth, _obj$dateOfBirth2, _obj$dateOfBirth3, _obj$dateOfBirth4;\n        return {\n          reason: obj.examinationType,\n          fullName: obj.name,\n          gender: obj.gender === 1 ? 'Nam' : 'Nữ',\n          yearOfBirth: !(((_obj$dateOfBirth = obj.dateOfBirth) === null || _obj$dateOfBirth === void 0 ? void 0 : _obj$dateOfBirth.day) && ((_obj$dateOfBirth2 = obj.dateOfBirth) === null || _obj$dateOfBirth2 === void 0 ? void 0 : _obj$dateOfBirth2.month)) ? obj.dateOfBirth.year : undefined,\n          dateOfBirth: ((_obj$dateOfBirth3 = obj.dateOfBirth) === null || _obj$dateOfBirth3 === void 0 ? void 0 : _obj$dateOfBirth3.day) && ((_obj$dateOfBirth4 = obj.dateOfBirth) === null || _obj$dateOfBirth4 === void 0 ? void 0 : _obj$dateOfBirth4.month) ? formatDateOfBirth(obj.dateOfBirth) : undefined,\n          phone: obj.phoneNumber,\n          cmnd: uuidv4(),\n          streetHouseNumber: obj.streetHouseNumber,\n          provinceValue: obj.provinceValue,\n          districtValue: obj.districtValue,\n          wardValue: obj.wardValue,\n          quarter: obj.quarter,\n          quarterGroup: obj.quarterGroup,\n          subjectType: informationData.feeType,\n          immunization: {\n            immunizationStatus: obj.vaccinationStatus,\n            reason: obj.examinationType,\n            disease: 'Covid-19',\n            injectionDate: (obj === null || obj === void 0 ? void 0 : obj.lastInjectionDate) ? moment(obj.lastInjectionDate).format('YYYY-MM-DDT02:00:00') : null\n          }\n        };\n      }) : [{\n        reason: d.examinationType,\n        fullName: d.name,\n        gender: d.gender === 1 ? 'Nam' : 'Nữ',\n        yearOfBirth: !(((_d$dateOfBirth = d.dateOfBirth) === null || _d$dateOfBirth === void 0 ? void 0 : _d$dateOfBirth.day) && ((_d$dateOfBirth2 = d.dateOfBirth) === null || _d$dateOfBirth2 === void 0 ? void 0 : _d$dateOfBirth2.month)) ? d.dateOfBirth.year : undefined,\n        dateOfBirth: ((_d$dateOfBirth3 = d.dateOfBirth) === null || _d$dateOfBirth3 === void 0 ? void 0 : _d$dateOfBirth3.day) && ((_d$dateOfBirth4 = d.dateOfBirth) === null || _d$dateOfBirth4 === void 0 ? void 0 : _d$dateOfBirth4.month) ? formatDateOfBirth(d.dateOfBirth) : undefined,\n        phone: d.phoneNumber,\n        cmnd: uuidv4(),\n        streetHouseNumber: d.streetHouseNumber,\n        provinceValue: d.provinceValue,\n        districtValue: d.districtValue,\n        wardValue: d.wardValue,\n        quarter: d.quarter,\n        quarterGroup: d.quarterGroup,\n        subjectType: d.feeType,\n        immunization: {\n          immunizationStatus: d.vaccinationStatus,\n          reason: d.examinationType,\n          disease: 'Covid-19',\n          injectionDate: (d === null || d === void 0 ? void 0 : d.lastInjectionDate) ? moment(d.lastInjectionDate).format('YYYY-MM-DDT02:00:00') : null\n        }\n      }],\n      assign: {\n        date: informationData.dateTaken.day ? moment(informationData.dateTaken).format('YYYY-MM-DD HH:mm') : null,\n        facility: informationData.unitOfImporter\n      },\n      testing: Array.isArray(d) ? {\n        code: d[0].code,\n        isGroup: d.length > 1,\n        reason: d[0].examinationType,\n        streetHouseNumber: d[0].streetHouseNumber,\n        provinceValue: d[0].provinceValue,\n        districtValue: d[0].districtValue,\n        wardValue: d[0].wardValue,\n        quarter: d[0].quarter,\n        quarterGroup: d[0].quarterGroup,\n        dateTaken: informationData.dateTaken.day ? moment(informationData.dateTaken).format('YYYY-MM-DD HH:mm') : null,\n        diseaseType: 'U07',\n        feeType: informationData.feeType,\n        subjectType: informationData.feeType,\n        sampleType: d[0].diseaseSample,\n        testTechnique: d[0].testTechnique,\n        samplingPlaceId: d[0].samplingPlaceId\n      } : {\n        code: d.code,\n        isGroup: d.length > 1,\n        reason: d.examinationType,\n        streetHouseNumber: informationData.streetHouseNumber,\n        provinceValue: informationData.provinceValue,\n        districtValue: informationData.districtValue,\n        wardValue: informationData.wardValue,\n        quarter: informationData.quarter,\n        quarterGroup: informationData.quarterGroup,\n        dateTaken: moment(informationData.dateTaken).format('YYYY-MM-DD'),\n        diseaseType: 'U07',\n        feeType: informationData.feeType,\n        subjectType: informationData.feeType,\n        sampleType: d.diseaseSample,\n        testTechnique: d.testTechnique,\n        samplingPlaceId: d.samplingPlaceId\n      }\n    }];\n  };\n  const getImportError = function () {\n    var _errorResponse$respon;\n    let errorResponse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      response: {}\n    };\n    let profileId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n    const resultError = {\n      succeed: false,\n      message: 'Lỗi không xác định'\n    };\n    if ((_errorResponse$respon = errorResponse.response) === null || _errorResponse$respon === void 0 ? void 0 : _errorResponse$respon.data) {\n      if (typeof errorResponse.response.data === 'object') {\n        var _errorResponse$respon2;\n        const {\n          errors,\n          errorMessage\n        } = (_errorResponse$respon2 = errorResponse.response) === null || _errorResponse$respon2 === void 0 ? void 0 : _errorResponse$respon2.data;\n        if (errors) {\n          resultError.message = Object.values(errors).map(error => error.join('')).join(', ');\n        }\n        if (errorMessage) {\n          if (errorMessage.includes('Conflicted')) {\n            resultError.message = 'Xung đột thông tin hồ sơ';\n            resultError.profileId = profileId;\n          } else if (errorMessage.includes('Trùng')) {\n            resultError.message = 'Mẫu đã được ghi nhận';\n          } else {\n            const examinationError = getExaminationError(errorMessage);\n            if (examinationError) {\n              resultError.message = examinationError;\n            }\n          }\n        }\n      } else if (typeof errorResponse.response.data === 'string') {\n        if (errorResponse.response.data.includes('Record is existed or only update') || errorResponse.response.data.includes('Record is existed but dates are not the same')) {\n          resultError.message = 'Xung đột tiền sử tiêm chủng';\n          resultError.profileId = profileId;\n        } else {\n          const examinationError = getExaminationError(errorResponse.response.data);\n          if (examinationError) {\n            resultError.message = examinationError;\n          }\n        }\n      }\n    }\n    return resultError;\n  };\n  const uploadData = async () => {\n    setLoading(true);\n    const dataGroupBySampleForm = readData.reduce((result, obj) => {\n      if (result[obj.index]) {\n        result[obj.index] = [...result[obj.index], obj];\n      } else {\n        result[obj.index] = [obj];\n      }\n      return result;\n    }, {});\n    const keys = Object.keys(dataGroupBySampleForm);\n    for (const key of keys) {\n      try {\n        var _response$errors$, _response$errors$$pro, _response$errors$2, _response$failed$;\n        const response = await dispatch(createPcrExamination(formatExamination(dataGroupBySampleForm[key])));\n        const conflict = response === null || response === void 0 ? void 0 : (_response$errors$ = response.errors[0]) === null || _response$errors$ === void 0 ? void 0 : (_response$errors$$pro = _response$errors$.profileConflicts[0]) === null || _response$errors$$pro === void 0 ? void 0 : _response$errors$$pro.conflicts;\n        const profileConflicts = response === null || response === void 0 ? void 0 : (_response$errors$2 = response.errors[0]) === null || _response$errors$2 === void 0 ? void 0 : _response$errors$2.profileConflicts;\n        if ((response === null || response === void 0 ? void 0 : (_response$failed$ = response.failed[0]) === null || _response$failed$ === void 0 ? void 0 : _response$failed$.length) > 0) {\n          if (conflict) {\n            setUploadResult(r => r.concat(dataGroupBySampleForm[key].map((o, i) => {\n              var _profileConflicts$i;\n              return {\n                ...o,\n                result: {\n                  succeed: false,\n                  profileId: (_profileConflicts$i = profileConflicts[i]) === null || _profileConflicts$i === void 0 ? void 0 : _profileConflicts$i.profileId,\n                  message: 'Xung đột hồ sơ'\n                }\n              };\n            })));\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n        }\n        setUploadResult(r => r.concat(dataGroupBySampleForm[key].map((o, i) => ({\n          ...o,\n          result: {\n            ...response,\n            succeed: true\n          }\n        }))));\n      } catch (e) {\n        const error = getImportError(e);\n        setUploadResult(r => r.concat(dataGroupBySampleForm[key].map((o, i) => ({\n          ...o,\n          result: {\n            ...error\n          }\n        }))));\n      }\n    }\n    /* For group profile */\n    // if (key.includes('GỘP')) {\n    //   for (const data in dataGroupBySampleForm[key]) {\n    //   }\n    // } else {\n    //   /* For single profile */\n    //   for (const data of dataGroupBySampleForm[key]) {\n    //     try {\n    //     } catch (e) {\n    //       const error = getImportError(e);\n    //       setUploadResult((r) => ([...r, { ...data, result: { ...error } }]));\n    //     }\n    //   }\n    // }\n\n    setLoading(false);\n    setStep(steps.result);\n  };\n  // #endregion\n\n  // #region Resolve data\n  const getProfile = async (row, id) => {\n    try {\n      const profile = await getProfileWithouDispatch(id);\n      setConflictProfile({\n        row,\n        raw: formatRequestForProfile(row),\n        exist: profile\n      });\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  };\n  // #endregion\n  const updateConflictProfile = async d => {\n    try {\n      await dispatch(updateProfile(formatProfileRequest(d), false));\n      if ((d === null || d === void 0 ? void 0 : d.immunizations) && d.immunizations.length > 0) {\n        var _conflictProfile$exis;\n        const immunization = d.immunizations[0];\n        const conflictImmunization = (_conflictProfile$exis = conflictProfile.exist) === null || _conflictProfile$exis === void 0 ? void 0 : _conflictProfile$exis.immunizations[0];\n        if (typeof conflictImmunization !== 'undefined' && typeof conflictImmunization.immunizationStatus === 'number') {\n          if (typeof immunization.immunizationStatus === 'number' && immunization.immunizationStatus === conflictImmunization.immunizationStatus) {\n            immunization.guid = conflictImmunization === null || conflictImmunization === void 0 ? void 0 : conflictImmunization.guid;\n          }\n        }\n        await dispatch((immunization === null || immunization === void 0 ? void 0 : immunization.guid) ? updateImmunizationForProfile(formatRequestForImmunization(immunization, immunization.guid, d.id)) : createImmunizationForProfile(formatRequestForImmunization(immunization, undefined, d.id)));\n      }\n      method.reset(defaultProfileValue);\n      setUploadResult(r => {\n        const reduce = r.reduce((result, row) => {\n          if (row.result.profileId === d.id) {\n            var _d$immunizations$, _d$immunizations$2;\n            row.streetHouseNumber = d === null || d === void 0 ? void 0 : d.addressesInVietnam[0].streetHouseNumber;\n            row.provinceValue = d === null || d === void 0 ? void 0 : d.addressesInVietnam[0].provinceValue;\n            row.districtValue = d === null || d === void 0 ? void 0 : d.addressesInVietnam[0].districtValue;\n            row.wardValue = d === null || d === void 0 ? void 0 : d.addressesInVietnam[0].wardValue;\n            row.quarter = d === null || d === void 0 ? void 0 : d.addressesInVietnam[0].quarter;\n            row.quarterGroup = d === null || d === void 0 ? void 0 : d.addressesInVietnam[0].quarterGroup;\n            row.vaccinationStatus = d === null || d === void 0 ? void 0 : (_d$immunizations$ = d.immunizations[0]) === null || _d$immunizations$ === void 0 ? void 0 : _d$immunizations$.immunizationStatus;\n            row.lastInjectionDate = d === null || d === void 0 ? void 0 : (_d$immunizations$2 = d.immunizations[0]) === null || _d$immunizations$2 === void 0 ? void 0 : _d$immunizations$2.injectionDate;\n            return [...result, {\n              ...row,\n              result: {\n                succeed: false,\n                profileId: row.result.profileId,\n                message: 'Đã chỉnh sửa, cần upload lại'\n              }\n            }];\n          }\n          return [...result, row];\n        }, []);\n        return reduce;\n      });\n    } catch (e) {\n      setUploadResult(r => {\n        const reduce = r.reduce((result, row) => {\n          if (row.result.profileId === d.id) {\n            const error = getImportError(e);\n            if (!(error === null || error === void 0 ? void 0 : error.message) || error.message.includes('Lỗi không xác định')) {\n              return [...result, {\n                ...row,\n                result: {\n                  ...error\n                }\n              }];\n            }\n            return [...result, {\n              ...row,\n              result: {\n                ...error,\n                profileId: row.result.profileId\n              }\n            }];\n          }\n          return [...result, row];\n        }, []);\n        return reduce;\n      });\n    } finally {\n      setConflictProfile(undefined);\n    }\n  };\n  const resolveData = async () => {\n    setLoading(true);\n    const resolveList = uploadResult.filter(u => {\n      var _u$result;\n      return (u === null || u === void 0 ? void 0 : (_u$result = u.result) === null || _u$result === void 0 ? void 0 : _u$result.message) && u.result.message.includes('Đã chỉnh sửa');\n    });\n    const dataGroupBySampleForm = uploadResult.reduce((result, obj) => {\n      if (result[obj.index]) {\n        result[obj.index] = [...result[obj.index], obj];\n      } else {\n        result[obj.index] = [obj];\n      }\n      return result;\n    }, {});\n    const keys = Object.keys(dataGroupBySampleForm);\n    for (const key of keys) {\n      try {\n        if (dataGroupBySampleForm[key].filter(u => {\n          var _u$result2;\n          return (u === null || u === void 0 ? void 0 : (_u$result2 = u.result) === null || _u$result2 === void 0 ? void 0 : _u$result2.message) && u.result.message.includes('Đã chỉnh sửa');\n        }).length > 0) {\n          const response = await dispatch(createPcrExamination(formatExamination(dataGroupBySampleForm[key])));\n          // setUploadResult((r) => {\n          //   const reduce = r.reduce((result, row) => {\n          //     for (const resolve of dataGroupBySampleForm[key]) {\n          //       if (row.result.profileId === resolve.result.profileId) {\n          //         return [...result, { ...row, result: { ...response, succeed: true } }];\n          //       }\n          //       return [...result, row];\n          //     }\n          //   }, []);\n          //   return reduce;\n          // });\n          setUploadResult(r => r.concat(dataGroupBySampleForm[key].map((o, i) => ({\n            ...o,\n            result: {\n              ...response,\n              succeed: true\n            }\n          }))).filter(o => {\n            var _o$result;\n            return !(o === null || o === void 0 ? void 0 : (_o$result = o.result) === null || _o$result === void 0 ? void 0 : _o$result.profileId);\n          }));\n        }\n      } catch (e) {\n        // const error = getImportError(e);\n        // setUploadResult((r) => ([...r, { ...resolve['0'], result: { ...error } }]));\n        setUploadResult(r => {\n          for (const resolve of dataGroupBySampleForm[key]) {\n            const reduce = r.reduce((result, row) => {\n              if (row.result.profileId === resolve.result.profileId) {\n                return [...result, {\n                  ...row,\n                  result: {\n                    ...getImportError(e)\n                  }\n                }];\n              }\n              return [...result, row];\n            }, []);\n            return r.concat(reduce).filter(o => {\n              var _o$result2;\n              return !(o === null || o === void 0 ? void 0 : (_o$result2 = o.result) === null || _o$result2 === void 0 ? void 0 : _o$result2.profileId);\n            });\n          }\n        });\n      }\n    }\n    setStep(steps.result);\n    setLoading(false);\n  };\n  // #region Component\n  const jsx_immunization = useCallback(_ref2 => {\n    var _immunizationStatusOp, _immunizationStatusOp2;\n    let {\n      vaccinationStatus,\n      lastInjectionDate\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1358,\n        columnNumber: 7\n      }\n    }, typeof vaccinationStatus !== 'undefined' ? /*#__PURE__*/React.createElement(Header, {\n      sub: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1360,\n        columnNumber: 11\n      }\n    }, (_immunizationStatusOp = (_immunizationStatusOp2 = immunizationStatusOptions.find(o => o.value === vaccinationStatus)) === null || _immunizationStatusOp2 === void 0 ? void 0 : _immunizationStatusOp2.text) !== null && _immunizationStatusOp !== void 0 ? _immunizationStatusOp : '') : null, typeof lastInjectionDate !== 'undefined' && vaccinationStatus !== 0 && vaccinationStatus !== 3 ? /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1369,\n        columnNumber: 11\n      }\n    }, moment(lastInjectionDate).format('DD-MM-YYYY')) : null);\n  }, []);\n  const dataColumns = useMemo(() => [{\n    Header: '#',\n    accessor: 'index'\n  }, {\n    Header: 'Hình thức lấy mẫu',\n    accessor: 'sampleForm'\n  }, {\n    Header: 'Người được lấy mẫu',\n    accessor: 'name'\n  }, {\n    Header: 'Số điện thoại',\n    accessor: 'phoneNumber'\n  }, {\n    Header: 'Địa chỉ',\n    formatter: _ref3 => {\n      let {\n        streetHouseNumber,\n        provinceValue,\n        districtValue,\n        wardValue\n      } = _ref3;\n      return formatAddressToString({\n        streetHouseNumber,\n        provinceValue,\n        districtValue,\n        wardValue\n      });\n    },\n    cutlength: 30\n  }, {\n    Header: 'Tiền sử tiêm chủng',\n    formatter: d => jsx_immunization(d)\n  }, {\n    Header: 'Mã xét nghiệm',\n    formatter: _ref4 => {\n      let {\n        code\n      } = _ref4;\n      return (code === null || code === void 0 ? void 0 : code.length) === 12 ? /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1416,\n          columnNumber: 57\n        }\n      }, code) : code;\n    }\n  }, {\n    Header: 'Ngày lấy mẫu',\n    formatter: () => informationData.dateTaken ? moment(informationData.dateTaken).format('DD-MM-YY HH:mm') : ''\n  }, {\n    Header: 'Kỹ thuật xét nghiệm',\n    accessor: 'testTechnique'\n  }], [informationData], jsx_immunization);\n  const errorColumns = useMemo(() => [{\n    Header: 'Hàng',\n    formatter: _ref5 => {\n      let {\n        errors\n      } = _ref5;\n      return /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1437,\n          columnNumber: 36\n        }\n      }, errors === null || errors === void 0 ? void 0 : errors.row);\n    }\n  }, {\n    Header: ' ',\n    formatter: _ref6 => {\n      let {\n        errors\n      } = _ref6;\n      return (errors === null || errors === void 0 ? void 0 : errors.messages) ? /*#__PURE__*/React.createElement(List, {\n        divided: true,\n        relaxed: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1443,\n          columnNumber: 13\n        }\n      }, errors.messages.map(m => /*#__PURE__*/React.createElement(List.Item, {\n        key: m,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1445,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(List.Icon, {\n        name: \"x\",\n        color: \"red\",\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1446,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(List.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1447,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(List.Description, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1448,\n          columnNumber: 21\n        }\n      }, m))))) : null;\n    }\n  }], []);\n  const jsx_menuTable = useMemo(() => {\n    const panes = [{\n      menuItem: `Dữ liệu đọc được (${readData.length})`,\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1463,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        columns: dataColumns,\n        data: readData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1464,\n          columnNumber: 13\n        }\n      }))\n    }, {\n      menuItem: `Dữ liệu bị lỗi (${errorData.length})`,\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1471,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        columns: errorColumns,\n        data: errorData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1472,\n          columnNumber: 13\n        }\n      }))\n    }];\n    return /*#__PURE__*/React.createElement(MenuWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1479,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      panes: panes,\n      renderActiveOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1480,\n        columnNumber: 9\n      }\n    }));\n  }, [readData, errorData, dataColumns, errorColumns]);\n  const resultColumns = useMemo(() => [{\n    Header: '#',\n    accessor: 'index'\n  }, {\n    Header: 'Mã xét nghiệm',\n    accessor: 'code'\n  }, {\n    Header: 'Người được lấy mẫu',\n    accessor: 'name'\n  }, {\n    Header: 'Số điện thoại',\n    accessor: 'phoneNumber'\n  }, {\n    Header: 'Hình thức lấy mẫu',\n    accessor: 'sampleForm'\n  }, {\n    Header: 'Ngày lấy mẫu',\n    formatter: () => informationData.dateTaken ? moment(informationData.dateTaken).format('DD-MM-YY HH:mm') : ''\n  }, {\n    Header: 'Kỹ thuật xét nghiệm',\n    accessor: 'testTechnique'\n  }, {\n    Header: ' ',\n    formatter: r => {\n      var _r$result, _r$result2, _r$result3, _r$result4, _r$result4$failed$;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Icon, {\n        name: \"info circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1522,\n          columnNumber: 13\n        }\n      }), (r === null || r === void 0 ? void 0 : (_r$result = r.result) === null || _r$result === void 0 ? void 0 : _r$result.succeed) && (r === null || r === void 0 ? void 0 : (_r$result2 = r.result) === null || _r$result2 === void 0 ? void 0 : _r$result2.failed.length) === 0 ? 'Thành công' : (r === null || r === void 0 ? void 0 : (_r$result3 = r.result) === null || _r$result3 === void 0 ? void 0 : _r$result3.message) || errorCode[r === null || r === void 0 ? void 0 : (_r$result4 = r.result) === null || _r$result4 === void 0 ? void 0 : (_r$result4$failed$ = _r$result4.failed[0]) === null || _r$result4$failed$ === void 0 ? void 0 : _r$result4$failed$.slice(14).split(/\\s/)[0].replace(/:/g, '')]);\n    }\n  }], [informationData, jsx_immunization]);\n  const jsx_menuResultTable = useMemo(() => {\n    const panes = [];\n    const success = uploadResult.filter(u => {\n      var _u$result3, _u$result4, _u$result4$failed;\n      return (u === null || u === void 0 ? void 0 : (_u$result3 = u.result) === null || _u$result3 === void 0 ? void 0 : _u$result3.succeed) && (u === null || u === void 0 ? void 0 : (_u$result4 = u.result) === null || _u$result4 === void 0 ? void 0 : (_u$result4$failed = _u$result4.failed) === null || _u$result4$failed === void 0 ? void 0 : _u$result4$failed.length) === 0;\n    });\n    const error = uploadResult.filter(u => {\n      var _u$result5, _u$result6, _u$result6$failed;\n      return (u === null || u === void 0 ? void 0 : (_u$result5 = u.result) === null || _u$result5 === void 0 ? void 0 : _u$result5.succeed) && (u === null || u === void 0 ? void 0 : (_u$result6 = u.result) === null || _u$result6 === void 0 ? void 0 : (_u$result6$failed = _u$result6.failed) === null || _u$result6$failed === void 0 ? void 0 : _u$result6$failed.length) !== 0;\n    });\n    const resolve = uploadResult.filter(u => {\n      var _u$result7, _u$result8;\n      return !(u === null || u === void 0 ? void 0 : (_u$result7 = u.result) === null || _u$result7 === void 0 ? void 0 : _u$result7.succeed) && (u === null || u === void 0 ? void 0 : (_u$result8 = u.result) === null || _u$result8 === void 0 ? void 0 : _u$result8.profileId) !== 0;\n    });\n    if (success.length > 0) {\n      panes.push({\n        menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n          key: \"success\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1552,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: '700'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1554,\n            columnNumber: 13\n          }\n        }, \"Th\\xE0nh c\\xF4ng\"), \"\\xA0 (\", success.length, \")\"),\n        render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1559,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(DataTable, {\n          columns: resultColumns,\n          data: success.map((d, i) => ({\n            ...d,\n            index: i + 1\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1560,\n            columnNumber: 13\n          }\n        }))\n      });\n    }\n    if (resolve.length > 0) {\n      panes.push({\n        menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n          key: \"resolve\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1571,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: '700'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1573,\n            columnNumber: 13\n          }\n        }, \"C\\u1EA7n ch\\u1EC9nh s\\u1EEDa\"), \"\\xA0 (\", resolve.length, \")\"),\n        render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1578,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(DataTable, {\n          columns: resultColumns,\n          data: resolve.map((d, i) => ({\n            ...d,\n            index: i + 1\n          })),\n          actions: [{\n            icon: /*#__PURE__*/React.createElement(FiEdit3, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1584,\n                columnNumber: 25\n              }\n            }),\n            color: 'purple',\n            title: 'Cập nhật hồ sơ',\n            onClick: r => {\n              var _r$result5;\n              return getProfile(r, r === null || r === void 0 ? void 0 : (_r$result5 = r.result) === null || _r$result5 === void 0 ? void 0 : _r$result5.profileId);\n            },\n            hidden: r => {\n              var _r$result6;\n              return !(r === null || r === void 0 ? void 0 : (_r$result6 = r.result) === null || _r$result6 === void 0 ? void 0 : _r$result6.profileId);\n            }\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1579,\n            columnNumber: 13\n          }\n        }))\n      });\n    }\n    if (error.length > 0) {\n      panes.push({\n        menuItem: /*#__PURE__*/React.createElement(Menu.Item, {\n          key: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1599,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: {\n            fontWeight: '700'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1601,\n            columnNumber: 13\n          }\n        }, \"L\\u1ED7i\"), \"\\xA0 (\", error.length, \")\"),\n        render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1606,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(DataTable, {\n          columns: resultColumns,\n          data: error.map((d, i) => ({\n            ...d,\n            index: i + 1\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1607,\n            columnNumber: 13\n          }\n        }))\n      });\n    }\n    return /*#__PURE__*/React.createElement(MenuWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1617,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      panes: panes,\n      defaultActiveIndex: 0,\n      renderActiveOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1618,\n        columnNumber: 9\n      }\n    }));\n    // eslint-disable-next-line\n  }, [uploadResult, resultColumns]);\n  const jsx_downloadTemplate = useMemo(() => /*#__PURE__*/React.createElement(Message, {\n    info: true,\n    icon: true,\n    style: {\n      marginBottom: 0,\n      cursor: 'pointer'\n    },\n    onClick: () => downloadFile(excelTemplate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1626,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"download\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1632,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Message.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1633,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Message.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1634,\n      columnNumber: 11\n    }\n  }, \"T\\u1EA3i t\\u1EC7p tin m\\u1EABu\"), \"S\\u1EED d\\u1EE5ng t\\u1EC7p tin m\\u1EABu, \\u0111\\u1EC3 \\u0111\\u1EA3m b\\u1EA3o d\\u1EEF li\\u1EC7u ch\\xEDnh x\\xE1c\")), []);\n  const jsx_content = useMemo(() => {\n    switch (step) {\n      case steps.downloadTemplate:\n        return jsx_downloadTemplate;\n      case steps.reviewData:\n        return jsx_menuTable;\n      case steps.result:\n        return jsx_menuResultTable;\n      default:\n        return jsx_downloadTemplate;\n    }\n  }, [step, jsx_downloadTemplate, jsx_menuTable, jsx_menuResultTable]);\n  // #endregion\n\n  useEffect(() => {\n    if (examinationTypeList.length === 0) {\n      dispatch(getExaminationTypes());\n    }\n    if (samplingPlaceList.length === 0) {\n      dispatch(getSamplingPlaces());\n    }\n  }, []);\n  useEffect(() => {\n    if (errorData.length === 0) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  }, [errorData]);\n  useEffect(() => {\n    if (uploadResult.filter(u => {\n      var _u$result9;\n      return (u === null || u === void 0 ? void 0 : (_u$result9 = u.result) === null || _u$result9 === void 0 ? void 0 : _u$result9.message) && u.result.message.includes('Đã chỉnh sửa');\n    }).length > 0) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  }, [uploadResult]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    size: step !== steps.downloadTemplate ? 'fullscreen' : undefined,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1685,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1690,\n      columnNumber: 9\n    }\n  }, \"N\\u1EA1p d\\u1EEF li\\u1EC7u t\\u1EEB file Excel\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1691,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1692,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dimmer, {\n    inverted: true,\n    active: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1693,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1694,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1696,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: \"upload\",\n    labelPosition: \"right\",\n    color: \"green\",\n    content: \"Ch\\u1ECDn File\",\n    onClick: () => {\n      refresh();\n      fileInputRef.current.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1697,\n      columnNumber: 15\n    }\n  }), selectedFile ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '10px',\n      marginLeft: '10px',\n      fontWeight: '700'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1709,\n      columnNumber: 17\n    }\n  }, \"T\\xEAn file: \", selectedFile.name) : null), /*#__PURE__*/React.createElement(\"input\", {\n    hidden: true,\n    type: \"file\",\n    ref: fileInputRef,\n    onChange: e => {\n      setSelectedFile(e.target.files[0]);\n    },\n    accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1720,\n      columnNumber: 13\n    }\n  }), jsx_content)), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1732,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    positive: true,\n    labelPosition: \"right\",\n    icon: \"checkmark\",\n    content: \"X\\xE1c nh\\u1EADn\",\n    disabled: disabled || loading,\n    onClick: () => {\n      if (uploadResult.filter(u => {\n        var _u$result10;\n        return (u === null || u === void 0 ? void 0 : (_u$result10 = u.result) === null || _u$result10 === void 0 ? void 0 : _u$result10.message) && u.result.message.includes('Đã chỉnh sửa');\n      }).length > 0) {\n        resolveData();\n      } else {\n        uploadData();\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1733,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    negative: true,\n    labelPosition: \"right\",\n    icon: \"close\",\n    content: \"\\u0110\\xF3ng\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1768,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    open: Boolean(conflictProfile === null || conflictProfile === void 0 ? void 0 : (_conflictProfile$exis2 = conflictProfile.exist) === null || _conflictProfile$exis2 === void 0 ? void 0 : _conflictProfile$exis2.id),\n    onClose: () => setConflictProfile(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1776,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1780,\n      columnNumber: 11\n    }\n  }, conflictProfile === null || conflictProfile === void 0 ? void 0 : (_conflictProfile$exis3 = conflictProfile.exist) === null || _conflictProfile$exis3 === void 0 ? void 0 : _conflictProfile$exis3.fullName), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1781,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1782,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormProvider, Object.assign({}, method, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1783,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ProfileSection, {\n    initialSubject: conflictProfile === null || conflictProfile === void 0 ? void 0 : conflictProfile.exist,\n    conflictSubject: conflictProfile === null || conflictProfile === void 0 ? void 0 : conflictProfile.raw,\n    onChange: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1784,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1792,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    positive: true,\n    labelPosition: \"right\",\n    icon: \"checkmark\",\n    content: \"X\\xE1c nh\\u1EADn\",\n    loading: updateProfileLoading || createImmunizationForProfileLoading || updateImmunizationForProfileLoading,\n    onClick: method.handleSubmit(updateConflictProfile),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1793,\n      columnNumber: 13\n    }\n  })))));\n};\nexport default ImportPcrModal;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","useRef","FormProvider","useForm","styled","toast","v4","uuidv4","moment","xlsx","FiEdit3","Modal","Button","Message","Icon","Header","Tab","List","Dimmer","Loader","Menu","DataTable","ProfileSection","useDispatch","useSelector","getProfileWithouDispatch","updateProfile","updateImmunizationForProfile","createImmunizationForProfile","getSamplingPlaces","getExaminationTypes","formatProfileRequest","downloadFile","getExaminationError","formatAddressToString","locations","excelTemplate","IMMUNIZATION_STATUSES","createPcrExamination","defaultProfileValue","Wrapper","div","MenuWrapper","startWithRow","steps","downloadTemplate","reviewData","result","ImportPcrModal","_ref","_conflictProfile$exis2","_conflictProfile$exis3","open","onClose","onCloseProps","step","setStep","disabled","setDisabled","loading","setLoading","method","fileInputRef","selectedFile","setSelectedFile","informationData","setInformationData","undefined","readData","setReadData","errorData","setErrorData","uploadResult","setUploadResult","conflictProfile","setConflictProfile","dispatch","examinationTypeList","samplingPlaceList","createImmunizationForProfileLoading","updateImmunizationForProfileLoading","state","medicalTest","updateProfileLoading","profile","exception","empty","immunizationStatusOptions","key","value","NO_RECORD","text","NO_VACCINE","ONE_SHOT","TWO_SHOT","MORE_THAN_TWO_SHOT","errorCode","NULL_UNIT","CODE_HAS_BEEN_USED","CODE_HAS_BEEN_ISSUED","NULL_DISEASE","NULL_EXAM_TYPE","NULL_DISEASE_SAMPLE","SINGLE_PROFILE_MODIFY_FAILED","GROUP_PROFILE_MODIFY_FAILED","NULL_SAMPLING_PLACE","OVER_DATE_TAKEN","informationModels","row","column","name","formatter","__","validate","dateTaken","day","parsed","parseInt","format","month","year","hour","minute","dataModels","header","assign","toUpperCase","trim","toString","encoding","dateOfBirth","includes","status","find","p","obj","immunizationStatus","date","beforeDate","afterDate","endOf","_locations$find","_p$label","_p$label$toLowerCase","label","toLowerCase","province","_p$label2","_p$label2$toLowerCase","_locations$find2","_locations$find2$dist","_locations$find2$dist2","_p$value","_p$value$toLowerCase","provinceValue","districts","d","_d$label","_d$label$toLowerCase","_locations$find3","_locations$find3$dist","district","_p$value2","_p$value2$toLowerCase","_d$label2","_d$label2$toLowerCase","_locations$find4","_locations$find4$dist","_locations$find4$dist2","_locations$find4$dist3","_locations$find4$dist4","_p$value3","_p$value3$toLowerCase","_d$value","_d$value$toLowerCase","districtValue","wards","_d$label3","_d$label3$toLowerCase","_locations$find5","_locations$find5$dist","_locations$find5$dist2","_locations$find5$dist3","ward","_p$value4","_p$value4$toLowerCase","_d$value2","_d$value2$toLowerCase","_d$label4","_d$label4$toLowerCase","_examinationTypeList$","s","keyword","match","exec","normalize","examinationType","_samplingPlaceList$fi","id","samplingPlace","refresh","parseSheetInformation","binary","book","read","type","cellDates","cellNF","cellText","sheet","Sheets","SheetNames","parserData","reduce","model","_sheet$xlsx$utils$enc","utils","encode_cell","r","c","v","validation","e","warn","parseSheetData","rawData","sheet_to_json","range","map","Object","keys","convertedKey","replace","escape","filter","length","index","props","resultOfValidation","errors","messages","push","reader","FileReader","readAsBinaryString","onload","formatDateOfBirth","formatData","formatRequestForProfile","_d$initialMovingInfor","_examinationTypeList$2","_examinationTypeList$3","fullName","gender","cmnd","identityCard","cccd","phoneNumber","hasYearOfBirthOnly","nationality","initialMovingInformation","workAddresses","workplaceProvinceValue","workplaceDistrictValue","wardValue","workplaceWardValue","streetHouseNumber","streetWorkplaceNumber","addressesInVietnam","quarter","quarterGroup","immunizations","disease","vaccinationStatus","injectionDate","lastInjectionDate","symptoms","profileCreationReason","reason","examinationTypeId","reasonType","formatRequestForImmunization","profileId","guid","formatExamination","_d$dateOfBirth","_d$dateOfBirth2","_d$dateOfBirth3","_d$dateOfBirth4","profiles","Array","isArray","_obj$dateOfBirth","_obj$dateOfBirth2","_obj$dateOfBirth3","_obj$dateOfBirth4","yearOfBirth","phone","subjectType","feeType","immunization","facility","unitOfImporter","testing","code","isGroup","diseaseType","sampleType","diseaseSample","testTechnique","samplingPlaceId","getImportError","_errorResponse$respon","errorResponse","arguments","response","resultError","succeed","message","data","_errorResponse$respon2","errorMessage","values","error","join","examinationError","uploadData","dataGroupBySampleForm","_response$errors$","_response$errors$$pro","_response$errors$2","_response$failed$","conflict","profileConflicts","conflicts","failed","concat","o","i","_profileConflicts$i","getProfile","raw","exist","updateConflictProfile","_conflictProfile$exis","conflictImmunization","reset","_d$immunizations$","_d$immunizations$2","resolveData","resolveList","u","_u$result","_u$result2","_o$result","resolve","_o$result2","jsx_immunization","_ref2","_immunizationStatusOp","_immunizationStatusOp2","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","sub","dataColumns","accessor","_ref3","cutlength","_ref4","errorColumns","_ref5","_ref6","divided","relaxed","m","Item","color","verticalAlign","Content","Description","jsx_menuTable","panes","menuItem","render","Pane","columns","renderActiveOnly","resultColumns","_r$result","_r$result2","_r$result3","_r$result4","_r$result4$failed$","Fragment","slice","split","jsx_menuResultTable","success","_u$result3","_u$result4","_u$result4$failed","_u$result5","_u$result6","_u$result6$failed","_u$result7","_u$result8","style","fontWeight","actions","icon","title","onClick","_r$result5","hidden","_r$result6","defaultActiveIndex","jsx_downloadTemplate","info","marginBottom","cursor","jsx_content","_u$result9","size","inverted","active","labelPosition","content","current","click","marginTop","marginLeft","ref","onChange","target","files","accept","Actions","positive","_u$result10","negative","Boolean","className","initialSubject","conflictSubject","handleSubmit"],"sources":["H:/BAKCO/pj/cds/src/medical-test/components/assigns/ImportPcrModal.js"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\r\n/* eslint-disable arrow-parens */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-await-in-loop */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable camelcase */\r\n/* eslint-disable react/prop-types */\r\n/* eslint-disable no-param-reassign */\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n  useRef,\r\n} from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport styled from 'styled-components';\r\nimport { toast } from 'react-toastify';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport moment from 'moment';\r\nimport xlsx from 'xlsx';\r\n\r\nimport { FiEdit3 } from 'react-icons/fi';\r\nimport {\r\n  Modal,\r\n  Button,\r\n  Message,\r\n  Icon,\r\n  Header,\r\n  Tab,\r\n  List,\r\n  Dimmer,\r\n  Loader,\r\n  Menu,\r\n} from 'semantic-ui-react';\r\nimport { DataTable } from 'app/components/shared';\r\nimport ProfileSection from 'medical-test/components/quick-test/ProfileSection';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  getProfileWithouDispatch,\r\n  updateProfile,\r\n  updateImmunizationForProfile,\r\n  createImmunizationForProfile,\r\n} from 'profile/actions/profile';\r\nimport {\r\n  getSamplingPlaces,\r\n  getExaminationTypes,\r\n} from 'medical-test/actions/medical-test';\r\nimport {\r\n  formatProfileRequest,\r\n  downloadFile,\r\n  getExaminationError,\r\n  formatAddressToString,\r\n} from 'app/utils/helpers';\r\n\r\nimport locations from 'app/assets/mock/locations';\r\nimport excelTemplate from 'app/assets/excels/Mẫu import PCR.xlsx';\r\nimport { IMMUNIZATION_STATUSES } from 'profile/utils/constants';\r\nimport { createPcrExamination } from 'medical-test/actions/transport';\r\nimport { defaultProfileValue } from 'profile/utils/helpers';\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n`;\r\nconst MenuWrapper = styled.div`\r\n  margin-top: 15px;\r\n  & .tab {\r\n    padding-top: 0.1em !important;\r\n  }\r\n  & .fVDZkI {\r\n    margin-top: 0 !important;\r\n  }\r\n`;\r\n\r\nconst startWithRow = 2;\r\nconst steps = {\r\n  downloadTemplate: 0,\r\n  reviewData: 1,\r\n  result: 2,\r\n};\r\n\r\nconst ImportPcrModal = ({ open, onClose: onCloseProps }) => {\r\n  const [step, setStep] = useState(steps.downloadTemplate);\r\n  const [disabled, setDisabled] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const method = useForm();\r\n\r\n  const fileInputRef = useRef();\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n\r\n  const [informationData, setInformationData] = useState(undefined);\r\n  const [readData, setReadData] = useState([]);\r\n  const [errorData, setErrorData] = useState([]);\r\n  const [uploadResult, setUploadResult] = useState([]);\r\n\r\n  const [conflictProfile, setConflictProfile] = useState(undefined);\r\n\r\n  const dispatch = useDispatch();\r\n  const {\r\n    examinationTypeList,\r\n    samplingPlaceList,\r\n    createImmunizationForProfileLoading,\r\n    updateImmunizationForProfileLoading,\r\n  } = useSelector((state) => state.medicalTest);\r\n  const { updateProfileLoading } = useSelector((state) => state.profile);\r\n\r\n  const exception = useMemo(() => ['#'], []);\r\n  const empty = useMemo(\r\n    () => ['__EMPTY', 'Mã Tổng Hợp', 'Hình thức lấy mẫu'],\r\n    []\r\n  );\r\n  const immunizationStatusOptions = [\r\n    { key: 0, value: IMMUNIZATION_STATUSES.NO_RECORD, text: 'Chưa rõ' },\r\n    { key: 1, value: IMMUNIZATION_STATUSES.NO_VACCINE, text: 'Chưa tiêm' },\r\n    { key: 2, value: IMMUNIZATION_STATUSES.ONE_SHOT, text: 'Tiêm 1 mũi' },\r\n    { key: 3, value: IMMUNIZATION_STATUSES.TWO_SHOT, text: 'Tiêm 2 mũi' },\r\n    {\r\n      key: 4,\r\n      value: IMMUNIZATION_STATUSES.MORE_THAN_TWO_SHOT,\r\n      text: 'Tiêm trên 2 mũi',\r\n    },\r\n  ];\r\n  const errorCode = {\r\n    NULL_UNIT: 'Lỗi: không tìm thấy đơn vị',\r\n    CODE_HAS_BEEN_USED: 'Lỗi: Mã đã được dùng',\r\n    CODE_HAS_BEEN_ISSUED: 'Lỗi: Mã chưa được cấp',\r\n    NULL_DISEASE: 'Lỗi: Không xác định loại bệnh',\r\n    NULL_EXAM_TYPE: 'Lỗi: Không xác định loại xét nghiệm',\r\n    NULL_DISEASE_SAMPLE: 'Lỗi: Không xác định mẫu bệnh phẩm',\r\n    SINGLE_PROFILE_MODIFY_FAILED: 'Lỗi: Tạo/Chỉnh sửa hồ sơ đơn thất bại',\r\n    GROUP_PROFILE_MODIFY_FAILED: 'Lỗi: Tạo/Chỉnh sủa hồ sơ gộp thất bại',\r\n    NULL_SAMPLING_PLACE: 'Lỗi: Nơi lấy mẫu không hợp lệ',\r\n    OVER_DATE_TAKEN: 'Lỗi: Ngày lấy mẫu đã quá 7 ngày',\r\n  };\r\n  const informationModels = useMemo(\r\n    () => [\r\n      {\r\n        row: 2,\r\n        column: 4,\r\n        name: 'nameOfImporter',\r\n      },\r\n      {\r\n        row: 2,\r\n        column: 12,\r\n        name: 'phoneNumberOfImporter',\r\n      },\r\n      {\r\n        row: 2,\r\n        column: 16,\r\n        name: 'unitOfImporter',\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 1,\r\n        name: 'feeType',\r\n        formatter: (__, value) => `${value}`,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc phải chọn loại hình thu phí';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 5,\r\n        name: 'dateTaken',\r\n        formatter: (__, value) => ({\r\n          ...__.dateTaken,\r\n          day: value,\r\n        }),\r\n        validate: (__, value) => {\r\n          const parsed = parseInt(value, 10);\r\n          const day = moment().format('DD');\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập ngày lấy mẫu';\r\n          }\r\n          if (parsed > 31 || parsed < 0) {\r\n            return 'Ngày bắt đầu lấy mẫu không đúng định dạng (31 > ngày > 0)';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 6,\r\n        name: 'dateTaken',\r\n        formatter: (__, value) => ({\r\n          ...__.dateTaken,\r\n          month: value - 1,\r\n        }),\r\n        validate: (__, value) => {\r\n          const parsed = parseInt(value, 10);\r\n          const month = moment().format('MM');\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập tháng lấy mẫu';\r\n          }\r\n          if (parsed > parseInt(month, 10) || parsed < 0) {\r\n            return `Tháng bắt đầu lấy mẫu không đúng định dạng (${month} > tháng > 0)`;\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 7,\r\n        name: 'dateTaken',\r\n        formatter: (__, value) => ({\r\n          ...__.dateTaken,\r\n          year: value,\r\n        }),\r\n        validate: (__, value) => {\r\n          const parsed = parseInt(value, 10);\r\n          const year = moment().format('YYYY');\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập năm lấy mẫu';\r\n          }\r\n          if (parsed > parseInt(year, 10) || parsed < 1921) {\r\n            return `Năm bắt đầu lấy mẫu không đúng định dạng (${year} > năm > 1921)`;\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 8,\r\n        name: 'dateTaken',\r\n        formatter: (__, value) => ({\r\n          ...__.dateTaken,\r\n          hour: value,\r\n        }),\r\n        validate: (__, value) => {\r\n          const parsed = parseInt(value, 10);\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập giờ lấy mẫu';\r\n          }\r\n          if (parsed > 24 || parsed < 1) {\r\n            return 'Giờ bắt đầu lấy mẫu không đúng định dạng (24 > giờ > 1)';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 9,\r\n        name: 'dateTaken',\r\n        formatter: (__, value) => ({\r\n          ...__.dateTaken,\r\n          minute: value,\r\n        }),\r\n        validate: (__, value) => {\r\n          const parsed = parseInt(value, 10);\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập thời gian lấy mẫu';\r\n          }\r\n          if (parsed > 60 || parsed < 0) {\r\n            return 'Phút bắt đầu lấy mẫu không đúng định dạng (60 > phút > 0)';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 11,\r\n        name: 'addressInVietnam',\r\n        formatter: (__, value) => `${value}`,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập địa chỉ chi tiết nơi lấy mẫu';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 13,\r\n        name: 'province',\r\n        formatter: (__, value) => `${value}`,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập tỉnh/thành nơi lấy mẫu';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 16,\r\n        name: 'district',\r\n        formatter: (__, value) => `${value}`,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập quận/huyện nơi lấy mẫu';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 17,\r\n        name: 'ward',\r\n        formatter: (__, value) => `${value}`,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập phường/xã nơi lấy mẫu';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 18,\r\n        name: 'quarter',\r\n        formatter: (__, value) => `${value}`,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập khu phố/ấp nơi lấy mẫu';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        row: 6,\r\n        column: 19,\r\n        name: 'quarterGroup',\r\n        formatter: (__, value) => `${value}`,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập tổ dân phô nơi lấy mẫu';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const dataModels = useMemo(\r\n    () => [\r\n      {\r\n        header: 'Mã Tổng Hợp',\r\n        assign: 'code',\r\n        formatter: (__, value) => value.toUpperCase().trim(),\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập mã tổng hợp';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Hình thức lấy mẫu',\r\n        assign: 'sampleForm',\r\n        formatter: (__, value) => `${value}`,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập hình thức lấy mẫu';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Mã TT (*)',\r\n        assign: 'index',\r\n        formatter: (__, value) => value.toString().trim(),\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập mã thứ tự';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Họ và tên (*)',\r\n        assign: 'name',\r\n        formatter: (__, value) => value.toUpperCase().trim(),\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập họ và tên';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        encoding: false,\r\n        header: 'Ng%E0ysinh',\r\n        assign: 'dateOfBirth',\r\n        formatter: (__, value) => ({\r\n          ...__.dateOfBirth,\r\n          day: value,\r\n        }),\r\n        validate: (__, value) => {\r\n          const parsed = parseInt(value, 10);\r\n          if (parsed > 31 || parsed < 0) {\r\n            return 'Ngày sinh không đúng định dạng (31 > ngày > 0)';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        encoding: false,\r\n        header: 'Th%E1ngsinh',\r\n        assign: 'dateOfBirth',\r\n        formatter: (__, value) => ({\r\n          ...__.dateOfBirth,\r\n          month: value,\r\n        }),\r\n        validate: (__, value) => {\r\n          const parsed = parseInt(value, 10);\r\n          if (parsed > 12 || parsed < 0) {\r\n            return 'Tháng sinh không đúng định dạng (12 > tháng > 0)';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        encoding: false,\r\n        header: 'N%u0103msinh%20%28*%29',\r\n        assign: 'dateOfBirth',\r\n        formatter: (__, value) => ({\r\n          ...__.dateOfBirth,\r\n          year: value,\r\n        }),\r\n        validate: (__, value) => {\r\n          const parsed = parseInt(value, 10);\r\n          const year = moment().format('YYYY');\r\n          if (!value) {\r\n            return 'Bắt buộc phải nhập năm sinh';\r\n          }\r\n          if (parsed > parseInt(year, 10) || parsed < 1921) {\r\n            return `Năm sinh không đúng định dạng (${year} > năm > 1921)`;\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        encoding: false,\r\n        header: 'Gi%u1EDBit%EDnh%20%28*%29',\r\n        assign: 'gender',\r\n        formatter: (__, value) =>\r\n          value.toUpperCase().includes('NAM')\r\n            ? 1\r\n            : value.toUpperCase().includes('KHÁC')\r\n            ? 2\r\n            : 0,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập giới tính';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Số ĐT (*)',\r\n        assign: 'phoneNumber',\r\n        formatter: (__, value) =>\r\n          typeof value === 'number' ? `0${value}` : value,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập số điện thoại';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Tiêm vắc xin (*)',\r\n        assign: 'vaccinationStatus',\r\n        formatter: (__, value) => {\r\n          const status = immunizationStatusOptions.find(\r\n            (p) => p.text.toUpperCase() === value.toUpperCase()\r\n          );\r\n          return status?.value;\r\n        },\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc chọn trạng thái tiêm vắc xin';\r\n          }\r\n\r\n          const status = immunizationStatusOptions.find(\r\n            (p) => p.text.toUpperCase() === value.toUpperCase()\r\n          );\r\n          if (!status) {\r\n            return 'Trạng thái tiêm vắc xin không đúng định dạng';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Ngày tiêm gần nhất',\r\n        assign: 'lastInjectionDate',\r\n        formatter: (__, value) =>\r\n          moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\r\n        validate: (obj, value) => {\r\n          if (typeof obj.immunizationStatus === 'number') {\r\n            if (\r\n              !value &&\r\n              obj.immunizationStatus >= IMMUNIZATION_STATUSES.ONE_SHOT\r\n            ) {\r\n              return 'Bắt buộc nhập ngày tiêm (mũi 1)';\r\n            }\r\n\r\n            const date = moment(value, 'DD/MM/YYYY');\r\n            const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\r\n            const afterDate = moment().endOf('day');\r\n            if (date > afterDate || date < beforeDate) {\r\n              return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format(\r\n                'DD/MM/YYYY'\r\n              )} đến ${afterDate.format('DD/MM/YYYY')}`;\r\n            }\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Địa chỉ chi tiết (*)',\r\n        assign: 'streetHouseNumber',\r\n        formatter: (__, value) => value.toString().trim(),\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập họ và tên';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Tỉnh/Thành (*)',\r\n        assign: 'provinceValue',\r\n        formatter: (__, value) =>\r\n          locations?.find((p) =>\r\n            p?.label?.toLowerCase()?.includes(`${value}`.toLowerCase())\r\n          )?.value,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập tỉnh/thành';\r\n          }\r\n          const province = locations?.find((p) =>\r\n            p?.label?.toLowerCase()?.includes(`${value}`.toLowerCase())\r\n          );\r\n          if (!province) {\r\n            return 'Tỉnh/Thành không hợp lệ';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Quận/Huyện (*)',\r\n        assign: 'districtValue',\r\n        formatter: (__, value) =>\r\n          locations\r\n            ?.find((p) =>\r\n              p?.value\r\n                ?.toLowerCase()\r\n                ?.includes(`${__.provinceValue}`.toLowerCase())\r\n            )\r\n            ?.districts?.find((d) =>\r\n              d?.label?.toLowerCase()?.includes(`${value}`.toLowerCase())\r\n            )?.value,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập quận/huyện';\r\n          }\r\n          if (__?.provinceValue) {\r\n            const district = locations\r\n              ?.find((p) =>\r\n                p.value\r\n                  ?.toLowerCase()\r\n                  ?.includes(`${__.provinceValue}`.toLowerCase())\r\n              )\r\n              ?.districts?.find((d) =>\r\n                d.label?.toLowerCase()?.includes(`${value}`.toLowerCase())\r\n              );\r\n            if (!district) {\r\n              return 'Quận/Huyện không hợp lệ';\r\n            }\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Phường/Xã (*)',\r\n        assign: 'wardValue',\r\n        formatter: (__, value) =>\r\n          locations\r\n            ?.find((p) =>\r\n              p?.value\r\n                ?.toLowerCase()\r\n                ?.includes(`${__.provinceValue}`.toLowerCase())\r\n            )\r\n            ?.districts?.find((d) =>\r\n              d?.value\r\n                ?.toLowerCase()\r\n                ?.includes(`${__.districtValue}`.toLowerCase())\r\n            )\r\n            ?.wards?.find((d) =>\r\n              d?.label?.toLowerCase()?.includes(`${value}`.toLowerCase())\r\n            )?.value,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập phường/xã';\r\n          }\r\n          if (__?.provinceValue && __?.districtValue) {\r\n            const ward = locations\r\n              ?.find((p) =>\r\n                p?.value\r\n                  ?.toLowerCase()\r\n                  ?.includes(`${__.provinceValue}`.toLowerCase())\r\n              )\r\n              ?.districts?.find((d) =>\r\n                d?.value\r\n                  ?.toLowerCase()\r\n                  ?.includes(`${__.districtValue}`.toLowerCase())\r\n              )\r\n              ?.wards?.find((d) =>\r\n                d?.label?.toLowerCase()?.includes(`${value}`.toLowerCase())\r\n              );\r\n            if (!ward) {\r\n              return 'Phường/Xã không hợp lệ';\r\n            }\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Khu phố / Thôn / Ấp (*)',\r\n        assign: 'quarter',\r\n        formatter: (__, value) => value.toString().trim(),\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập khu phố/thôn/ấp';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Tổ DP (*)',\r\n        assign: 'quarterGroup',\r\n        formatter: (__, value) => value.toString().trim(),\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập khu tổ dân phố';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Lý do lấy mẫu (*)',\r\n        assign: 'examinationType',\r\n        formatter: (__, value) =>\r\n          examinationTypeList.find((s) => {\r\n            let keyword = value.toLowerCase().trim();\r\n            let match = /(\\d+.\\s+)(.*)/i.exec(keyword);\r\n            if (match === null) {\r\n              match = /(\\d+.\\s+)(.*)/i.exec(keyword);\r\n              if (match !== null) {\r\n                // eslint-disable-next-line prefer-destructuring\r\n                keyword = match[2];\r\n              }\r\n            } else {\r\n              // eslint-disable-next-line prefer-destructuring\r\n              keyword = match[2];\r\n            }\r\n\r\n            const name = s.name.toLowerCase().trim();\r\n            return name.includes(keyword.normalize('NFC'));\r\n          })?.name,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập lý do lấy mẫu';\r\n          }\r\n          const examinationType = examinationTypeList.find((s) => {\r\n            let keyword = value.toLowerCase().trim();\r\n            let match = /(\\d+.\\s+)(.*)/i.exec(keyword);\r\n            if (match === null) {\r\n              match = /(\\d+.\\s+)(.*)/i.exec(keyword);\r\n              if (match !== null) {\r\n                // eslint-disable-next-line prefer-destructuring\r\n                keyword = match[2];\r\n              }\r\n            } else {\r\n              // eslint-disable-next-line prefer-destructuring\r\n              keyword = match[2];\r\n            }\r\n            const name = s.name.toLowerCase().trim();\r\n            return (\r\n              name.includes(keyword.normalize('NFC')) ||\r\n              keyword.normalize('NFC').includes(name)\r\n            );\r\n          });\r\n          if (!examinationType) {\r\n            return 'Lý do lấy mẫu không hợp lệ';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Nơi lấy mẫu (*)',\r\n        assign: 'samplingPlaceId',\r\n        formatter: (__, value) =>\r\n          samplingPlaceList.find((s) => {\r\n            const keyword = /(\\d+.\\s+)(.*)/i.exec(\r\n              value.toLowerCase().trim()\r\n            )[2];\r\n            const name = /(\\d+.\\s+)(.*)/i.exec(s.name.toLowerCase().trim())[2];\r\n            return name.normalize('NFC') === keyword.normalize('NFC');\r\n          })?.id,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buôc phải nhập nơi lấy mẫu (loại hình)';\r\n          }\r\n          const samplingPlace = samplingPlaceList.find((s) => {\r\n            const keyword = /(\\d+.\\s+)(.*)/i.exec(\r\n              value.toLowerCase().trim()\r\n            )[2];\r\n            const name = /(\\d+.\\s+)(.*)/i.exec(s.name.toLowerCase().trim())[2];\r\n            return name.normalize('NFC') === keyword.normalize('NFC');\r\n          });\r\n          if (!samplingPlace) {\r\n            return 'Nơi lấy mẫu không hợp lệ';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Mẫu bệnh phẩm (*)',\r\n        assign: 'diseaseSample',\r\n        formatter: (__, value) => value,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập mẫu bệnh phẩm';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n      {\r\n        header: 'Kỹ thuật xét nghiệm (*)',\r\n        assign: 'testTechnique',\r\n        formatter: (__, value) => value,\r\n        validate: (__, value) => {\r\n          if (!value) {\r\n            return 'Bắt buộc nhập kỹ thuật xét nghiệm';\r\n          }\r\n          return false;\r\n        },\r\n      },\r\n    ],\r\n    [examinationTypeList, samplingPlaceList]\r\n  );\r\n\r\n  const refresh = () => {\r\n    setStep(steps.downloadTemplate);\r\n    setDisabled(false);\r\n    setSelectedFile(null);\r\n    setReadData([]);\r\n    setErrorData([]);\r\n    setUploadResult([]);\r\n  };\r\n\r\n  // #region Parse data\r\n  const parseSheetInformation = useCallback(\r\n    (binary) => {\r\n      try {\r\n        const book = xlsx.read(binary, {\r\n          type: 'binary',\r\n          cellDates: true,\r\n          cellNF: false,\r\n          cellText: false,\r\n        });\r\n\r\n        const sheet = book.Sheets[book.SheetNames[0]];\r\n        const parserData = informationModels.reduce((obj, model) => {\r\n          const value =\r\n            sheet[xlsx.utils.encode_cell({ r: model.row, c: model.column })]?.v;\r\n          const validation = model?.validate\r\n            ? model.validate(obj, value)\r\n            : false;\r\n          if (!validation) {\r\n            obj[model.name] = model?.formatter\r\n              ? model.formatter(obj, value)\r\n              : value;\r\n          }\r\n          return obj;\r\n        }, {});\r\n        setInformationData(parserData);\r\n      } catch (e) {\r\n        toast.warn('Tệp tin không đúng định dạng');\r\n      }\r\n    },\r\n    [informationModels]\r\n  );\r\n  const parseSheetData = useCallback(\r\n    (binary) => {\r\n      try {\r\n        const book = xlsx.read(binary, {\r\n          type: 'binary',\r\n          cellDates: true,\r\n          cellNF: false,\r\n          cellText: false,\r\n        });\r\n\r\n        const sheet = book.Sheets[book.SheetNames[1]];\r\n        const rawData = xlsx.utils\r\n          .sheet_to_json(sheet, { range: startWithRow })\r\n          .map((row) =>\r\n            Object.keys(row).reduce((obj, key) => {\r\n              const convertedKey = key.replace(/(\\r\\n|\\n|\\r)/gm, '').trim();\r\n              if (!exception.includes(convertedKey)) {\r\n                obj[escape(convertedKey)] = row[key];\r\n              }\r\n              return obj;\r\n            }, {})\r\n          )\r\n          .filter((row) => Object.keys(row).length > empty.length);\r\n        const parserData = rawData.map((row, index) =>\r\n          dataModels.reduce((obj, props) => {\r\n            const header =\r\n              typeof props.encoding !== 'undefined'\r\n                ? props.encoding\r\n                  ? escape(props.header)\r\n                  : props.header\r\n                : escape(props.header);\r\n            const resultOfValidation = props?.validate\r\n              ? props.validate(obj, row[header])\r\n              : false;\r\n            if (resultOfValidation) {\r\n              if (typeof obj.errors === 'undefined') {\r\n                obj.errors = {\r\n                  row: index + 1,\r\n                  messages: [],\r\n                };\r\n              }\r\n              obj.errors.messages.push(resultOfValidation);\r\n            } else if (\r\n              typeof row[header] !== 'undefined' &&\r\n              row[header] !== ''\r\n            ) {\r\n              obj[props.assign] = props?.formatter\r\n                ? props.formatter(obj, row[header])\r\n                : row[header];\r\n            }\r\n            return obj;\r\n          }, {})\r\n        );\r\n        setReadData(parserData.filter((d) => !d?.errors));\r\n        setErrorData(parserData.filter((d) => d?.errors));\r\n      } catch (e) {\r\n        toast.warn('Tệp tin không đúng định dạng');\r\n      }\r\n    },\r\n    [dataModels]\r\n  );\r\n  useEffect(() => {\r\n    if (selectedFile) {\r\n      const reader = new FileReader();\r\n      if (reader.readAsBinaryString) {\r\n        reader.onload = () => {\r\n          parseSheetInformation(reader.result);\r\n          parseSheetData(reader.result);\r\n          setStep(steps.reviewData);\r\n        };\r\n        reader.readAsBinaryString(selectedFile);\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [selectedFile]);\r\n  // #endregion\r\n\r\n  // #region Upload data\r\n  const formatDateOfBirth = (d) => {\r\n    if (d?.day && d?.month) {\r\n      const formatData = {\r\n        year: d.year,\r\n        month: d.month.toString().length === 1 ? `0${d.month}` : d.month,\r\n        day: d.day.toString().length === 1 ? `0${d.day}` : d.day,\r\n      };\r\n      return `${formatData.year}-${formatData.month}-${formatData.day}`;\r\n    }\r\n    return `${d.year}-01-01`;\r\n  };\r\n  const onClose = () => {\r\n    refresh();\r\n    onCloseProps();\r\n  };\r\n\r\n  const formatRequestForProfile = (d) => ({\r\n    fullName: d.name,\r\n    gender: d.gender,\r\n    cmnd: d?.identityCard\r\n      ? d.identityCard.length !== 12\r\n        ? `${d.identityCard}`\r\n        : null\r\n      : null,\r\n    cccd: d?.identityCard\r\n      ? d.identityCard.length === 12\r\n        ? `${d.identityCard}`\r\n        : null\r\n      : null,\r\n    phoneNumber: d.phoneNumber,\r\n    dateOfBirth: d.dateOfBirth,\r\n    hasYearOfBirthOnly: false,\r\n    nationality: 'vn',\r\n    initialMovingInformation: d?.initialMovingInformation ?? '',\r\n    workAddresses: [\r\n      {\r\n        provinceValue: d.workplaceProvinceValue,\r\n        districtValue: d.workplaceDistrictValue,\r\n        wardValue: d.workplaceWardValue,\r\n        streetHouseNumber: d.streetWorkplaceNumber,\r\n      },\r\n    ],\r\n    addressesInVietnam: [\r\n      {\r\n        provinceValue: d.provinceValue,\r\n        districtValue: d.districtValue,\r\n        wardValue: d.wardValue,\r\n        quarter: d.quarter,\r\n        quarterGroup: d.quarterGroup,\r\n        streetHouseNumber: d.streetHouseNumber,\r\n      },\r\n    ],\r\n    immunizations: [\r\n      {\r\n        disease: 'Covid-19',\r\n        immunizationStatus: d.vaccinationStatus,\r\n        // vaccine: d.vaccine,\r\n        injectionDate: d?.lastInjectionDate\r\n          ? moment(d.lastInjectionDate).format('YYYY-MM-DDT02:00:00')\r\n          : null,\r\n      },\r\n    ],\r\n    symptoms: [],\r\n    profileCreationReason: {\r\n      reason: examinationTypeList.find((e) => e.id === d.examinationTypeId)\r\n        ?.name,\r\n      reasonType: examinationTypeList.find((e) => e.id === d.examinationTypeId)\r\n        ?.name,\r\n    },\r\n  });\r\n  const formatRequestForImmunization = (d, id, profileId) => ({\r\n    id,\r\n    guid: id,\r\n    profileId,\r\n    disease: 'Covid-19',\r\n    immunizationStatus: d.immunizationStatus,\r\n    // vaccine: d.vaccine,\r\n    injectionDate: d?.injectionDate\r\n      ? moment(d.injectionDate).format('YYYY-MM-DDT02:00:00')\r\n      : null,\r\n  });\r\n  const formatExamination = (d) => [\r\n    {\r\n      profiles: Array.isArray(d)\r\n        ? d.map((obj) => ({\r\n            reason: obj.examinationType,\r\n            fullName: obj.name,\r\n            gender: obj.gender === 1 ? 'Nam' : 'Nữ',\r\n            yearOfBirth: !(obj.dateOfBirth?.day && obj.dateOfBirth?.month)\r\n              ? obj.dateOfBirth.year\r\n              : undefined,\r\n            dateOfBirth:\r\n              obj.dateOfBirth?.day && obj.dateOfBirth?.month\r\n                ? formatDateOfBirth(obj.dateOfBirth)\r\n                : undefined,\r\n            phone: obj.phoneNumber,\r\n            cmnd: uuidv4(),\r\n            streetHouseNumber: obj.streetHouseNumber,\r\n            provinceValue: obj.provinceValue,\r\n            districtValue: obj.districtValue,\r\n            wardValue: obj.wardValue,\r\n            quarter: obj.quarter,\r\n            quarterGroup: obj.quarterGroup,\r\n            subjectType: informationData.feeType,\r\n            immunization: {\r\n              immunizationStatus: obj.vaccinationStatus,\r\n              reason: obj.examinationType,\r\n              disease: 'Covid-19',\r\n              injectionDate: obj?.lastInjectionDate\r\n                ? moment(obj.lastInjectionDate).format('YYYY-MM-DDT02:00:00')\r\n                : null,\r\n            },\r\n          }))\r\n        : [\r\n            {\r\n              reason: d.examinationType,\r\n              fullName: d.name,\r\n              gender: d.gender === 1 ? 'Nam' : 'Nữ',\r\n              yearOfBirth: !(d.dateOfBirth?.day && d.dateOfBirth?.month)\r\n                ? d.dateOfBirth.year\r\n                : undefined,\r\n              dateOfBirth:\r\n                d.dateOfBirth?.day && d.dateOfBirth?.month\r\n                  ? formatDateOfBirth(d.dateOfBirth)\r\n                  : undefined,\r\n              phone: d.phoneNumber,\r\n              cmnd: uuidv4(),\r\n              streetHouseNumber: d.streetHouseNumber,\r\n              provinceValue: d.provinceValue,\r\n              districtValue: d.districtValue,\r\n              wardValue: d.wardValue,\r\n              quarter: d.quarter,\r\n              quarterGroup: d.quarterGroup,\r\n              subjectType: d.feeType,\r\n              immunization: {\r\n                immunizationStatus: d.vaccinationStatus,\r\n                reason: d.examinationType,\r\n                disease: 'Covid-19',\r\n                injectionDate: d?.lastInjectionDate\r\n                  ? moment(d.lastInjectionDate).format('YYYY-MM-DDT02:00:00')\r\n                  : null,\r\n              },\r\n            },\r\n          ],\r\n      assign: {\r\n        date: informationData.dateTaken.day\r\n          ? moment(informationData.dateTaken).format('YYYY-MM-DD HH:mm')\r\n          : null,\r\n        facility: informationData.unitOfImporter,\r\n      },\r\n      testing: Array.isArray(d)\r\n        ? {\r\n            code: d[0].code,\r\n            isGroup: d.length > 1,\r\n            reason: d[0].examinationType,\r\n            streetHouseNumber: d[0].streetHouseNumber,\r\n            provinceValue: d[0].provinceValue,\r\n            districtValue: d[0].districtValue,\r\n            wardValue: d[0].wardValue,\r\n            quarter: d[0].quarter,\r\n            quarterGroup: d[0].quarterGroup,\r\n            dateTaken: informationData.dateTaken.day\r\n              ? moment(informationData.dateTaken).format('YYYY-MM-DD HH:mm')\r\n              : null,\r\n            diseaseType: 'U07',\r\n            feeType: informationData.feeType,\r\n            subjectType: informationData.feeType,\r\n            sampleType: d[0].diseaseSample,\r\n            testTechnique: d[0].testTechnique,\r\n            samplingPlaceId: d[0].samplingPlaceId,\r\n          }\r\n        : {\r\n            code: d.code,\r\n            isGroup: d.length > 1,\r\n            reason: d.examinationType,\r\n            streetHouseNumber: informationData.streetHouseNumber,\r\n            provinceValue: informationData.provinceValue,\r\n            districtValue: informationData.districtValue,\r\n            wardValue: informationData.wardValue,\r\n            quarter: informationData.quarter,\r\n            quarterGroup: informationData.quarterGroup,\r\n            dateTaken: moment(informationData.dateTaken).format('YYYY-MM-DD'),\r\n            diseaseType: 'U07',\r\n            feeType: informationData.feeType,\r\n            subjectType: informationData.feeType,\r\n            sampleType: d.diseaseSample,\r\n            testTechnique: d.testTechnique,\r\n            samplingPlaceId: d.samplingPlaceId,\r\n          },\r\n    },\r\n  ];\r\n  const getImportError = (\r\n    errorResponse = { response: {} },\r\n    profileId = undefined\r\n  ) => {\r\n    const resultError = {\r\n      succeed: false,\r\n      message: 'Lỗi không xác định',\r\n    };\r\n    if (errorResponse.response?.data) {\r\n      if (typeof errorResponse.response.data === 'object') {\r\n        const { errors, errorMessage } = errorResponse.response?.data;\r\n        if (errors) {\r\n          resultError.message = Object.values(errors)\r\n            .map((error) => error.join(''))\r\n            .join(', ');\r\n        }\r\n        if (errorMessage) {\r\n          if (errorMessage.includes('Conflicted')) {\r\n            resultError.message = 'Xung đột thông tin hồ sơ';\r\n            resultError.profileId = profileId;\r\n          } else if (errorMessage.includes('Trùng')) {\r\n            resultError.message = 'Mẫu đã được ghi nhận';\r\n          } else {\r\n            const examinationError = getExaminationError(errorMessage);\r\n            if (examinationError) {\r\n              resultError.message = examinationError;\r\n            }\r\n          }\r\n        }\r\n      } else if (typeof errorResponse.response.data === 'string') {\r\n        if (\r\n          errorResponse.response.data.includes(\r\n            'Record is existed or only update'\r\n          ) ||\r\n          errorResponse.response.data.includes(\r\n            'Record is existed but dates are not the same'\r\n          )\r\n        ) {\r\n          resultError.message = 'Xung đột tiền sử tiêm chủng';\r\n          resultError.profileId = profileId;\r\n        } else {\r\n          const examinationError = getExaminationError(\r\n            errorResponse.response.data\r\n          );\r\n          if (examinationError) {\r\n            resultError.message = examinationError;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return resultError;\r\n  };\r\n  const uploadData = async () => {\r\n    setLoading(true);\r\n    const dataGroupBySampleForm = readData.reduce((result, obj) => {\r\n      if (result[obj.index]) {\r\n        result[obj.index] = [...result[obj.index], obj];\r\n      } else {\r\n        result[obj.index] = [obj];\r\n      }\r\n      return result;\r\n    }, {});\r\n    const keys = Object.keys(dataGroupBySampleForm);\r\n    for (const key of keys) {\r\n      try {\r\n        const response = await dispatch(\r\n          createPcrExamination(formatExamination(dataGroupBySampleForm[key]))\r\n        );\r\n        const conflict = response?.errors[0]?.profileConflicts[0]?.conflicts;\r\n        const profileConflicts = response?.errors[0]?.profileConflicts;\r\n        if (response?.failed[0]?.length > 0) {\r\n          if (conflict) {\r\n            setUploadResult((r) =>\r\n              r.concat(\r\n                dataGroupBySampleForm[key].map((o, i) => ({\r\n                  ...o,\r\n                  result: {\r\n                    succeed: false,\r\n                    profileId: profileConflicts[i]?.profileId,\r\n                    message: 'Xung đột hồ sơ',\r\n                  },\r\n                }))\r\n              )\r\n            );\r\n            // eslint-disable-next-line no-continue\r\n            continue;\r\n          }\r\n        }\r\n        setUploadResult((r) =>\r\n          r.concat(\r\n            dataGroupBySampleForm[key].map((o, i) => ({\r\n              ...o,\r\n              result: { ...response, succeed: true },\r\n            }))\r\n          )\r\n        );\r\n      } catch (e) {\r\n        const error = getImportError(e);\r\n        setUploadResult((r) =>\r\n          r.concat(\r\n            dataGroupBySampleForm[key].map((o, i) => ({\r\n              ...o,\r\n              result: { ...error },\r\n            }))\r\n          )\r\n        );\r\n      }\r\n    }\r\n    /* For group profile */\r\n    // if (key.includes('GỘP')) {\r\n    //   for (const data in dataGroupBySampleForm[key]) {\r\n    //   }\r\n    // } else {\r\n    //   /* For single profile */\r\n    //   for (const data of dataGroupBySampleForm[key]) {\r\n    //     try {\r\n    //     } catch (e) {\r\n    //       const error = getImportError(e);\r\n    //       setUploadResult((r) => ([...r, { ...data, result: { ...error } }]));\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    setLoading(false);\r\n    setStep(steps.result);\r\n  };\r\n  // #endregion\r\n\r\n  // #region Resolve data\r\n  const getProfile = async (row, id) => {\r\n    try {\r\n      const profile = await getProfileWithouDispatch(id);\r\n      setConflictProfile({\r\n        row,\r\n        raw: formatRequestForProfile(row),\r\n        exist: profile,\r\n      });\r\n      // eslint-disable-next-line no-empty\r\n    } catch (e) {}\r\n  };\r\n  // #endregion\r\n  const updateConflictProfile = async (d) => {\r\n    try {\r\n      await dispatch(updateProfile(formatProfileRequest(d), false));\r\n      if (d?.immunizations && d.immunizations.length > 0) {\r\n        const immunization = d.immunizations[0];\r\n        const conflictImmunization = conflictProfile.exist?.immunizations[0];\r\n        if (\r\n          typeof conflictImmunization !== 'undefined' &&\r\n          typeof conflictImmunization.immunizationStatus === 'number'\r\n        ) {\r\n          if (\r\n            typeof immunization.immunizationStatus === 'number' &&\r\n            immunization.immunizationStatus ===\r\n              conflictImmunization.immunizationStatus\r\n          ) {\r\n            immunization.guid = conflictImmunization?.guid;\r\n          }\r\n        }\r\n        await dispatch(\r\n          immunization?.guid\r\n            ? updateImmunizationForProfile(\r\n                formatRequestForImmunization(\r\n                  immunization,\r\n                  immunization.guid,\r\n                  d.id\r\n                )\r\n              )\r\n            : createImmunizationForProfile(\r\n                formatRequestForImmunization(immunization, undefined, d.id)\r\n              )\r\n        );\r\n      }\r\n      method.reset(defaultProfileValue);\r\n      setUploadResult((r) => {\r\n        const reduce = r.reduce((result, row) => {\r\n          if (row.result.profileId === d.id) {\r\n            row.streetHouseNumber = d?.addressesInVietnam[0].streetHouseNumber;\r\n            row.provinceValue = d?.addressesInVietnam[0].provinceValue;\r\n            row.districtValue = d?.addressesInVietnam[0].districtValue;\r\n            row.wardValue = d?.addressesInVietnam[0].wardValue;\r\n            row.quarter = d?.addressesInVietnam[0].quarter;\r\n            row.quarterGroup = d?.addressesInVietnam[0].quarterGroup;\r\n            row.vaccinationStatus = d?.immunizations[0]?.immunizationStatus;\r\n            row.lastInjectionDate = d?.immunizations[0]?.injectionDate;\r\n            return [\r\n              ...result,\r\n              {\r\n                ...row,\r\n                result: {\r\n                  succeed: false,\r\n                  profileId: row.result.profileId,\r\n                  message: 'Đã chỉnh sửa, cần upload lại',\r\n                },\r\n              },\r\n            ];\r\n          }\r\n          return [...result, row];\r\n        }, []);\r\n        return reduce;\r\n      });\r\n    } catch (e) {\r\n      setUploadResult((r) => {\r\n        const reduce = r.reduce((result, row) => {\r\n          if (row.result.profileId === d.id) {\r\n            const error = getImportError(e);\r\n            if (\r\n              !error?.message ||\r\n              error.message.includes('Lỗi không xác định')\r\n            ) {\r\n              return [...result, { ...row, result: { ...error } }];\r\n            }\r\n            return [\r\n              ...result,\r\n              { ...row, result: { ...error, profileId: row.result.profileId } },\r\n            ];\r\n          }\r\n          return [...result, row];\r\n        }, []);\r\n        return reduce;\r\n      });\r\n    } finally {\r\n      setConflictProfile(undefined);\r\n    }\r\n  };\r\n  const resolveData = async () => {\r\n    setLoading(true);\r\n    const resolveList = uploadResult.filter(\r\n      (u) => u?.result?.message && u.result.message.includes('Đã chỉnh sửa')\r\n    );\r\n    const dataGroupBySampleForm = uploadResult.reduce((result, obj) => {\r\n      if (result[obj.index]) {\r\n        result[obj.index] = [...result[obj.index], obj];\r\n      } else {\r\n        result[obj.index] = [obj];\r\n      }\r\n      return result;\r\n    }, {});\r\n    const keys = Object.keys(dataGroupBySampleForm);\r\n    for (const key of keys) {\r\n      try {\r\n        if (\r\n          dataGroupBySampleForm[key].filter(\r\n            (u) =>\r\n              u?.result?.message && u.result.message.includes('Đã chỉnh sửa')\r\n          ).length > 0\r\n        ) {\r\n          const response = await dispatch(\r\n            createPcrExamination(formatExamination(dataGroupBySampleForm[key]))\r\n          );\r\n          // setUploadResult((r) => {\r\n          //   const reduce = r.reduce((result, row) => {\r\n          //     for (const resolve of dataGroupBySampleForm[key]) {\r\n          //       if (row.result.profileId === resolve.result.profileId) {\r\n          //         return [...result, { ...row, result: { ...response, succeed: true } }];\r\n          //       }\r\n          //       return [...result, row];\r\n          //     }\r\n          //   }, []);\r\n          //   return reduce;\r\n          // });\r\n          setUploadResult((r) =>\r\n            r\r\n              .concat(\r\n                dataGroupBySampleForm[key].map((o, i) => ({\r\n                  ...o,\r\n                  result: { ...response, succeed: true },\r\n                }))\r\n              )\r\n              .filter((o) => !o?.result?.profileId)\r\n          );\r\n        }\r\n      } catch (e) {\r\n        // const error = getImportError(e);\r\n        // setUploadResult((r) => ([...r, { ...resolve['0'], result: { ...error } }]));\r\n        setUploadResult((r) => {\r\n          for (const resolve of dataGroupBySampleForm[key]) {\r\n            const reduce = r.reduce((result, row) => {\r\n              if (row.result.profileId === resolve.result.profileId) {\r\n                return [\r\n                  ...result,\r\n                  { ...row, result: { ...getImportError(e) } },\r\n                ];\r\n              }\r\n              return [...result, row];\r\n            }, []);\r\n            return r.concat(reduce).filter((o) => !o?.result?.profileId);\r\n          }\r\n        });\r\n      }\r\n    }\r\n    setStep(steps.result);\r\n    setLoading(false);\r\n  };\r\n  // #region Component\r\n  const jsx_immunization = useCallback(\r\n    ({ vaccinationStatus, lastInjectionDate }) => (\r\n      <div>\r\n        {typeof vaccinationStatus !== 'undefined' ? (\r\n          <Header sub>\r\n            {immunizationStatusOptions.find(\r\n              (o) => o.value === vaccinationStatus\r\n            )?.text ?? ''}\r\n          </Header>\r\n        ) : null}\r\n        {typeof lastInjectionDate !== 'undefined' &&\r\n        vaccinationStatus !== 0 &&\r\n        vaccinationStatus !== 3 ? (\r\n          <span>{moment(lastInjectionDate).format('DD-MM-YYYY')}</span>\r\n        ) : null}\r\n      </div>\r\n    ),\r\n    []\r\n  );\r\n\r\n  const dataColumns = useMemo(\r\n    () => [\r\n      {\r\n        Header: '#',\r\n        accessor: 'index',\r\n      },\r\n      {\r\n        Header: 'Hình thức lấy mẫu',\r\n        accessor: 'sampleForm',\r\n      },\r\n      {\r\n        Header: 'Người được lấy mẫu',\r\n        accessor: 'name',\r\n      },\r\n      {\r\n        Header: 'Số điện thoại',\r\n        accessor: 'phoneNumber',\r\n      },\r\n      {\r\n        Header: 'Địa chỉ',\r\n        formatter: ({\r\n          streetHouseNumber,\r\n          provinceValue,\r\n          districtValue,\r\n          wardValue,\r\n        }) =>\r\n          formatAddressToString({\r\n            streetHouseNumber,\r\n            provinceValue,\r\n            districtValue,\r\n            wardValue,\r\n          }),\r\n        cutlength: 30,\r\n      },\r\n      {\r\n        Header: 'Tiền sử tiêm chủng',\r\n        formatter: (d) => jsx_immunization(d),\r\n      },\r\n      {\r\n        Header: 'Mã xét nghiệm',\r\n        formatter: ({ code }) => (code?.length === 12 ? <b>{code}</b> : code),\r\n      },\r\n      {\r\n        Header: 'Ngày lấy mẫu',\r\n        formatter: () =>\r\n          informationData.dateTaken\r\n            ? moment(informationData.dateTaken).format('DD-MM-YY HH:mm')\r\n            : '',\r\n      },\r\n      {\r\n        Header: 'Kỹ thuật xét nghiệm',\r\n        accessor: 'testTechnique',\r\n      },\r\n    ],\r\n    [informationData],\r\n    jsx_immunization\r\n  );\r\n  const errorColumns = useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Hàng',\r\n        formatter: ({ errors }) => <Header sub>{errors?.row}</Header>,\r\n      },\r\n      {\r\n        Header: ' ',\r\n        formatter: ({ errors }) =>\r\n          errors?.messages ? (\r\n            <List divided relaxed>\r\n              {errors.messages.map((m) => (\r\n                <List.Item key={m}>\r\n                  <List.Icon name='x' color='red' verticalAlign='middle' />\r\n                  <List.Content>\r\n                    <List.Description>{m}</List.Description>\r\n                  </List.Content>\r\n                </List.Item>\r\n              ))}\r\n            </List>\r\n          ) : null,\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  const jsx_menuTable = useMemo(() => {\r\n    const panes = [\r\n      {\r\n        menuItem: `Dữ liệu đọc được (${readData.length})`,\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <DataTable columns={dataColumns} data={readData} />\r\n          </Tab.Pane>\r\n        ),\r\n      },\r\n      {\r\n        menuItem: `Dữ liệu bị lỗi (${errorData.length})`,\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <DataTable columns={errorColumns} data={errorData} />\r\n          </Tab.Pane>\r\n        ),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <MenuWrapper>\r\n        <Tab panes={panes} renderActiveOnly />\r\n      </MenuWrapper>\r\n    );\r\n  }, [readData, errorData, dataColumns, errorColumns]);\r\n\r\n  const resultColumns = useMemo(\r\n    () => [\r\n      {\r\n        Header: '#',\r\n        accessor: 'index',\r\n      },\r\n      {\r\n        Header: 'Mã xét nghiệm',\r\n        accessor: 'code',\r\n      },\r\n      {\r\n        Header: 'Người được lấy mẫu',\r\n        accessor: 'name',\r\n      },\r\n      {\r\n        Header: 'Số điện thoại',\r\n        accessor: 'phoneNumber',\r\n      },\r\n      {\r\n        Header: 'Hình thức lấy mẫu',\r\n        accessor: 'sampleForm',\r\n      },\r\n      {\r\n        Header: 'Ngày lấy mẫu',\r\n        formatter: () =>\r\n          informationData.dateTaken\r\n            ? moment(informationData.dateTaken).format('DD-MM-YY HH:mm')\r\n            : '',\r\n      },\r\n      {\r\n        Header: 'Kỹ thuật xét nghiệm',\r\n        accessor: 'testTechnique',\r\n      },\r\n      {\r\n        Header: ' ',\r\n        formatter: (r) => (\r\n          <>\r\n            <Icon name='info circle' />\r\n            {r?.result?.succeed && r?.result?.failed.length === 0\r\n              ? 'Thành công'\r\n              : r?.result?.message ||\r\n                errorCode[\r\n                  r?.result?.failed[0]\r\n                    ?.slice(14)\r\n                    .split(/\\s/)[0]\r\n                    .replace(/:/g, '')\r\n                ]}\r\n          </>\r\n        ),\r\n      },\r\n    ],\r\n    [informationData, jsx_immunization]\r\n  );\r\n  const jsx_menuResultTable = useMemo(() => {\r\n    const panes = [];\r\n    const success = uploadResult.filter(\r\n      (u) => u?.result?.succeed && u?.result?.failed?.length === 0\r\n    );\r\n    const error = uploadResult.filter(\r\n      (u) => u?.result?.succeed && u?.result?.failed?.length !== 0\r\n    );\r\n    const resolve = uploadResult.filter(\r\n      (u) => !u?.result?.succeed && u?.result?.profileId !== 0\r\n    );\r\n    if (success.length > 0) {\r\n      panes.push({\r\n        menuItem: (\r\n          <Menu.Item key='success'>\r\n            {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n            <span style={{ fontWeight: '700' }}>Thành công</span>&nbsp; (\r\n            {success.length})\r\n          </Menu.Item>\r\n        ),\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <DataTable\r\n              columns={resultColumns}\r\n              data={success.map((d, i) => ({ ...d, index: i + 1 }))}\r\n            />\r\n          </Tab.Pane>\r\n        ),\r\n      });\r\n    }\r\n    if (resolve.length > 0) {\r\n      panes.push({\r\n        menuItem: (\r\n          <Menu.Item key='resolve'>\r\n            {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n            <span style={{ fontWeight: '700' }}>Cần chỉnh sửa</span>&nbsp; (\r\n            {resolve.length})\r\n          </Menu.Item>\r\n        ),\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <DataTable\r\n              columns={resultColumns}\r\n              data={resolve.map((d, i) => ({ ...d, index: i + 1 }))}\r\n              actions={[\r\n                {\r\n                  icon: <FiEdit3 />,\r\n                  color: 'purple',\r\n                  title: 'Cập nhật hồ sơ',\r\n                  onClick: (r) => getProfile(r, r?.result?.profileId),\r\n                  hidden: (r) => !r?.result?.profileId,\r\n                },\r\n              ]}\r\n            />\r\n          </Tab.Pane>\r\n        ),\r\n      });\r\n    }\r\n    if (error.length > 0) {\r\n      panes.push({\r\n        menuItem: (\r\n          <Menu.Item key='error'>\r\n            {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\r\n            <span style={{ fontWeight: '700' }}>Lỗi</span>&nbsp; ({error.length}\r\n            )\r\n          </Menu.Item>\r\n        ),\r\n        render: () => (\r\n          <Tab.Pane>\r\n            <DataTable\r\n              columns={resultColumns}\r\n              data={error.map((d, i) => ({ ...d, index: i + 1 }))}\r\n            />\r\n          </Tab.Pane>\r\n        ),\r\n      });\r\n    }\r\n\r\n    return (\r\n      <MenuWrapper>\r\n        <Tab panes={panes} defaultActiveIndex={0} renderActiveOnly />\r\n      </MenuWrapper>\r\n    );\r\n    // eslint-disable-next-line\r\n  }, [uploadResult, resultColumns]);\r\n\r\n  const jsx_downloadTemplate = useMemo(\r\n    () => (\r\n      <Message\r\n        info\r\n        icon\r\n        style={{ marginBottom: 0, cursor: 'pointer' }}\r\n        onClick={() => downloadFile(excelTemplate)}\r\n      >\r\n        <Icon name='download' />\r\n        <Message.Content>\r\n          <Message.Header>Tải tệp tin mẫu</Message.Header>\r\n          Sử dụng tệp tin mẫu, để đảm bảo dữ liệu chính xác\r\n        </Message.Content>\r\n      </Message>\r\n    ),\r\n    []\r\n  );\r\n\r\n  const jsx_content = useMemo(() => {\r\n    switch (step) {\r\n      case steps.downloadTemplate:\r\n        return jsx_downloadTemplate;\r\n      case steps.reviewData:\r\n        return jsx_menuTable;\r\n      case steps.result:\r\n        return jsx_menuResultTable;\r\n      default:\r\n        return jsx_downloadTemplate;\r\n    }\r\n  }, [step, jsx_downloadTemplate, jsx_menuTable, jsx_menuResultTable]);\r\n  // #endregion\r\n\r\n  useEffect(() => {\r\n    if (examinationTypeList.length === 0) {\r\n      dispatch(getExaminationTypes());\r\n    }\r\n    if (samplingPlaceList.length === 0) {\r\n      dispatch(getSamplingPlaces());\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (errorData.length === 0) {\r\n      setDisabled(false);\r\n    } else {\r\n      setDisabled(true);\r\n    }\r\n  }, [errorData]);\r\n  useEffect(() => {\r\n    if (\r\n      uploadResult.filter(\r\n        (u) => u?.result?.message && u.result.message.includes('Đã chỉnh sửa')\r\n      ).length > 0\r\n    ) {\r\n      setDisabled(false);\r\n    } else {\r\n      setDisabled(true);\r\n    }\r\n  }, [uploadResult]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        open={open}\r\n        size={step !== steps.downloadTemplate ? 'fullscreen' : undefined}\r\n        onClose={onClose}\r\n      >\r\n        <Modal.Header>Nạp dữ liệu từ file Excel</Modal.Header>\r\n        <Modal.Content>\r\n          <Wrapper>\r\n            <Dimmer inverted active={loading}>\r\n              <Loader />\r\n            </Dimmer>\r\n            <div>\r\n              <Button\r\n                icon='upload'\r\n                labelPosition='right'\r\n                color='green'\r\n                content='Chọn File'\r\n                onClick={() => {\r\n                  refresh();\r\n                  fileInputRef.current.click();\r\n                }}\r\n              />\r\n\r\n              {selectedFile ? (\r\n                <div\r\n                  style={{\r\n                    marginTop: '10px',\r\n                    marginLeft: '10px',\r\n                    fontWeight: '700',\r\n                  }}\r\n                >\r\n                  Tên file: {selectedFile.name}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <input\r\n              hidden\r\n              type='file'\r\n              ref={fileInputRef}\r\n              onChange={(e) => {\r\n                setSelectedFile(e.target.files[0]);\r\n              }}\r\n              accept='.csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel'\r\n            />\r\n            {jsx_content}\r\n          </Wrapper>\r\n        </Modal.Content>\r\n        <Modal.Actions>\r\n          <Button\r\n            positive\r\n            labelPosition='right'\r\n            icon='checkmark'\r\n            content='Xác nhận'\r\n            disabled={disabled || loading}\r\n            onClick={() => {\r\n              if (\r\n                uploadResult.filter(\r\n                  (u) =>\r\n                    u?.result?.message &&\r\n                    u.result.message.includes('Đã chỉnh sửa')\r\n                ).length > 0\r\n              ) {\r\n                resolveData();\r\n              } else {\r\n                uploadData();\r\n              }\r\n            }}\r\n          />\r\n          {/* {step === steps.reviewData && errorData.length === 0 && (\r\n            <Button\r\n              icon=\"checkmark\"\r\n              labelPosition=\"right\"\r\n              color=\"blue\"\r\n              content=\"Tạo mẫu\"\r\n              onClick={() => {\r\n                if (uploadResult.filter((u) => u?.result?.message && u.result.message.includes('Đã chỉnh sửa')).length > 0) {\r\n                  resolveData();\r\n                } else {\r\n                  uploadData();\r\n                }\r\n              }}\r\n            />\r\n          )} */}\r\n          <Button\r\n            negative\r\n            labelPosition='right'\r\n            icon='close'\r\n            content='Đóng'\r\n            onClick={onClose}\r\n          />\r\n        </Modal.Actions>\r\n        <Modal\r\n          open={Boolean(conflictProfile?.exist?.id)}\r\n          onClose={() => setConflictProfile(undefined)}\r\n        >\r\n          <Modal.Header>{conflictProfile?.exist?.fullName}</Modal.Header>\r\n          <Modal.Content>\r\n            <div className='ui form'>\r\n              <FormProvider {...method}>\r\n                <ProfileSection\r\n                  initialSubject={conflictProfile?.exist}\r\n                  conflictSubject={conflictProfile?.raw}\r\n                  onChange={() => {}}\r\n                />\r\n              </FormProvider>\r\n            </div>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button\r\n              positive\r\n              labelPosition='right'\r\n              icon='checkmark'\r\n              content='Xác nhận'\r\n              loading={\r\n                updateProfileLoading ||\r\n                createImmunizationForProfileLoading ||\r\n                updateImmunizationForProfileLoading\r\n              }\r\n              onClick={method.handleSubmit(updateConflictProfile)}\r\n            />\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImportPcrModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}