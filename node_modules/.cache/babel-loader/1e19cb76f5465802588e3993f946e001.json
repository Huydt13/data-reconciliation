{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\profile\\\\components\\\\ImportGroupProfileRiskModal.js\";\n/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-await-in-loop */\n/* eslint-disable camelcase */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\n/* eslint-disable no-param-reassign */\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport xlsx from 'xlsx';\nimport { Modal, Button, Message, Icon, Header, Tab, List, Dimmer, Loader } from 'semantic-ui-react';\nimport { DataTable } from 'app/components/shared';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { importQuickTestJson } from 'medical-test/actions/medical-test';\nimport { getUnderlyingDiseases } from 'profile/actions/profile';\nimport { formatToDate, formatAddressToString, downloadFile, formatToTime, deburr, getExaminationError } from 'app/utils/helpers';\nimport { formatGender } from 'profile/utils/helpers';\nimport { IMMUNIZATION_STATUSES } from 'profile/utils/constants';\nimport locations from 'app/assets/mock/locations';\nimport excelTemplate from 'app/assets/excels/Mẫu import hồ sơ thuộc nhóm nguy cơ.xlsx';\nconst Wrapper = styled.div`\n  position: relative;\n`;\nconst MenuWrapper = styled.div`\n  margin-top: 15px;\n  & .tab {\n    padding-top: 0.1em !important;\n  }\n  & .fVDZkI {\n    margin-top: 0 !important;\n  }\n`;\nconst resultsOfExam = ['Dương tính', 'Âm tính'];\nconst immunizationStatusOptions = [{\n  key: 1,\n  value: IMMUNIZATION_STATUSES.NO_VACCINE,\n  text: 'Chưa tiêm'\n}, {\n  key: 2,\n  value: IMMUNIZATION_STATUSES.ONE_SHOT,\n  text: 'Tiêm 1 mũi'\n}, {\n  key: 3,\n  value: IMMUNIZATION_STATUSES.TWO_SHOT,\n  text: 'Tiêm 2 mũi'\n}];\nconst steps = {\n  downloadTemplate: 0,\n  reviewData: 1,\n  result: 2\n};\nconst ImportGroupProfileRiskModal = _ref => {\n  let {\n    open,\n    onClose: onCloseProp,\n    onRefresh\n  } = _ref;\n  const [step, setStep] = useState(steps.downloadTemplate);\n  const [disabled, setDisabled] = useState(false);\n  const fileInputRef = useRef();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [data, setData] = useState([]);\n  const [error, setError] = useState([]);\n  const [result, setResult] = useState([]);\n  const dispatch = useDispatch();\n  const {\n    underlyingDiseaseData: {\n      data: underlyingDiseaseList\n    }\n  } = useSelector(state => state.profile);\n  const {\n    importQuickTestJsonLoading\n  } = useSelector(state => state.medicalTest);\n  const loading = importQuickTestJsonLoading;\n  const model = useMemo(() => [{\n    header: 'Họ tên(*)',\n    assign: 'name',\n    formatter: value => value.toUpperCase().trim(),\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập tên';\n      }\n      return false;\n    }\n  }, {\n    header: 'Ngày sinh(*)',\n    assign: 'dateOfBirth',\n    formatter: value => moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập ngày sinh';\n      }\n      const date = moment(value, 'DD/MM/YYYY');\n      const beforeDate = moment('01/01/1921', 'DD/MM/YYYY');\n      const afterDate = moment().endOf('day');\n      if (date > afterDate || date < beforeDate) {\n        return `Ngày sinh phải nằm trong khoảng từ ${beforeDate.format('DD/MM/YYYY')} đến ${afterDate.format('DD/MM/YYYY')}`;\n      }\n      return false;\n    }\n  }, {\n    header: 'Giới tính  (Nữ/Nam)(*)',\n    assign: 'gender',\n    formatter: value => formatGender(value)\n  }, {\n    header: 'CMND /CCCD(*)',\n    assign: 'identityCard',\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập CMND/CCCD';\n      }\n      return false;\n    }\n  }, {\n    header: 'Điện thoại (*)',\n    assign: 'phoneNumber',\n    formatter: value => typeof value === 'number' ? `0${value}` : value,\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập số điện thoại';\n      }\n      return false;\n    }\n  }, {\n    header: 'Số nhà, tên đường (*)',\n    assign: 'streetHouseNumber',\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập địa chỉ';\n      }\n      return false;\n    }\n  }, {\n    header: 'Tỉnh/Thành phố (*)',\n    assign: 'provinceValue',\n    formatter: (__, value) => {\n      var _locations$find;\n      return locations === null || locations === void 0 ? void 0 : (_locations$find = locations.find(p => {\n        var _p$label, _p$label$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$label = p.label) === null || _p$label === void 0 ? void 0 : (_p$label$toLowerCase = _p$label.toLowerCase()) === null || _p$label$toLowerCase === void 0 ? void 0 : _p$label$toLowerCase.includes(`${value}`.toLowerCase());\n      })) === null || _locations$find === void 0 ? void 0 : _locations$find.value;\n    },\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập tỉnh/thành phố';\n      }\n      const province = locations === null || locations === void 0 ? void 0 : locations.find(p => {\n        var _p$label2, _p$label2$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$label2 = p.label) === null || _p$label2 === void 0 ? void 0 : (_p$label2$toLowerCase = _p$label2.toLowerCase()) === null || _p$label2$toLowerCase === void 0 ? void 0 : _p$label2$toLowerCase.includes(`${value}`.toLowerCase());\n      });\n      if (!province) {\n        return 'Tỉnh/Thành phố không hợp lệ';\n      }\n      return false;\n    }\n  }, {\n    header: 'Quận/Huyện/ TP/TX (*)',\n    assign: 'districtValue',\n    formatter: (obj, value) => {\n      var _locations$find2, _locations$find2$dist, _locations$find2$dist2;\n      return locations === null || locations === void 0 ? void 0 : (_locations$find2 = locations.find(p => {\n        var _p$value, _p$value$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$value = p.value) === null || _p$value === void 0 ? void 0 : (_p$value$toLowerCase = _p$value.toLowerCase()) === null || _p$value$toLowerCase === void 0 ? void 0 : _p$value$toLowerCase.includes(`${obj.provinceValue}`.toLowerCase());\n      })) === null || _locations$find2 === void 0 ? void 0 : (_locations$find2$dist = _locations$find2.districts) === null || _locations$find2$dist === void 0 ? void 0 : (_locations$find2$dist2 = _locations$find2$dist.find(d => {\n        var _d$label, _d$label$toLowerCase;\n        return d === null || d === void 0 ? void 0 : (_d$label = d.label) === null || _d$label === void 0 ? void 0 : (_d$label$toLowerCase = _d$label.toLowerCase()) === null || _d$label$toLowerCase === void 0 ? void 0 : _d$label$toLowerCase.includes(`${value}`.toLowerCase());\n      })) === null || _locations$find2$dist2 === void 0 ? void 0 : _locations$find2$dist2.value;\n    },\n    validate: (obj, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập quận/huyện/thành phố/thị xã';\n      }\n      if (obj === null || obj === void 0 ? void 0 : obj.provinceValue) {\n        var _locations$find3, _locations$find3$dist;\n        const district = locations === null || locations === void 0 ? void 0 : (_locations$find3 = locations.find(p => {\n          var _p$value2, _p$value2$toLowerCase;\n          return (_p$value2 = p.value) === null || _p$value2 === void 0 ? void 0 : (_p$value2$toLowerCase = _p$value2.toLowerCase()) === null || _p$value2$toLowerCase === void 0 ? void 0 : _p$value2$toLowerCase.includes(`${obj.provinceValue}`.toLowerCase());\n        })) === null || _locations$find3 === void 0 ? void 0 : (_locations$find3$dist = _locations$find3.districts) === null || _locations$find3$dist === void 0 ? void 0 : _locations$find3$dist.find(d => {\n          var _d$label2, _d$label2$toLowerCase;\n          return (_d$label2 = d.label) === null || _d$label2 === void 0 ? void 0 : (_d$label2$toLowerCase = _d$label2.toLowerCase()) === null || _d$label2$toLowerCase === void 0 ? void 0 : _d$label2$toLowerCase.includes(`${value}`.toLowerCase());\n        });\n        if (!district) {\n          return 'Quận/Huyện/Thành phố/Thị xã không hợp lệ';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Phường/Xã/ Thị trấn (*)',\n    assign: 'wardValue',\n    formatter: (obj, value) => {\n      var _locations$find4, _locations$find4$dist, _locations$find4$dist2, _locations$find4$dist3, _locations$find4$dist4;\n      return locations === null || locations === void 0 ? void 0 : (_locations$find4 = locations.find(p => {\n        var _p$value3, _p$value3$toLowerCase;\n        return p === null || p === void 0 ? void 0 : (_p$value3 = p.value) === null || _p$value3 === void 0 ? void 0 : (_p$value3$toLowerCase = _p$value3.toLowerCase()) === null || _p$value3$toLowerCase === void 0 ? void 0 : _p$value3$toLowerCase.includes(`${obj.provinceValue}`.toLowerCase());\n      })) === null || _locations$find4 === void 0 ? void 0 : (_locations$find4$dist = _locations$find4.districts) === null || _locations$find4$dist === void 0 ? void 0 : (_locations$find4$dist2 = _locations$find4$dist.find(d => {\n        var _d$value, _d$value$toLowerCase;\n        return d === null || d === void 0 ? void 0 : (_d$value = d.value) === null || _d$value === void 0 ? void 0 : (_d$value$toLowerCase = _d$value.toLowerCase()) === null || _d$value$toLowerCase === void 0 ? void 0 : _d$value$toLowerCase.includes(`${obj.districtValue}`.toLowerCase());\n      })) === null || _locations$find4$dist2 === void 0 ? void 0 : (_locations$find4$dist3 = _locations$find4$dist2.wards) === null || _locations$find4$dist3 === void 0 ? void 0 : (_locations$find4$dist4 = _locations$find4$dist3.find(d => {\n        var _d$label3, _d$label3$toLowerCase;\n        return d === null || d === void 0 ? void 0 : (_d$label3 = d.label) === null || _d$label3 === void 0 ? void 0 : (_d$label3$toLowerCase = _d$label3.toLowerCase()) === null || _d$label3$toLowerCase === void 0 ? void 0 : _d$label3$toLowerCase.includes(`${value}`.toLowerCase());\n      })) === null || _locations$find4$dist4 === void 0 ? void 0 : _locations$find4$dist4.value;\n    },\n    validate: (obj, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập phường/xã/thị trấn';\n      }\n      if ((obj === null || obj === void 0 ? void 0 : obj.provinceValue) && (obj === null || obj === void 0 ? void 0 : obj.districtValue)) {\n        var _locations$find5, _locations$find5$dist, _locations$find5$dist2, _locations$find5$dist3;\n        const ward = locations === null || locations === void 0 ? void 0 : (_locations$find5 = locations.find(p => {\n          var _p$value4, _p$value4$toLowerCase;\n          return p === null || p === void 0 ? void 0 : (_p$value4 = p.value) === null || _p$value4 === void 0 ? void 0 : (_p$value4$toLowerCase = _p$value4.toLowerCase()) === null || _p$value4$toLowerCase === void 0 ? void 0 : _p$value4$toLowerCase.includes(`${obj.provinceValue}`.toLowerCase());\n        })) === null || _locations$find5 === void 0 ? void 0 : (_locations$find5$dist = _locations$find5.districts) === null || _locations$find5$dist === void 0 ? void 0 : (_locations$find5$dist2 = _locations$find5$dist.find(d => {\n          var _d$value2, _d$value2$toLowerCase;\n          return d === null || d === void 0 ? void 0 : (_d$value2 = d.value) === null || _d$value2 === void 0 ? void 0 : (_d$value2$toLowerCase = _d$value2.toLowerCase()) === null || _d$value2$toLowerCase === void 0 ? void 0 : _d$value2$toLowerCase.includes(`${obj.districtValue}`.toLowerCase());\n        })) === null || _locations$find5$dist2 === void 0 ? void 0 : (_locations$find5$dist3 = _locations$find5$dist2.wards) === null || _locations$find5$dist3 === void 0 ? void 0 : _locations$find5$dist3.find(d => {\n          var _d$label4, _d$label4$toLowerCase;\n          return d === null || d === void 0 ? void 0 : (_d$label4 = d.label) === null || _d$label4 === void 0 ? void 0 : (_d$label4$toLowerCase = _d$label4.toLowerCase()) === null || _d$label4$toLowerCase === void 0 ? void 0 : _d$label4$toLowerCase.includes(`${value}`.toLowerCase());\n        });\n        if (!ward) {\n          return 'Phường/Xã/Thị trấn không hợp lệ';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'KP/ấp',\n    assign: 'quarter',\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập khu phố/ấp';\n      }\n      return false;\n    }\n  }, {\n    header: 'Tổ(*)',\n    assign: 'quarterGroup',\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc nhập tổ dân phố';\n      }\n      return false;\n    }\n  }, {\n    header: 'Tiêm vắc xin (1 mũi/2 mũi/ chưa tiêm)(*)',\n    assign: 'immunizationStatus',\n    formatter: value => {\n      const status = immunizationStatusOptions.find(p => p.text.toUpperCase() === value.toUpperCase());\n      return status === null || status === void 0 ? void 0 : status.value;\n    },\n    validate: (__, value) => {\n      if (!value) {\n        return 'Bắt buộc chọn trạng thái tiêm vắc xin';\n      }\n      const status = immunizationStatusOptions.find(p => p.text.toUpperCase() === value.toUpperCase());\n      if (!status) {\n        return 'Trạng thái tiêm vắc xin không đúng định dạng';\n      }\n      return false;\n    }\n  }, {\n    header: 'Loại Vaccine (mũi 1)',\n    assign: 'vaccineFirst',\n    validate: (obj, value) => {\n      if (typeof obj.immunizationStatus === 'number') {\n        if (!value && obj.immunizationStatus >= IMMUNIZATION_STATUSES.ONE_SHOT) {\n          return 'Bắt buộc nhập loại vắc xin (mũi 1)';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Ngày tiêm mũi 1',\n    assign: 'injectionDateFirst',\n    formatter: value => moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n    validate: (obj, value) => {\n      if (typeof obj.immunizationStatus === 'number') {\n        if (!value && obj.immunizationStatus >= IMMUNIZATION_STATUSES.ONE_SHOT) {\n          return 'Bắt buộc nhập ngày tiêm (mũi 1)';\n        }\n        const date = moment(value, 'DD/MM/YYYY');\n        const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n        const afterDate = moment().endOf('day');\n        if (date > afterDate || date < beforeDate) {\n          return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format('DD/MM/YYYY')} đến ${afterDate.format('DD/MM/YYYY')}`;\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Loại Vaccine (mũi 2)',\n    assign: 'vaccineSecond',\n    validate: (obj, value) => {\n      if (typeof obj.immunizationStatus === 'number') {\n        if (!value && obj.immunizationStatus >= IMMUNIZATION_STATUSES.TWO_SHOT) {\n          return 'Bắt buộc nhập loại vắc xin (mũi 2)';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Ngày tiêm mũi 2',\n    assign: 'injectionDateSecond',\n    formatter: value => moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n    validate: (obj, value) => {\n      if (typeof obj.immunizationStatus === 'number') {\n        if (!value && obj.immunizationStatus >= IMMUNIZATION_STATUSES.TWO_SHOT) {\n          return 'Bắt buộc nhập ngày tiêm (mũi 2)';\n        }\n        const date = moment(value, 'DD/MM/YYYY');\n        const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n        const afterDate = moment().endOf('day');\n        if (date > afterDate || date < beforeDate) {\n          return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format('DD/MM/YYYY')} đến ${afterDate.format('DD/MM/YYYY')}`;\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Có bệnh lý nền(*)',\n    assign: 'underlyingDiseases',\n    formatter: value => value.toString().includes(';') ? value.toString().split(';').filter(v => (underlyingDiseaseList || []).find(u => u.index === parseInt(v, 10))).map(u => u.id) : (underlyingDiseaseList || []).filter(u => u.index === parseInt(value.toString(), 10)).map(u => u.id),\n    validate: (__, value) => {\n      if (typeof value === 'undefined') {\n        return 'Bắt buộc phải nhập có bệnh lý nền';\n      }\n      const underlyingDiseaseIndexList = (underlyingDiseaseList || []).map(u => u.index);\n      const difference = value.toString().includes(';') ? value.toString().split(';').filter(v => v && !underlyingDiseaseIndexList.includes(parseInt(v, 10))) : !underlyingDiseaseIndexList.includes(parseInt(value, 10)) ? [value] : [];\n      if (Array.isArray(difference) && difference.length > 0) {\n        return 'Bệnh nền không hợp lệ';\n      }\n      return false;\n    }\n  }, {\n    header: 'Thời gian nhiễm(mm/yyyy)',\n    assign: 'infectedDate',\n    formatter: value => moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n    validate: value => {\n      if (value) {\n        const date = moment(value, 'DD/MM/YYYY');\n        const afterDate = moment().endOf('day');\n        if (date > afterDate) {\n          return `Ngày xét nghiệm không được lớn hơn ${afterDate.format('DD/MM/YYYY')}`;\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Ngày XN  lần 1',\n    assign: 'dateOfExamFirst',\n    formatter: value => moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n    validate: value => {\n      if (value) {\n        const date = moment(value, 'DD/MM/YYYY');\n        const afterDate = moment().endOf('day');\n        if (date > afterDate) {\n          return `Ngày xét nghiệm không được lớn hơn ${afterDate.format('DD/MM/YYYY')}`;\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Kết quả XN lần 1',\n    assign: 'resultOfExamFirst',\n    validate: (obj, value) => {\n      if (typeof obj.dateOfExamFirst !== 'undefined') {\n        if (!resultsOfExam.find(r => r.toUpperCase() === value.toUpperCase())) {\n          return 'Kết quả xét nghiệm (lần 1) không đúng định dạng';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Ngày XN  lần 2',\n    assign: 'dateOfExamSecond',\n    formatter: value => moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n    validate: value => {\n      if (value) {\n        const date = moment(value, 'DD/MM/YYYY');\n        const afterDate = moment().endOf('day');\n        if (date > afterDate) {\n          return `Ngày xét nghiệm không được lớn hơn ${afterDate.format('DD/MM/YYYY')}`;\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Kết quả XN lần 2',\n    assign: 'resultOfExamSecond',\n    validate: (obj, value) => {\n      if (typeof obj.dateOfExamSecond !== 'undefined') {\n        if (!resultsOfExam.find(r => r.toUpperCase() === value.toUpperCase())) {\n          return 'Kết quả xét nghiệm (lần 1) không đúng định dạng';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Loại Vaccine (Mũi bổ sung hoặc nhắc lại)',\n    assign: 'additionalVaccine',\n    validate: (obj, value) => {\n      if (value) {\n        if (typeof obj.additionalVaccine !== 'undefined') {\n          return 'Chỉ được điền 1 trong 3 mũi tiêm (mũi cơ bản 1/mũi cơ bản 2/mũi bổ sung (mũi nhắc lại))';\n        }\n        if (typeof obj.immunizationStatus !== 'number' || obj.immunizationStatus !== IMMUNIZATION_STATUSES.TWO_SHOT) {\n          return 'Yêu cầu phải tiêm đủ 2 mũi trước khi tiêm mũi bổ sung (mũi nhắc lại)';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Ngày tiêm (Mũi bổ sung hoặc nhắc lại)',\n    assign: 'additionalInjectionDate',\n    validate: (obj, value) => {\n      if (typeof obj.additionalVaccine !== 'undefined' && obj.immunizationStatus === IMMUNIZATION_STATUSES.TWO_SHOT) {\n        if (!value) {\n          return 'Bắt buộc phải nhập ngày tiêm (mũi bổ sung hoặc nhắc lại)';\n        }\n        const date = moment(value, 'DD/MM/YYYY');\n        const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n        const afterDate = moment().endOf('day');\n        if (date > afterDate || date < beforeDate) {\n          return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format('DD/MM/YYYY')} đến ${afterDate.format('DD/MM/YYYY')}`;\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Loại Vaccine (Mũi CB 1)',\n    assign: 'additionalVaccine',\n    validate: (obj, value) => {\n      if (value) {\n        if (typeof obj.additionalVaccine !== 'undefined') {\n          return 'Chỉ được điền 1 trong 3 mũi tiêm (mũi cơ bản 1/mũi cơ bản 2/mũi bổ sung (mũi nhắc lại))';\n        }\n        if (typeof obj.immunizationStatus !== 'number' || obj.immunizationStatus !== IMMUNIZATION_STATUSES.NO_VACCINE) {\n          return 'Yêu cầu chưa tiêm mũi nào trước khi tiêm mũi cơ bản 1';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Ngày tiêm (Mũi CB 1)',\n    assign: 'additionalInjectionDate',\n    validate: (obj, value) => {\n      if (typeof obj.additionalVaccine !== 'undefined' && obj.immunizationStatus === IMMUNIZATION_STATUSES.NO_VACCINE) {\n        if (!value) {\n          return 'Bắt buộc phải nhập ngày tiêm (mũi cơ bản 1)';\n        }\n        const date = moment(value, 'DD/MM/YYYY');\n        const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n        const afterDate = moment().endOf('day');\n        if (date > afterDate || date < beforeDate) {\n          return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format('DD/MM/YYYY')} đến ${afterDate.format('DD/MM/YYYY')}`;\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Loại Vaccine (Mũi CB 2)',\n    assign: 'additionalVaccine',\n    validate: (obj, value) => {\n      if (value) {\n        if (typeof obj.additionalVaccine !== 'undefined') {\n          return 'Chỉ được điền 1 trong 3 mũi tiêm (mũi cơ bản 1/mũi cơ bản 2/mũi bổ sung (mũi nhắc lại))';\n        }\n        if (typeof obj.immunizationStatus !== 'number' || obj.immunizationStatus !== IMMUNIZATION_STATUSES.ONE_SHOT) {\n          return 'Yêu cầu phải tiêm mũi 1 trước khi tiêm mũi cơ bản 2';\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Ngày tiêm (Mũi CB 2)',\n    assign: 'additionalInjectionDate',\n    validate: (obj, value) => {\n      if (typeof obj.additionalVaccine !== 'undefined' && obj.immunizationStatus === IMMUNIZATION_STATUSES.ONE_SHOT) {\n        if (!value) {\n          return 'Bắt buộc phải nhập ngày tiêm (mũi cơ bản 2)';\n        }\n        const date = moment(value, 'DD/MM/YYYY');\n        const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n        const afterDate = moment().endOf('day');\n        if (date > afterDate || date < beforeDate) {\n          return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format('DD/MM/YYYY')} đến ${afterDate.format('DD/MM/YYYY')}`;\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Được cấp gói thuốc C',\n    assign: 'DCGTC',\n    validate: (obj, value) => {\n      if (obj.infectedDate) {\n        if (value) {\n          if (!['CÓ', 'KHÔNG'].indexOf(value.toUpperCase())) {\n            return 'Được cấp gói thuốc C không đúng định dạng';\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    header: 'Là F0 được cách ly tại nhà',\n    assign: 'LFDCLTN',\n    validate: (obj, value) => {\n      if (obj.infectedDate) {\n        if (value) {\n          if (!['CÓ', 'KHÔNG'].indexOf(value.toUpperCase())) {\n            return 'Không đúng định dạng cột (Là F0 được cách lý tại nhà)';\n          }\n        }\n      }\n      return false;\n    }\n  }], [underlyingDiseaseList]);\n  const refresh = () => {\n    setStep(steps.downloadTemplate);\n    setDisabled(false);\n    setSelectedFile(null);\n    setData([]);\n    setError([]);\n    setResult([]);\n  };\n  const onClose = () => {\n    refresh();\n    onCloseProp();\n    onRefresh();\n  };\n\n  // #region parse data\n  const parseData = useCallback(binary => {\n    try {\n      const book = xlsx.read(binary, {\n        type: 'binary',\n        cellDates: true,\n        cellNF: false,\n        cellText: false\n      });\n      const sheet = book.Sheets[book.SheetNames[0]];\n      const rawData = xlsx.utils.sheet_to_json(sheet).map(row => Object.keys(row).reduce((obj, key) => {\n        obj[key.replace(/(\\r\\n|\\n|\\r)/gm, '').trim()] = row[key];\n        return obj;\n      }, {}));\n      const parserData = rawData.map((row, index) => model.reduce((obj, props) => {\n        const resultOfValidation = (props === null || props === void 0 ? void 0 : props.validate) ? props.validate(obj, row[props.header]) : false;\n        if (resultOfValidation) {\n          if (typeof obj.errors === 'undefined') {\n            obj.errors = {\n              row: index + 1,\n              messages: []\n            };\n          }\n          obj.errors.messages.push(resultOfValidation);\n        } else if (typeof row[props.header] !== 'undefined' && row[props.header] !== '') {\n          obj[props.assign] = (props === null || props === void 0 ? void 0 : props.formatter) ? props.formatter(row[props.header]) : row[props.header];\n        }\n        return obj;\n      }, {}));\n      setData(parserData.filter(d => !(d === null || d === void 0 ? void 0 : d.errors)));\n      setError(parserData.filter(d => d === null || d === void 0 ? void 0 : d.errors));\n    } catch (e) {\n      toast.warn('Tệp tin không đúng định dạng');\n    }\n  }, [model]);\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      if (reader.readAsBinaryString) {\n        reader.onload = () => parseData(reader.result);\n        reader.readAsBinaryString(selectedFile);\n      }\n    }\n    // eslint-disable-next-line\n  }, [selectedFile]);\n  // #endregion\n\n  // #region upload data\n  const formatRequest = d => {\n    var _d$underlyingDiseases, _d$dateOfExamFirst, _d$resultOfExamFirst, _d$dateOfExamSecond, _d$resultOfExamSecond;\n    const url = window.location.href;\n    return {\n      profileModel: {\n        profile: {\n          fullName: d.name,\n          gender: d.gender,\n          cmnd: d.identityCard.length !== 12 ? `${d.identityCard}` : null,\n          cccd: d.identityCard.length === 12 ? `${d.identityCard}` : null,\n          phoneNumber: d.phoneNumber,\n          dateOfBirth: d.dateOfBirth,\n          hasYearOfBirthOnly: false,\n          profileCreationReason: {},\n          workAddresses: [],\n          addressesInVietnam: [{\n            provinceValue: d.provinceValue,\n            districtValue: d.districtValue,\n            wardValue: d.wardValue,\n            quarter: d.quarter,\n            quarterGroup: d.quarterGroup,\n            streetHouseNumber: d.streetHouseNumber\n          }],\n          underlyingDiseases: (_d$underlyingDiseases = d === null || d === void 0 ? void 0 : d.underlyingDiseases) !== null && _d$underlyingDiseases !== void 0 ? _d$underlyingDiseases : null,\n          createdFrom: 6\n        },\n        newImmunization: (d === null || d === void 0 ? void 0 : d.additionalImmunizationStatus) ? {\n          immunizationStatus: d.additionalImmunizationStatus,\n          injectionDate: d.additionalInjectionDate,\n          vaccine: d.additionalVaccine,\n          disease: 'Covid-19'\n        } : null,\n        curImmunizations: (d === null || d === void 0 ? void 0 : d.injectionDateSecond) ? [{\n          immunizationStatus: IMMUNIZATION_STATUSES.TWO_SHOT,\n          injectionDate: d.injectionDateSecond,\n          vaccine: d.vaccineSecond,\n          disease: 'Covid-19'\n        }, {\n          immunizationStatus: IMMUNIZATION_STATUSES.ONE_SHOT,\n          injectionDate: d.injectionDateFirst,\n          vaccine: d.vaccineFirst,\n          disease: 'Covid-19'\n        }] : (d === null || d === void 0 ? void 0 : d.injectionDateFirst) ? [{\n          immunizationStatus: IMMUNIZATION_STATUSES.ONE_SHOT,\n          injectionDate: d.injectionDateFirst,\n          vaccine: d.vaccineFirst,\n          disease: 'Covid-19'\n        }] : [],\n        treatment: (d === null || d === void 0 ? void 0 : d.infectedDate) ? {\n          fromDate: d === null || d === void 0 ? void 0 : d.infectedDate,\n          contents: {\n            DCGTC: d === null || d === void 0 ? void 0 : d.DCGTC,\n            LFDCLTN: d === null || d === void 0 ? void 0 : d.LFDCLTN\n          }\n        } : null\n      },\n      quickTestModel: {\n        date1: (_d$dateOfExamFirst = d === null || d === void 0 ? void 0 : d.dateOfExamFirst) !== null && _d$dateOfExamFirst !== void 0 ? _d$dateOfExamFirst : null,\n        result1: (_d$resultOfExamFirst = d === null || d === void 0 ? void 0 : d.resultOfExamFirst) !== null && _d$resultOfExamFirst !== void 0 ? _d$resultOfExamFirst : null,\n        date2: (_d$dateOfExamSecond = d === null || d === void 0 ? void 0 : d.dateOfExamSecond) !== null && _d$dateOfExamSecond !== void 0 ? _d$dateOfExamSecond : null,\n        result2: (_d$resultOfExamSecond = d === null || d === void 0 ? void 0 : d.resultOfExamSecond) !== null && _d$resultOfExamSecond !== void 0 ? _d$resultOfExamSecond : null\n      },\n      createProfileMqExchangeName: url.indexOf('abcde') > -1 || process.env.NODE_ENV === 'development' ? 'NewProfileQueue1' : 'NewProfileQueue'\n    };\n  };\n  const getImportError = function () {\n    var _errorResponse$respon;\n    let errorResponse = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      response: {}\n    };\n    const resultError = {\n      succeed: false,\n      message: 'Lỗi không xác định'\n    };\n    if ((_errorResponse$respon = errorResponse.response) === null || _errorResponse$respon === void 0 ? void 0 : _errorResponse$respon.data) {\n      if (typeof errorResponse.response.data === 'string') {\n        if (errorResponse.response.data.includes('Record is existed or only update')) {\n          resultError.message = 'Xung đột thông tin tiền sử tiêm chủng';\n        } else {\n          const examinationError = getExaminationError(errorResponse.response.data);\n          if (examinationError) {\n            resultError.message = examinationError;\n          }\n        }\n      }\n    }\n    return resultError;\n  };\n  const uploadData = async () => {\n    for (const profile of data) {\n      try {\n        await dispatch(importQuickTestJson([formatRequest(profile)]));\n        setResult(rl => [...rl, {\n          ...profile,\n          result: {\n            succeed: true\n          }\n        }]);\n      } catch (e) {\n        setResult(rl => [...rl, {\n          ...profile,\n          result: {\n            ...getImportError(e)\n          }\n        }]);\n      }\n    }\n    setStep(steps.result);\n  };\n  // #endregion\n\n  // #region component\n  const dataColumns = useMemo(() => [{\n    Header: '#',\n    accessor: 'index'\n  }, {\n    Header: 'Họ tên',\n    accessor: 'name'\n  }, {\n    Header: 'Ngày sinh',\n    formatter: _ref2 => {\n      let {\n        dateOfBirth\n      } = _ref2;\n      return formatToDate(dateOfBirth);\n    }\n  }, {\n    Header: 'Số điện thoại',\n    accessor: 'phoneNumber'\n  }, {\n    Header: 'Địa chỉ',\n    formatter: _ref3 => {\n      let {\n        streetHouseNumber,\n        provinceValue,\n        districtValue,\n        wardValue\n      } = _ref3;\n      return formatAddressToString({\n        streetHouseNumber,\n        provinceValue,\n        districtValue,\n        wardValue\n      });\n    }\n  }, {\n    Header: 'Tiền sử tiêm chủng',\n    formatter: _ref4 => {\n      let {\n        vaccineFirst,\n        injectionDateFirst,\n        vaccineSecond,\n        injectionDateSecond\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 11\n        }\n      }, vaccineSecond ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          color: '#DB2729'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 19\n        }\n      }, \"M\\u0169i 2\"), ` | ${vaccineSecond}`), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 17\n        }\n      }, formatToDate(injectionDateSecond))) : vaccineFirst ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          color: '#DB2729'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 936,\n          columnNumber: 19\n        }\n      }, \"M\\u0169i 1\"), ` | ${vaccineFirst}`), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 17\n        }\n      }, formatToDate(injectionDateFirst))) : /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 942,\n          columnNumber: 15\n        }\n      }, \"Ch\\u01B0a ti\\xEAm\"));\n    }\n  }, {\n    Header: 'Xét nghiệm lần 1',\n    formatter: _ref5 => {\n      let {\n        dateOfExamFirst,\n        resultOfExamFirst\n      } = _ref5;\n      return resultOfExamFirst ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 951,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 15\n        }\n      }, resultOfExamFirst.includes(deburr('Dương')) ? /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          color: '#DB2729'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954,\n          columnNumber: 19\n        }\n      }, resultOfExamFirst) : resultOfExamFirst), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 15\n        }\n      }, formatToDate(dateOfExamFirst))) : null;\n    }\n  }, {\n    Header: 'Xét nghiệm lần 2',\n    formatter: _ref6 => {\n      let {\n        dateOfExamSecond,\n        resultOfExamSecond\n      } = _ref6;\n      return resultOfExamSecond ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 15\n        }\n      }, resultOfExamSecond.includes(deburr('Dương')) ? /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          color: '#DB2729'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 19\n        }\n      }, resultOfExamSecond) : resultOfExamSecond), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 15\n        }\n      }, formatToDate(dateOfExamSecond))) : null;\n    }\n  }], []);\n  const errorColumns = useMemo(() => [{\n    Header: 'Hàng',\n    formatter: _ref7 => {\n      let {\n        errors\n      } = _ref7;\n      return /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 36\n        }\n      }, errors === null || errors === void 0 ? void 0 : errors.row);\n    }\n  }, {\n    Header: ' ',\n    formatter: _ref8 => {\n      let {\n        errors\n      } = _ref8;\n      return (errors === null || errors === void 0 ? void 0 : errors.messages) ? /*#__PURE__*/React.createElement(List, {\n        divided: true,\n        relaxed: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 13\n        }\n      }, errors.messages.map(m => /*#__PURE__*/React.createElement(List.Item, {\n        key: m,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 994,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(List.Icon, {\n        name: \"x\",\n        color: \"red\",\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 995,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(List.Content, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(List.Description, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 21\n        }\n      }, m))))) : null;\n    }\n  }], []);\n  const jsx_menuTable = useMemo(() => {\n    const panes = [{\n      menuItem: `Dữ liệu đọc được (${data.length})`,\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        columns: dataColumns,\n        data: data.map((d, i) => ({\n          ...d,\n          index: i + 1\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1013,\n          columnNumber: 13\n        }\n      }))\n    }, {\n      menuItem: `Dữ liệu bị lỗi (${error.length})`,\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DataTable, {\n        columns: errorColumns,\n        data: error.map((e, i) => ({\n          ...e,\n          index: i + 1\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 13\n        }\n      }))\n    }];\n    return /*#__PURE__*/React.createElement(MenuWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1034,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Tab, {\n      panes: panes,\n      renderActiveOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 9\n      }\n    }));\n  }, [data, error, dataColumns, errorColumns]);\n  const resultColumns = useMemo(() => [{\n    Header: '#',\n    accessor: 'index'\n  }, {\n    Header: 'Họ tên',\n    accessor: 'name'\n  }, {\n    Header: 'Ngày sinh',\n    formatter: _ref9 => {\n      let {\n        dateOfBirth\n      } = _ref9;\n      return formatToDate(dateOfBirth);\n    }\n  }, {\n    Header: 'Số điện thoại',\n    accessor: 'phoneNumber'\n  }, {\n    Header: 'Địa chỉ',\n    formatter: _ref10 => {\n      let {\n        streetHouseNumber,\n        provinceValue,\n        districtValue,\n        wardValue\n      } = _ref10;\n      return formatAddressToString({\n        streetHouseNumber,\n        provinceValue,\n        districtValue,\n        wardValue\n      });\n    }\n  }, {\n    Header: 'Tiền sử tiêm chủng',\n    formatter: _ref11 => {\n      let {\n        vaccineFirst,\n        injectionDateFirst,\n        vaccineSecond,\n        injectionDateSecond\n      } = _ref11;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1081,\n          columnNumber: 11\n        }\n      }, vaccineSecond ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          color: '#DB2729'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 19\n        }\n      }, \"M\\u0169i 2\"), ` | ${vaccineSecond}`), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 17\n        }\n      }, formatToTime(injectionDateSecond))) : vaccineFirst ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1092,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          color: '#DB2729'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 19\n        }\n      }, \"M\\u0169i 1\"), ` | ${vaccineFirst}`), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1096,\n          columnNumber: 17\n        }\n      }, formatToTime(injectionDateFirst))) : /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 15\n        }\n      }, \"Ch\\u01B0a ti\\xEAm\"));\n    }\n  }, {\n    Header: 'Xét nghiệm lần 1',\n    formatter: _ref12 => {\n      let {\n        dateOfExamFirst,\n        resultOfExamFirst\n      } = _ref12;\n      return resultOfExamFirst ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 15\n        }\n      }, resultOfExamFirst.includes(deburr('Dương')) ? /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          color: '#DB2729'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1111,\n          columnNumber: 19\n        }\n      }, resultOfExamFirst) : resultOfExamFirst), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1116,\n          columnNumber: 15\n        }\n      }, formatToTime(dateOfExamFirst))) : null;\n    }\n  }, {\n    Header: 'Xét nghiệm lần 2',\n    formatter: _ref13 => {\n      let {\n        dateOfExamSecond,\n        resultOfExamSecond\n      } = _ref13;\n      return resultOfExamSecond ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1124,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        sub: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1125,\n          columnNumber: 15\n        }\n      }, resultOfExamSecond.includes(deburr('Dương')) ? /*#__PURE__*/React.createElement(\"b\", {\n        style: {\n          color: '#DB2729'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1127,\n          columnNumber: 19\n        }\n      }, resultOfExamSecond) : resultOfExamSecond), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 15\n        }\n      }, formatToTime(dateOfExamSecond))) : null;\n    }\n  }, {\n    Header: ' ',\n    formatter: r => {\n      var _r$result, _r$result2;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Icon, {\n        name: \"info circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1140,\n          columnNumber: 13\n        }\n      }), ' ', (r === null || r === void 0 ? void 0 : (_r$result = r.result) === null || _r$result === void 0 ? void 0 : _r$result.succeed) ? 'Thành công' : r === null || r === void 0 ? void 0 : (_r$result2 = r.result) === null || _r$result2 === void 0 ? void 0 : _r$result2.message);\n    }\n  }], []);\n  const jsx_resultTable = useMemo(() => /*#__PURE__*/React.createElement(DataTable, {\n    title: `Kết quả đã nạp ${result.reduce((c, t) => {\n      var _t$result;\n      return (t === null || t === void 0 ? void 0 : (_t$result = t.result) === null || _t$result === void 0 ? void 0 : _t$result.succeed) ? c + 1 : c;\n    }, 0)}/${result.length} hồ sơ`,\n    columns: resultColumns,\n    data: result.map((d, i) => ({\n      ...d,\n      index: i + 1\n    })),\n    rowError: r => {\n      var _r$result3;\n      return !(r === null || r === void 0 ? void 0 : (_r$result3 = r.result) === null || _r$result3 === void 0 ? void 0 : _r$result3.succeed);\n    },\n    rowSucceed: r => {\n      var _r$result4;\n      return r === null || r === void 0 ? void 0 : (_r$result4 = r.result) === null || _r$result4 === void 0 ? void 0 : _r$result4.succeed;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1150,\n      columnNumber: 7\n    }\n  }), [result, resultColumns]);\n  const jsx_downloadTemplate = useMemo(() => /*#__PURE__*/React.createElement(Message, {\n    info: true,\n    icon: true,\n    style: {\n      marginBottom: 0,\n      cursor: 'pointer'\n    },\n    onClick: () => downloadFile(excelTemplate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"download\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Message.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Message.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1174,\n      columnNumber: 11\n    }\n  }, \"T\\u1EA3i t\\u1EC7p tin m\\u1EABu\"), \"S\\u1EED d\\u1EE5ng t\\u1EC7p tin m\\u1EABu, \\u0111\\u1EC3 \\u0111\\u1EA3m b\\u1EA3o d\\u1EEF li\\u1EC7u ch\\xEDnh x\\xE1c\")), []);\n  const jsx_content = useMemo(() => {\n    switch (step) {\n      case steps.downloadTemplate:\n        return jsx_downloadTemplate;\n      case steps.reviewData:\n        return jsx_menuTable;\n      case steps.result:\n        return jsx_resultTable;\n      default:\n        return jsx_downloadTemplate;\n    }\n  }, [step, jsx_downloadTemplate, jsx_menuTable, jsx_resultTable]);\n  // #endregion\n\n  useEffect(() => {\n    if (!underlyingDiseaseList || underlyingDiseaseList.length === 0) {\n      dispatch(getUnderlyingDiseases({}));\n    }\n    // eslint-disable-next-line\n  }, [dispatch]);\n  useEffect(() => {\n    if (error.length === 0) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  }, [error]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    size: step !== steps.downloadTemplate ? 'fullscreen' : undefined,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1212,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1217,\n      columnNumber: 7\n    }\n  }, \"N\\u1EA1p d\\u1EEF li\\u1EC7u t\\u1EEB file Excel\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1218,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dimmer, {\n    inverted: true,\n    active: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1221,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    icon: \"upload\",\n    labelPosition: \"right\",\n    color: \"green\",\n    content: \"Ch\\u1ECDn File\",\n    onClick: () => {\n      refresh();\n      fileInputRef.current.click();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1224,\n      columnNumber: 13\n    }\n  }), selectedFile ? /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: '10px',\n      fontWeight: '700'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1235,\n      columnNumber: 15\n    }\n  }, selectedFile.name) : null), /*#__PURE__*/React.createElement(\"input\", {\n    hidden: true,\n    type: \"file\",\n    ref: fileInputRef,\n    onChange: e => {\n      setSelectedFile(e.target.files[0]);\n      setStep(steps.reviewData);\n    },\n    accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1240,\n      columnNumber: 11\n    }\n  }), jsx_content)), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1253,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    positive: true,\n    labelPosition: \"right\",\n    icon: \"checkmark\",\n    content: \"X\\xE1c nh\\u1EADn\",\n    disabled: disabled,\n    loading: loading,\n    onClick: uploadData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1254,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    negative: true,\n    labelPosition: \"right\",\n    icon: \"close\",\n    content: \"\\u0110\\xF3ng\",\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1263,\n      columnNumber: 9\n    }\n  })));\n};\nImportGroupProfileRiskModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onRefresh: PropTypes.func\n};\nImportGroupProfileRiskModal.defaultProps = {\n  open: false,\n  onClose: () => {},\n  onRefresh: () => {}\n};\nexport default ImportGroupProfileRiskModal;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","useRef","styled","toast","PropTypes","moment","xlsx","Modal","Button","Message","Icon","Header","Tab","List","Dimmer","Loader","DataTable","useDispatch","useSelector","importQuickTestJson","getUnderlyingDiseases","formatToDate","formatAddressToString","downloadFile","formatToTime","deburr","getExaminationError","formatGender","IMMUNIZATION_STATUSES","locations","excelTemplate","Wrapper","div","MenuWrapper","resultsOfExam","immunizationStatusOptions","key","value","NO_VACCINE","text","ONE_SHOT","TWO_SHOT","steps","downloadTemplate","reviewData","result","ImportGroupProfileRiskModal","_ref","open","onClose","onCloseProp","onRefresh","step","setStep","disabled","setDisabled","fileInputRef","selectedFile","setSelectedFile","data","setData","error","setError","setResult","dispatch","underlyingDiseaseData","underlyingDiseaseList","state","profile","importQuickTestJsonLoading","medicalTest","loading","model","header","assign","formatter","toUpperCase","trim","validate","__","format","date","beforeDate","afterDate","endOf","_locations$find","find","p","_p$label","_p$label$toLowerCase","label","toLowerCase","includes","province","_p$label2","_p$label2$toLowerCase","obj","_locations$find2","_locations$find2$dist","_locations$find2$dist2","_p$value","_p$value$toLowerCase","provinceValue","districts","d","_d$label","_d$label$toLowerCase","_locations$find3","_locations$find3$dist","district","_p$value2","_p$value2$toLowerCase","_d$label2","_d$label2$toLowerCase","_locations$find4","_locations$find4$dist","_locations$find4$dist2","_locations$find4$dist3","_locations$find4$dist4","_p$value3","_p$value3$toLowerCase","_d$value","_d$value$toLowerCase","districtValue","wards","_d$label3","_d$label3$toLowerCase","_locations$find5","_locations$find5$dist","_locations$find5$dist2","_locations$find5$dist3","ward","_p$value4","_p$value4$toLowerCase","_d$value2","_d$value2$toLowerCase","_d$label4","_d$label4$toLowerCase","status","immunizationStatus","toString","split","filter","v","u","index","parseInt","map","id","underlyingDiseaseIndexList","difference","Array","isArray","length","dateOfExamFirst","r","dateOfExamSecond","additionalVaccine","infectedDate","indexOf","refresh","parseData","binary","book","read","type","cellDates","cellNF","cellText","sheet","Sheets","SheetNames","rawData","utils","sheet_to_json","row","Object","keys","reduce","replace","parserData","props","resultOfValidation","errors","messages","push","e","warn","reader","FileReader","readAsBinaryString","onload","formatRequest","_d$underlyingDiseases","_d$dateOfExamFirst","_d$resultOfExamFirst","_d$dateOfExamSecond","_d$resultOfExamSecond","url","window","location","href","profileModel","fullName","name","gender","cmnd","identityCard","cccd","phoneNumber","dateOfBirth","hasYearOfBirthOnly","profileCreationReason","workAddresses","addressesInVietnam","wardValue","quarter","quarterGroup","streetHouseNumber","underlyingDiseases","createdFrom","newImmunization","additionalImmunizationStatus","injectionDate","additionalInjectionDate","vaccine","disease","curImmunizations","injectionDateSecond","vaccineSecond","injectionDateFirst","vaccineFirst","treatment","fromDate","contents","DCGTC","LFDCLTN","quickTestModel","date1","result1","resultOfExamFirst","date2","result2","resultOfExamSecond","createProfileMqExchangeName","process","env","NODE_ENV","getImportError","_errorResponse$respon","errorResponse","arguments","undefined","response","resultError","succeed","message","examinationError","uploadData","rl","dataColumns","accessor","_ref2","_ref3","_ref4","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","sub","style","color","_ref5","_ref6","errorColumns","_ref7","_ref8","divided","relaxed","m","Item","verticalAlign","Content","Description","jsx_menuTable","panes","menuItem","render","Pane","columns","i","renderActiveOnly","resultColumns","_ref9","_ref10","_ref11","_ref12","_ref13","_r$result","_r$result2","jsx_resultTable","title","c","t","_t$result","rowError","_r$result3","rowSucceed","_r$result4","jsx_downloadTemplate","info","icon","marginBottom","cursor","onClick","jsx_content","size","inverted","active","labelPosition","content","current","click","marginLeft","fontWeight","hidden","ref","onChange","target","files","accept","Actions","positive","negative","propTypes","bool","func","defaultProps"],"sources":["H:/BAKCO/pj/data reconciliation/src/profile/components/ImportGroupProfileRiskModal.js"],"sourcesContent":["/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-await-in-loop */\n/* eslint-disable camelcase */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\n/* eslint-disable no-param-reassign */\nimport React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  useRef,\n} from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport xlsx from 'xlsx';\n\nimport {\n  Modal,\n  Button,\n  Message,\n  Icon,\n  Header,\n  Tab,\n  List,\n  Dimmer,\n  Loader,\n} from 'semantic-ui-react';\nimport { DataTable } from 'app/components/shared';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { importQuickTestJson } from 'medical-test/actions/medical-test';\nimport { getUnderlyingDiseases } from 'profile/actions/profile';\nimport {\n  formatToDate,\n  formatAddressToString,\n  downloadFile,\n  formatToTime,\n  deburr,\n  getExaminationError,\n} from 'app/utils/helpers';\nimport { formatGender } from 'profile/utils/helpers';\nimport { IMMUNIZATION_STATUSES } from 'profile/utils/constants';\n\nimport locations from 'app/assets/mock/locations';\nimport excelTemplate from 'app/assets/excels/Mẫu import hồ sơ thuộc nhóm nguy cơ.xlsx';\n\nconst Wrapper = styled.div`\n  position: relative;\n`;\n\nconst MenuWrapper = styled.div`\n  margin-top: 15px;\n  & .tab {\n    padding-top: 0.1em !important;\n  }\n  & .fVDZkI {\n    margin-top: 0 !important;\n  }\n`;\n\nconst resultsOfExam = ['Dương tính', 'Âm tính'];\nconst immunizationStatusOptions = [\n  { key: 1, value: IMMUNIZATION_STATUSES.NO_VACCINE, text: 'Chưa tiêm' },\n  { key: 2, value: IMMUNIZATION_STATUSES.ONE_SHOT, text: 'Tiêm 1 mũi' },\n  { key: 3, value: IMMUNIZATION_STATUSES.TWO_SHOT, text: 'Tiêm 2 mũi' },\n];\n\nconst steps = {\n  downloadTemplate: 0,\n  reviewData: 1,\n  result: 2,\n};\n\nconst ImportGroupProfileRiskModal = ({\n  open,\n  onClose: onCloseProp,\n  onRefresh,\n}) => {\n  const [step, setStep] = useState(steps.downloadTemplate);\n  const [disabled, setDisabled] = useState(false);\n\n  const fileInputRef = useRef();\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  const [data, setData] = useState([]);\n  const [error, setError] = useState([]);\n  const [result, setResult] = useState([]);\n\n  const dispatch = useDispatch();\n  const {\n    underlyingDiseaseData: { data: underlyingDiseaseList },\n  } = useSelector((state) => state.profile);\n  const { importQuickTestJsonLoading } = useSelector(\n    (state) => state.medicalTest,\n  );\n\n  const loading = importQuickTestJsonLoading;\n\n  const model = useMemo(\n    () => [\n      {\n        header: 'Họ tên(*)',\n        assign: 'name',\n        formatter: (value) => value.toUpperCase().trim(),\n        validate: (__, value) => {\n          if (!value) {\n            return 'Bắt buộc nhập tên';\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Ngày sinh(*)',\n        assign: 'dateOfBirth',\n        formatter: (value) =>\n          moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n        validate: (__, value) => {\n          if (!value) {\n            return 'Bắt buộc nhập ngày sinh';\n          }\n\n          const date = moment(value, 'DD/MM/YYYY');\n          const beforeDate = moment('01/01/1921', 'DD/MM/YYYY');\n          const afterDate = moment().endOf('day');\n          if (date > afterDate || date < beforeDate) {\n            return `Ngày sinh phải nằm trong khoảng từ ${beforeDate.format(\n              'DD/MM/YYYY',\n            )} đến ${afterDate.format('DD/MM/YYYY')}`;\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Giới tính  (Nữ/Nam)(*)',\n        assign: 'gender',\n        formatter: (value) => formatGender(value),\n      },\n      {\n        header: 'CMND /CCCD(*)',\n        assign: 'identityCard',\n        validate: (__, value) => {\n          if (!value) {\n            return 'Bắt buộc nhập CMND/CCCD';\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Điện thoại (*)',\n        assign: 'phoneNumber',\n        formatter: (value) => (typeof value === 'number' ? `0${value}` : value),\n        validate: (__, value) => {\n          if (!value) {\n            return 'Bắt buộc nhập số điện thoại';\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Số nhà, tên đường (*)',\n        assign: 'streetHouseNumber',\n        validate: (__, value) => {\n          if (!value) {\n            return 'Bắt buộc nhập địa chỉ';\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Tỉnh/Thành phố (*)',\n        assign: 'provinceValue',\n        formatter: (__, value) =>\n          locations?.find((p) =>\n            p?.label?.toLowerCase()?.includes(`${value}`.toLowerCase()),\n          )?.value,\n        validate: (__, value) => {\n          if (!value) {\n            return 'Bắt buộc nhập tỉnh/thành phố';\n          }\n          const province = locations?.find((p) =>\n            p?.label?.toLowerCase()?.includes(`${value}`.toLowerCase()),\n          );\n          if (!province) {\n            return 'Tỉnh/Thành phố không hợp lệ';\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Quận/Huyện/ TP/TX (*)',\n        assign: 'districtValue',\n        formatter: (obj, value) =>\n          locations\n            ?.find((p) =>\n              p?.value\n                ?.toLowerCase()\n                ?.includes(`${obj.provinceValue}`.toLowerCase()),\n            )\n            ?.districts?.find((d) =>\n              d?.label?.toLowerCase()?.includes(`${value}`.toLowerCase()),\n            )?.value,\n        validate: (obj, value) => {\n          if (!value) {\n            return 'Bắt buộc nhập quận/huyện/thành phố/thị xã';\n          }\n          if (obj?.provinceValue) {\n            const district = locations\n              ?.find((p) =>\n                p.value\n                  ?.toLowerCase()\n                  ?.includes(`${obj.provinceValue}`.toLowerCase()),\n              )\n              ?.districts?.find((d) =>\n                d.label?.toLowerCase()?.includes(`${value}`.toLowerCase()),\n              );\n            if (!district) {\n              return 'Quận/Huyện/Thành phố/Thị xã không hợp lệ';\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Phường/Xã/ Thị trấn (*)',\n        assign: 'wardValue',\n        formatter: (obj, value) =>\n          locations\n            ?.find((p) =>\n              p?.value\n                ?.toLowerCase()\n                ?.includes(`${obj.provinceValue}`.toLowerCase()),\n            )\n            ?.districts?.find((d) =>\n              d?.value\n                ?.toLowerCase()\n                ?.includes(`${obj.districtValue}`.toLowerCase()),\n            )\n            ?.wards?.find((d) =>\n              d?.label?.toLowerCase()?.includes(`${value}`.toLowerCase()),\n            )?.value,\n        validate: (obj, value) => {\n          if (!value) {\n            return 'Bắt buộc nhập phường/xã/thị trấn';\n          }\n          if (obj?.provinceValue && obj?.districtValue) {\n            const ward = locations\n              ?.find((p) =>\n                p?.value\n                  ?.toLowerCase()\n                  ?.includes(`${obj.provinceValue}`.toLowerCase()),\n              )\n              ?.districts?.find((d) =>\n                d?.value\n                  ?.toLowerCase()\n                  ?.includes(`${obj.districtValue}`.toLowerCase()),\n              )\n              ?.wards?.find((d) =>\n                d?.label?.toLowerCase()?.includes(`${value}`.toLowerCase()),\n              );\n            if (!ward) {\n              return 'Phường/Xã/Thị trấn không hợp lệ';\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'KP/ấp',\n        assign: 'quarter',\n        validate: (__, value) => {\n          if (!value) {\n            return 'Bắt buộc nhập khu phố/ấp';\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Tổ(*)',\n        assign: 'quarterGroup',\n        validate: (__, value) => {\n          if (!value) {\n            return 'Bắt buộc nhập tổ dân phố';\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Tiêm vắc xin (1 mũi/2 mũi/ chưa tiêm)(*)',\n        assign: 'immunizationStatus',\n        formatter: (value) => {\n          const status = immunizationStatusOptions.find(\n            (p) => p.text.toUpperCase() === value.toUpperCase(),\n          );\n          return status?.value;\n        },\n        validate: (__, value) => {\n          if (!value) {\n            return 'Bắt buộc chọn trạng thái tiêm vắc xin';\n          }\n\n          const status = immunizationStatusOptions.find(\n            (p) => p.text.toUpperCase() === value.toUpperCase(),\n          );\n          if (!status) {\n            return 'Trạng thái tiêm vắc xin không đúng định dạng';\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Loại Vaccine (mũi 1)',\n        assign: 'vaccineFirst',\n        validate: (obj, value) => {\n          if (typeof obj.immunizationStatus === 'number') {\n            if (\n              !value &&\n              obj.immunizationStatus >= IMMUNIZATION_STATUSES.ONE_SHOT\n            ) {\n              return 'Bắt buộc nhập loại vắc xin (mũi 1)';\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Ngày tiêm mũi 1',\n        assign: 'injectionDateFirst',\n        formatter: (value) =>\n          moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n        validate: (obj, value) => {\n          if (typeof obj.immunizationStatus === 'number') {\n            if (\n              !value &&\n              obj.immunizationStatus >= IMMUNIZATION_STATUSES.ONE_SHOT\n            ) {\n              return 'Bắt buộc nhập ngày tiêm (mũi 1)';\n            }\n\n            const date = moment(value, 'DD/MM/YYYY');\n            const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n            const afterDate = moment().endOf('day');\n            if (date > afterDate || date < beforeDate) {\n              return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format(\n                'DD/MM/YYYY',\n              )} đến ${afterDate.format('DD/MM/YYYY')}`;\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Loại Vaccine (mũi 2)',\n        assign: 'vaccineSecond',\n        validate: (obj, value) => {\n          if (typeof obj.immunizationStatus === 'number') {\n            if (\n              !value &&\n              obj.immunizationStatus >= IMMUNIZATION_STATUSES.TWO_SHOT\n            ) {\n              return 'Bắt buộc nhập loại vắc xin (mũi 2)';\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Ngày tiêm mũi 2',\n        assign: 'injectionDateSecond',\n        formatter: (value) =>\n          moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n        validate: (obj, value) => {\n          if (typeof obj.immunizationStatus === 'number') {\n            if (\n              !value &&\n              obj.immunizationStatus >= IMMUNIZATION_STATUSES.TWO_SHOT\n            ) {\n              return 'Bắt buộc nhập ngày tiêm (mũi 2)';\n            }\n\n            const date = moment(value, 'DD/MM/YYYY');\n            const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n            const afterDate = moment().endOf('day');\n            if (date > afterDate || date < beforeDate) {\n              return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format(\n                'DD/MM/YYYY',\n              )} đến ${afterDate.format('DD/MM/YYYY')}`;\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Có bệnh lý nền(*)',\n        assign: 'underlyingDiseases',\n        formatter: (value) =>\n          value.toString().includes(';')\n            ? value\n              .toString()\n              .split(';')\n              .filter((v) =>\n                (underlyingDiseaseList || []).find(\n                  (u) => u.index === parseInt(v, 10),\n                ),\n              )\n              .map((u) => u.id)\n            : (underlyingDiseaseList || [])\n              .filter((u) => u.index === parseInt(value.toString(), 10))\n              .map((u) => u.id),\n        validate: (__, value) => {\n          if (typeof value === 'undefined') {\n            return 'Bắt buộc phải nhập có bệnh lý nền';\n          }\n          const underlyingDiseaseIndexList = (underlyingDiseaseList || []).map(\n            (u) => u.index,\n          );\n          const difference = value.toString().includes(';')\n            ? value\n              .toString()\n              .split(';')\n              .filter(\n                (v) =>\n                  v && !underlyingDiseaseIndexList.includes(parseInt(v, 10)),\n              )\n            : !underlyingDiseaseIndexList.includes(parseInt(value, 10))\n              ? [value]\n              : [];\n          if (Array.isArray(difference) && difference.length > 0) {\n            return 'Bệnh nền không hợp lệ';\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Thời gian nhiễm(mm/yyyy)',\n        assign: 'infectedDate',\n        formatter: (value) =>\n          moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n        validate: (value) => {\n          if (value) {\n            const date = moment(value, 'DD/MM/YYYY');\n            const afterDate = moment().endOf('day');\n            if (date > afterDate) {\n              return `Ngày xét nghiệm không được lớn hơn ${afterDate.format(\n                'DD/MM/YYYY',\n              )}`;\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Ngày XN  lần 1',\n        assign: 'dateOfExamFirst',\n        formatter: (value) =>\n          moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n        validate: (value) => {\n          if (value) {\n            const date = moment(value, 'DD/MM/YYYY');\n            const afterDate = moment().endOf('day');\n            if (date > afterDate) {\n              return `Ngày xét nghiệm không được lớn hơn ${afterDate.format(\n                'DD/MM/YYYY',\n              )}`;\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Kết quả XN lần 1',\n        assign: 'resultOfExamFirst',\n        validate: (obj, value) => {\n          if (typeof obj.dateOfExamFirst !== 'undefined') {\n            if (\n              !resultsOfExam.find(\n                (r) => r.toUpperCase() === value.toUpperCase(),\n              )\n            ) {\n              return 'Kết quả xét nghiệm (lần 1) không đúng định dạng';\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Ngày XN  lần 2',\n        assign: 'dateOfExamSecond',\n        formatter: (value) =>\n          moment(value, 'DD/MM/YYYY').format('YYYY-MM-DDT07:00:00'),\n        validate: (value) => {\n          if (value) {\n            const date = moment(value, 'DD/MM/YYYY');\n            const afterDate = moment().endOf('day');\n            if (date > afterDate) {\n              return `Ngày xét nghiệm không được lớn hơn ${afterDate.format(\n                'DD/MM/YYYY',\n              )}`;\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Kết quả XN lần 2',\n        assign: 'resultOfExamSecond',\n        validate: (obj, value) => {\n          if (typeof obj.dateOfExamSecond !== 'undefined') {\n            if (\n              !resultsOfExam.find(\n                (r) => r.toUpperCase() === value.toUpperCase(),\n              )\n            ) {\n              return 'Kết quả xét nghiệm (lần 1) không đúng định dạng';\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Loại Vaccine (Mũi bổ sung hoặc nhắc lại)',\n        assign: 'additionalVaccine',\n        validate: (obj, value) => {\n          if (value) {\n            if (typeof obj.additionalVaccine !== 'undefined') {\n              return 'Chỉ được điền 1 trong 3 mũi tiêm (mũi cơ bản 1/mũi cơ bản 2/mũi bổ sung (mũi nhắc lại))';\n            }\n            if (\n              typeof obj.immunizationStatus !== 'number' ||\n              obj.immunizationStatus !== IMMUNIZATION_STATUSES.TWO_SHOT\n            ) {\n              return 'Yêu cầu phải tiêm đủ 2 mũi trước khi tiêm mũi bổ sung (mũi nhắc lại)';\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Ngày tiêm (Mũi bổ sung hoặc nhắc lại)',\n        assign: 'additionalInjectionDate',\n        validate: (obj, value) => {\n          if (\n            typeof obj.additionalVaccine !== 'undefined' &&\n            obj.immunizationStatus === IMMUNIZATION_STATUSES.TWO_SHOT\n          ) {\n            if (!value) {\n              return 'Bắt buộc phải nhập ngày tiêm (mũi bổ sung hoặc nhắc lại)';\n            }\n\n            const date = moment(value, 'DD/MM/YYYY');\n            const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n            const afterDate = moment().endOf('day');\n            if (date > afterDate || date < beforeDate) {\n              return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format(\n                'DD/MM/YYYY',\n              )} đến ${afterDate.format('DD/MM/YYYY')}`;\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Loại Vaccine (Mũi CB 1)',\n        assign: 'additionalVaccine',\n        validate: (obj, value) => {\n          if (value) {\n            if (typeof obj.additionalVaccine !== 'undefined') {\n              return 'Chỉ được điền 1 trong 3 mũi tiêm (mũi cơ bản 1/mũi cơ bản 2/mũi bổ sung (mũi nhắc lại))';\n            }\n            if (\n              typeof obj.immunizationStatus !== 'number' ||\n              obj.immunizationStatus !== IMMUNIZATION_STATUSES.NO_VACCINE\n            ) {\n              return 'Yêu cầu chưa tiêm mũi nào trước khi tiêm mũi cơ bản 1';\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Ngày tiêm (Mũi CB 1)',\n        assign: 'additionalInjectionDate',\n        validate: (obj, value) => {\n          if (\n            typeof obj.additionalVaccine !== 'undefined' &&\n            obj.immunizationStatus === IMMUNIZATION_STATUSES.NO_VACCINE\n          ) {\n            if (!value) {\n              return 'Bắt buộc phải nhập ngày tiêm (mũi cơ bản 1)';\n            }\n\n            const date = moment(value, 'DD/MM/YYYY');\n            const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n            const afterDate = moment().endOf('day');\n            if (date > afterDate || date < beforeDate) {\n              return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format(\n                'DD/MM/YYYY',\n              )} đến ${afterDate.format('DD/MM/YYYY')}`;\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Loại Vaccine (Mũi CB 2)',\n        assign: 'additionalVaccine',\n        validate: (obj, value) => {\n          if (value) {\n            if (typeof obj.additionalVaccine !== 'undefined') {\n              return 'Chỉ được điền 1 trong 3 mũi tiêm (mũi cơ bản 1/mũi cơ bản 2/mũi bổ sung (mũi nhắc lại))';\n            }\n            if (\n              typeof obj.immunizationStatus !== 'number' ||\n              obj.immunizationStatus !== IMMUNIZATION_STATUSES.ONE_SHOT\n            ) {\n              return 'Yêu cầu phải tiêm mũi 1 trước khi tiêm mũi cơ bản 2';\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Ngày tiêm (Mũi CB 2)',\n        assign: 'additionalInjectionDate',\n        validate: (obj, value) => {\n          if (\n            typeof obj.additionalVaccine !== 'undefined' &&\n            obj.immunizationStatus === IMMUNIZATION_STATUSES.ONE_SHOT\n          ) {\n            if (!value) {\n              return 'Bắt buộc phải nhập ngày tiêm (mũi cơ bản 2)';\n            }\n\n            const date = moment(value, 'DD/MM/YYYY');\n            const beforeDate = moment('01/01/2021', 'DD/MM/YYYY');\n            const afterDate = moment().endOf('day');\n            if (date > afterDate || date < beforeDate) {\n              return `Ngày tiêm phải nằm trong khoảng từ ${beforeDate.format(\n                'DD/MM/YYYY',\n              )} đến ${afterDate.format('DD/MM/YYYY')}`;\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Được cấp gói thuốc C',\n        assign: 'DCGTC',\n        validate: (obj, value) => {\n          if (obj.infectedDate) {\n            if (value) {\n              if (!['CÓ', 'KHÔNG'].indexOf(value.toUpperCase())) {\n                return 'Được cấp gói thuốc C không đúng định dạng';\n              }\n            }\n          }\n          return false;\n        },\n      },\n      {\n        header: 'Là F0 được cách ly tại nhà',\n        assign: 'LFDCLTN',\n        validate: (obj, value) => {\n          if (obj.infectedDate) {\n            if (value) {\n              if (!['CÓ', 'KHÔNG'].indexOf(value.toUpperCase())) {\n                return 'Không đúng định dạng cột (Là F0 được cách lý tại nhà)';\n              }\n            }\n          }\n          return false;\n        },\n      },\n    ],\n    [underlyingDiseaseList],\n  );\n\n  const refresh = () => {\n    setStep(steps.downloadTemplate);\n    setDisabled(false);\n    setSelectedFile(null);\n    setData([]);\n    setError([]);\n    setResult([]);\n  };\n\n  const onClose = () => {\n    refresh();\n    onCloseProp();\n    onRefresh();\n  };\n\n  // #region parse data\n  const parseData = useCallback(\n    (binary) => {\n      try {\n        const book = xlsx.read(binary, {\n          type: 'binary',\n          cellDates: true,\n          cellNF: false,\n          cellText: false,\n        });\n\n        const sheet = book.Sheets[book.SheetNames[0]];\n        const rawData = xlsx.utils.sheet_to_json(sheet).map((row) =>\n          Object.keys(row).reduce((obj, key) => {\n            obj[key.replace(/(\\r\\n|\\n|\\r)/gm, '').trim()] = row[key];\n            return obj;\n          }, {}),\n        );\n        const parserData = rawData.map((row, index) =>\n          model.reduce((obj, props) => {\n            const resultOfValidation = props?.validate\n              ? props.validate(obj, row[props.header])\n              : false;\n            if (resultOfValidation) {\n              if (typeof obj.errors === 'undefined') {\n                obj.errors = {\n                  row: index + 1,\n                  messages: [],\n                };\n              }\n              obj.errors.messages.push(resultOfValidation);\n            } else if (\n              typeof row[props.header] !== 'undefined' &&\n              row[props.header] !== ''\n            ) {\n              obj[props.assign] = props?.formatter\n                ? props.formatter(row[props.header])\n                : row[props.header];\n            }\n            return obj;\n          }, {}),\n        );\n        setData(parserData.filter((d) => !d?.errors));\n        setError(parserData.filter((d) => d?.errors));\n      } catch (e) {\n        toast.warn('Tệp tin không đúng định dạng');\n      }\n    },\n    [model],\n  );\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      if (reader.readAsBinaryString) {\n        reader.onload = () => parseData(reader.result);\n        reader.readAsBinaryString(selectedFile);\n      }\n    }\n    // eslint-disable-next-line\n  }, [selectedFile]);\n  // #endregion\n\n  // #region upload data\n  const formatRequest = (d) => {\n    const url = window.location.href;\n    return {\n      profileModel: {\n        profile: {\n          fullName: d.name,\n          gender: d.gender,\n          cmnd: d.identityCard.length !== 12 ? `${d.identityCard}` : null,\n          cccd: d.identityCard.length === 12 ? `${d.identityCard}` : null,\n          phoneNumber: d.phoneNumber,\n          dateOfBirth: d.dateOfBirth,\n          hasYearOfBirthOnly: false,\n          profileCreationReason: {},\n          workAddresses: [],\n          addressesInVietnam: [\n            {\n              provinceValue: d.provinceValue,\n              districtValue: d.districtValue,\n              wardValue: d.wardValue,\n              quarter: d.quarter,\n              quarterGroup: d.quarterGroup,\n              streetHouseNumber: d.streetHouseNumber,\n            },\n          ],\n          underlyingDiseases: d?.underlyingDiseases ?? null,\n          createdFrom: 6,\n        },\n        newImmunization: d?.additionalImmunizationStatus\n          ? {\n            immunizationStatus: d.additionalImmunizationStatus,\n            injectionDate: d.additionalInjectionDate,\n            vaccine: d.additionalVaccine,\n            disease: 'Covid-19',\n          }\n          : null,\n        curImmunizations: d?.injectionDateSecond\n          ? [\n            {\n              immunizationStatus: IMMUNIZATION_STATUSES.TWO_SHOT,\n              injectionDate: d.injectionDateSecond,\n              vaccine: d.vaccineSecond,\n              disease: 'Covid-19',\n            },\n            {\n              immunizationStatus: IMMUNIZATION_STATUSES.ONE_SHOT,\n              injectionDate: d.injectionDateFirst,\n              vaccine: d.vaccineFirst,\n              disease: 'Covid-19',\n            },\n          ]\n          : d?.injectionDateFirst\n            ? [\n              {\n                immunizationStatus: IMMUNIZATION_STATUSES.ONE_SHOT,\n                injectionDate: d.injectionDateFirst,\n                vaccine: d.vaccineFirst,\n                disease: 'Covid-19',\n              },\n            ]\n            : [],\n        treatment: d?.infectedDate\n          ? {\n            fromDate: d?.infectedDate,\n            contents: {\n              DCGTC: d?.DCGTC,\n              LFDCLTN: d?.LFDCLTN,\n            },\n          }\n          : null,\n      },\n      quickTestModel: {\n        date1: d?.dateOfExamFirst ?? null,\n        result1: d?.resultOfExamFirst ?? null,\n        date2: d?.dateOfExamSecond ?? null,\n        result2: d?.resultOfExamSecond ?? null,\n      },\n      createProfileMqExchangeName:\n        url.indexOf('abcde') > -1 || process.env.NODE_ENV === 'development'\n          ? 'NewProfileQueue1'\n          : 'NewProfileQueue',\n    };\n  };\n  const getImportError = (errorResponse = { response: {} }) => {\n    const resultError = {\n      succeed: false,\n      message: 'Lỗi không xác định',\n    };\n    if (errorResponse.response?.data) {\n      if (typeof errorResponse.response.data === 'string') {\n        if (\n          errorResponse.response.data.includes(\n            'Record is existed or only update',\n          )\n        ) {\n          resultError.message = 'Xung đột thông tin tiền sử tiêm chủng';\n        } else {\n          const examinationError = getExaminationError(\n            errorResponse.response.data,\n          );\n          if (examinationError) {\n            resultError.message = examinationError;\n          }\n        }\n      }\n    }\n    return resultError;\n  };\n  const uploadData = async () => {\n    for (const profile of data) {\n      try {\n        await dispatch(importQuickTestJson([formatRequest(profile)]));\n        setResult((rl) => [...rl, { ...profile, result: { succeed: true } }]);\n      } catch (e) {\n        setResult((rl) => [\n          ...rl,\n          { ...profile, result: { ...getImportError(e) } },\n        ]);\n      }\n    }\n\n    setStep(steps.result);\n  };\n  // #endregion\n\n  // #region component\n  const dataColumns = useMemo(\n    () => [\n      {\n        Header: '#',\n        accessor: 'index',\n      },\n      {\n        Header: 'Họ tên',\n        accessor: 'name',\n      },\n      {\n        Header: 'Ngày sinh',\n        formatter: ({ dateOfBirth }) => formatToDate(dateOfBirth),\n      },\n      {\n        Header: 'Số điện thoại',\n        accessor: 'phoneNumber',\n      },\n      {\n        Header: 'Địa chỉ',\n        formatter: ({\n          streetHouseNumber,\n          provinceValue,\n          districtValue,\n          wardValue,\n        }) =>\n          formatAddressToString({\n            streetHouseNumber,\n            provinceValue,\n            districtValue,\n            wardValue,\n          }),\n      },\n      {\n        Header: 'Tiền sử tiêm chủng',\n        formatter: ({\n          vaccineFirst,\n          injectionDateFirst,\n          vaccineSecond,\n          injectionDateSecond,\n        }) => (\n          <div>\n            {vaccineSecond ? (\n              <>\n                <Header sub>\n                  <b style={{ color: '#DB2729' }}>Mũi 2</b>\n                  {` | ${vaccineSecond}`}\n                </Header>\n                <span>{formatToDate(injectionDateSecond)}</span>\n              </>\n            ) : vaccineFirst ? (\n              <>\n                <Header sub>\n                  <b style={{ color: '#DB2729' }}>Mũi 1</b>\n                  {` | ${vaccineFirst}`}\n                </Header>\n                <span>{formatToDate(injectionDateFirst)}</span>\n              </>\n            ) : (\n              <Header sub>Chưa tiêm</Header>\n            )}\n          </div>\n        ),\n      },\n      {\n        Header: 'Xét nghiệm lần 1',\n        formatter: ({ dateOfExamFirst, resultOfExamFirst }) =>\n          resultOfExamFirst ? (\n            <div>\n              <Header sub>\n                {resultOfExamFirst.includes(deburr('Dương')) ? (\n                  <b style={{ color: '#DB2729' }}>{resultOfExamFirst}</b>\n                ) : (\n                  resultOfExamFirst\n                )}\n              </Header>\n              <span>{formatToDate(dateOfExamFirst)}</span>\n            </div>\n          ) : null,\n      },\n      {\n        Header: 'Xét nghiệm lần 2',\n        formatter: ({ dateOfExamSecond, resultOfExamSecond }) =>\n          resultOfExamSecond ? (\n            <div>\n              <Header sub>\n                {resultOfExamSecond.includes(deburr('Dương')) ? (\n                  <b style={{ color: '#DB2729' }}>{resultOfExamSecond}</b>\n                ) : (\n                  resultOfExamSecond\n                )}\n              </Header>\n              <span>{formatToDate(dateOfExamSecond)}</span>\n            </div>\n          ) : null,\n      },\n    ],\n    [],\n  );\n  const errorColumns = useMemo(\n    () => [\n      {\n        Header: 'Hàng',\n        formatter: ({ errors }) => <Header sub>{errors?.row}</Header>,\n      },\n      {\n        Header: ' ',\n        formatter: ({ errors }) =>\n          errors?.messages ? (\n            <List divided relaxed>\n              {errors.messages.map((m) => (\n                <List.Item key={m}>\n                  <List.Icon name=\"x\" color=\"red\" verticalAlign=\"middle\" />\n                  <List.Content>\n                    <List.Description>{m}</List.Description>\n                  </List.Content>\n                </List.Item>\n              ))}\n            </List>\n          ) : null,\n      },\n    ],\n    [],\n  );\n  const jsx_menuTable = useMemo(() => {\n    const panes = [\n      {\n        menuItem: `Dữ liệu đọc được (${data.length})`,\n        render: () => (\n          <Tab.Pane>\n            <DataTable\n              columns={dataColumns}\n              data={data.map((d, i) => ({ ...d, index: i + 1 }))}\n            />\n          </Tab.Pane>\n        ),\n      },\n      {\n        menuItem: `Dữ liệu bị lỗi (${error.length})`,\n        render: () => (\n          <Tab.Pane>\n            <DataTable\n              columns={errorColumns}\n              data={error.map((e, i) => ({ ...e, index: i + 1 }))}\n            />\n          </Tab.Pane>\n        ),\n      },\n    ];\n\n    return (\n      <MenuWrapper>\n        <Tab panes={panes} renderActiveOnly />\n      </MenuWrapper>\n    );\n  }, [data, error, dataColumns, errorColumns]);\n\n  const resultColumns = useMemo(\n    () => [\n      {\n        Header: '#',\n        accessor: 'index',\n      },\n      {\n        Header: 'Họ tên',\n        accessor: 'name',\n      },\n      {\n        Header: 'Ngày sinh',\n        formatter: ({ dateOfBirth }) => formatToDate(dateOfBirth),\n      },\n      {\n        Header: 'Số điện thoại',\n        accessor: 'phoneNumber',\n      },\n      {\n        Header: 'Địa chỉ',\n        formatter: ({\n          streetHouseNumber,\n          provinceValue,\n          districtValue,\n          wardValue,\n        }) =>\n          formatAddressToString({\n            streetHouseNumber,\n            provinceValue,\n            districtValue,\n            wardValue,\n          }),\n      },\n      {\n        Header: 'Tiền sử tiêm chủng',\n        formatter: ({\n          vaccineFirst,\n          injectionDateFirst,\n          vaccineSecond,\n          injectionDateSecond,\n        }) => (\n          <div>\n            {vaccineSecond ? (\n              <>\n                <Header sub>\n                  <b style={{ color: '#DB2729' }}>Mũi 2</b>\n                  {` | ${vaccineSecond}`}\n                </Header>\n                <span>{formatToTime(injectionDateSecond)}</span>\n              </>\n            ) : vaccineFirst ? (\n              <>\n                <Header sub>\n                  <b style={{ color: '#DB2729' }}>Mũi 1</b>\n                  {` | ${vaccineFirst}`}\n                </Header>\n                <span>{formatToTime(injectionDateFirst)}</span>\n              </>\n            ) : (\n              <Header sub>Chưa tiêm</Header>\n            )}\n          </div>\n        ),\n      },\n      {\n        Header: 'Xét nghiệm lần 1',\n        formatter: ({ dateOfExamFirst, resultOfExamFirst }) =>\n          resultOfExamFirst ? (\n            <div>\n              <Header sub>\n                {resultOfExamFirst.includes(deburr('Dương')) ? (\n                  <b style={{ color: '#DB2729' }}>{resultOfExamFirst}</b>\n                ) : (\n                  resultOfExamFirst\n                )}\n              </Header>\n              <span>{formatToTime(dateOfExamFirst)}</span>\n            </div>\n          ) : null,\n      },\n      {\n        Header: 'Xét nghiệm lần 2',\n        formatter: ({ dateOfExamSecond, resultOfExamSecond }) =>\n          resultOfExamSecond ? (\n            <div>\n              <Header sub>\n                {resultOfExamSecond.includes(deburr('Dương')) ? (\n                  <b style={{ color: '#DB2729' }}>{resultOfExamSecond}</b>\n                ) : (\n                  resultOfExamSecond\n                )}\n              </Header>\n              <span>{formatToTime(dateOfExamSecond)}</span>\n            </div>\n          ) : null,\n      },\n      {\n        Header: ' ',\n        formatter: (r) => (\n          <>\n            <Icon name=\"info circle\" />{' '}\n            {r?.result?.succeed ? 'Thành công' : r?.result?.message}\n          </>\n        ),\n      },\n    ],\n    [],\n  );\n  const jsx_resultTable = useMemo(\n    () => (\n      <DataTable\n        title={`Kết quả đã nạp ${result.reduce(\n          (c, t) => (t?.result?.succeed ? c + 1 : c),\n          0,\n        )}/${result.length} hồ sơ`}\n        columns={resultColumns}\n        data={result.map((d, i) => ({ ...d, index: i + 1 }))}\n        rowError={(r) => !r?.result?.succeed}\n        rowSucceed={(r) => r?.result?.succeed}\n      />\n    ),\n    [result, resultColumns],\n  );\n\n  const jsx_downloadTemplate = useMemo(\n    () => (\n      <Message\n        info\n        icon\n        style={{ marginBottom: 0, cursor: 'pointer' }}\n        onClick={() => downloadFile(excelTemplate)}\n      >\n        <Icon name=\"download\" />\n        <Message.Content>\n          <Message.Header>Tải tệp tin mẫu</Message.Header>\n          Sử dụng tệp tin mẫu, để đảm bảo dữ liệu chính xác\n        </Message.Content>\n      </Message>\n    ),\n    [],\n  );\n\n  const jsx_content = useMemo(() => {\n    switch (step) {\n      case steps.downloadTemplate:\n        return jsx_downloadTemplate;\n      case steps.reviewData:\n        return jsx_menuTable;\n      case steps.result:\n        return jsx_resultTable;\n      default:\n        return jsx_downloadTemplate;\n    }\n  }, [step, jsx_downloadTemplate, jsx_menuTable, jsx_resultTable]);\n  // #endregion\n\n  useEffect(() => {\n    if (!underlyingDiseaseList || underlyingDiseaseList.length === 0) {\n      dispatch(getUnderlyingDiseases({}));\n    }\n    // eslint-disable-next-line\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (error.length === 0) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  }, [error]);\n\n  return (\n    <Modal\n      open={open}\n      size={step !== steps.downloadTemplate ? 'fullscreen' : undefined}\n      onClose={onClose}\n    >\n      <Modal.Header>Nạp dữ liệu từ file Excel</Modal.Header>\n      <Modal.Content>\n        <Wrapper>\n          <Dimmer inverted active={loading}>\n            <Loader />\n          </Dimmer>\n          <div>\n            <Button\n              icon=\"upload\"\n              labelPosition=\"right\"\n              color=\"green\"\n              content=\"Chọn File\"\n              onClick={() => {\n                refresh();\n                fileInputRef.current.click();\n              }}\n            />\n            {selectedFile ? (\n              <span style={{ marginLeft: '10px', fontWeight: '700' }}>\n                {selectedFile.name}\n              </span>\n            ) : null}\n          </div>\n          <input\n            hidden\n            type=\"file\"\n            ref={fileInputRef}\n            onChange={(e) => {\n              setSelectedFile(e.target.files[0]);\n              setStep(steps.reviewData);\n            }}\n            accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n          />\n          {jsx_content}\n        </Wrapper>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          positive\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          content=\"Xác nhận\"\n          disabled={disabled}\n          loading={loading}\n          onClick={uploadData}\n        />\n        <Button\n          negative\n          labelPosition=\"right\"\n          icon=\"close\"\n          content=\"Đóng\"\n          onClick={onClose}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nImportGroupProfileRiskModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onRefresh: PropTypes.func,\n};\n\nImportGroupProfileRiskModal.defaultProps = {\n  open: false,\n  onClose: () => { },\n  onRefresh: () => { },\n};\n\nexport default ImportGroupProfileRiskModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}