{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\infection-chain\\\\components\\\\subject\\\\medical-test\\\\SamplingPlaceSection.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { Form } from 'semantic-ui-react';\nimport { Controller, useFormContext } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getSamplingPlaces, setExaminationInputCache } from 'medical-test/actions/medical-test';\nconst SamplingPlaceSection = _ref => {\n  var _inputCache$samplingP;\n  let {\n    required\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    control,\n    formState: {\n      errors\n    }\n  } = useFormContext();\n  const inputCache = useSelector(s => s.medicalTest.inputCache);\n  const options = useSelector(s => s.medicalTest.samplingPlaceList);\n  const loading = useSelector(s => s.medicalTest.getSamplingPlacesLoading);\n  useEffect(() => {\n    dispatch(getSamplingPlaces());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    name: \"samplingPlaceId\",\n    defaultValue: (_inputCache$samplingP = inputCache === null || inputCache === void 0 ? void 0 : inputCache.samplingPlaceId) !== null && _inputCache$samplingP !== void 0 ? _inputCache$samplingP : '',\n    rules: {\n      required\n    },\n    control: control,\n    render: _ref2 => {\n      let {\n        onChange,\n        onBlur,\n        value,\n        name\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Form.Select, {\n        fluid: true,\n        search: true,\n        deburr: true,\n        clearable: true,\n        required: required,\n        loading: loading,\n        label: \"N\\u01A1i l\\u1EA5y m\\u1EABu\",\n        value: value,\n        options: _.orderBy(options, _ref3 => {\n          let {\n            name: n\n          } = _ref3;\n          return n;\n        }).map(_ref4 => {\n          let {\n            id,\n            name: n\n          } = _ref4;\n          return {\n            value: id,\n            text: n\n          };\n        }),\n        onChange: (__, _ref5) => {\n          let {\n            value: v\n          } = _ref5;\n          onChange(v);\n          dispatch(setExaminationInputCache({\n            [name]: v\n          }));\n        },\n        onBlur: onBlur,\n        error: errors.samplingPlaceId && 'Bắt buộc',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n};\nSamplingPlaceSection.propTypes = {\n  required: PropTypes.bool\n};\nSamplingPlaceSection.defaultProps = {\n  required: false\n};\nexport default SamplingPlaceSection;","map":{"version":3,"names":["React","useEffect","PropTypes","_","Form","Controller","useFormContext","useDispatch","useSelector","getSamplingPlaces","setExaminationInputCache","SamplingPlaceSection","_ref","_inputCache$samplingP","required","dispatch","control","formState","errors","inputCache","s","medicalTest","options","samplingPlaceList","loading","getSamplingPlacesLoading","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Group","widths","name","defaultValue","samplingPlaceId","rules","render","_ref2","onChange","onBlur","value","Select","fluid","search","deburr","clearable","label","orderBy","_ref3","n","map","_ref4","id","text","__","_ref5","v","error","propTypes","bool","defaultProps"],"sources":["H:/BAKCO/pj/data reconciliation/src/infection-chain/components/subject/medical-test/SamplingPlaceSection.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nimport { Form } from 'semantic-ui-react';\n\nimport { Controller, useFormContext } from 'react-hook-form';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getSamplingPlaces,\n  setExaminationInputCache,\n} from 'medical-test/actions/medical-test';\n\nconst SamplingPlaceSection = ({ required }) => {\n  const dispatch = useDispatch();\n  const {\n    control,\n    formState: { errors },\n  } = useFormContext();\n\n  const inputCache = useSelector((s) => s.medicalTest.inputCache);\n\n  const options = useSelector((s) => s.medicalTest.samplingPlaceList);\n  const loading = useSelector((s) => s.medicalTest.getSamplingPlacesLoading);\n\n  useEffect(() => {\n    dispatch(getSamplingPlaces());\n  }, [dispatch]);\n\n  return (\n    <div className=\"ui form\">\n      <Form.Group widths=\"equal\">\n        <Controller\n          name=\"samplingPlaceId\"\n          defaultValue={inputCache?.samplingPlaceId ?? ''}\n          rules={{ required }}\n          control={control}\n          render={({ onChange, onBlur, value, name }) => (\n            <Form.Select\n              fluid\n              search\n              deburr\n              clearable\n              required={required}\n              loading={loading}\n              label=\"Nơi lấy mẫu\"\n              value={value}\n              options={_.orderBy(options, ({ name: n }) => n).map(\n                ({ id, name: n }) => ({\n                  value: id,\n                  text: n,\n                }),\n              )}\n              onChange={(__, { value: v }) => {\n                onChange(v);\n                dispatch(setExaminationInputCache({ [name]: v }));\n              }}\n              onBlur={onBlur}\n              error={errors.samplingPlaceId && 'Bắt buộc'}\n            />\n          )}\n        />\n      </Form.Group>\n    </div>\n  );\n};\n\nSamplingPlaceSection.propTypes = {\n  required: PropTypes.bool,\n};\n\nSamplingPlaceSection.defaultProps = {\n  required: false,\n};\n\nexport default SamplingPlaceSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}