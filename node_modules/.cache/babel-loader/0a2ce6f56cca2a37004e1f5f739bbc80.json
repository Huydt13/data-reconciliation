{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\medical-test\\\\components\\\\examinations\\\\SampleExaminationExcelModal.js\";\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button, Modal, Progress } from 'semantic-ui-react';\nimport { DataTable } from 'app/components/shared';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uploadExaminationFile } from 'medical-test/actions/medical-test';\nimport { renderExaminationResult } from 'app/utils/helpers';\nconst MarginTopButton = styled(Button)`\n  margin-top: 1em !important;\n`;\nconst StyledProgress = styled(Progress)`\n  margin: 1em 0 !important;\n`;\nconst SampleExaminationExcelModal = props => {\n  const {\n    open,\n    onClose,\n    onRefresh\n  } = props;\n  const {\n    uploadExaminationProgress,\n    uploadExaminationLoading\n  } = useSelector(state => state.medicalTest);\n  const fileInputRef = useRef();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const columns = useMemo(() => [{\n    Header: 'Mã',\n    accessor: 'code'\n  }, {\n    Header: 'Kết quả',\n    formatter: _ref => {\n      let {\n        result\n      } = _ref;\n      return renderExaminationResult(result);\n    }\n  }, {\n    Header: 'Thời gian có kết quả',\n    accessor: 'resultDate'\n  }], []);\n  const data = useMemo(() => [{\n    code: 'U07T01200001',\n    result: 'Dương tính',\n    resultDate: '20-09-2020 13:45'\n  }, {\n    code: 'U07T01200002',\n    result: 'Âm tính',\n    resultDate: '10-09-2020 10:15'\n  }, {\n    code: 'U07T01200003',\n    result: 'Dương tính',\n    resultDate: '15-10-2020 22:30'\n  }], []);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      dispatch(uploadExaminationFile(formData)).then(() => {\n        onClose();\n        onRefresh();\n      });\n    }\n    // eslint-disable-next-line\n  }, [dispatch, selectedFile]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: onClose,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"C\\u1EADp nh\\u1EADt k\\u1EBFt qu\\u1EA3 x\\xE9t nghi\\u1EC7m b\\u1EB1ng file Excel\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    title: \"M\\u1EABu Excel\",\n    celled: true,\n    noPaging: true,\n    columns: columns,\n    data: data,\n    actions: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), uploadExaminationLoading && /*#__PURE__*/React.createElement(StyledProgress, {\n    active: true,\n    color: \"green\",\n    percent: uploadExaminationProgress,\n    size: \"tiny\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MarginTopButton, {\n    primary: true,\n    onClick: () => fileInputRef.current.click(),\n    content: \"Ch\\u1ECDn File Excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    hidden: true,\n    onChange: e => setSelectedFile(e.target.files[0]),\n    accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  })));\n};\nSampleExaminationExcelModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onRefresh: PropTypes.func\n};\nSampleExaminationExcelModal.defaultProps = {\n  open: false,\n  onClose: () => {},\n  onRefresh: () => {}\n};\nexport default SampleExaminationExcelModal;","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","PropTypes","styled","Button","Modal","Progress","DataTable","useDispatch","useSelector","uploadExaminationFile","renderExaminationResult","MarginTopButton","StyledProgress","SampleExaminationExcelModal","props","open","onClose","onRefresh","uploadExaminationProgress","uploadExaminationLoading","state","medicalTest","fileInputRef","selectedFile","setSelectedFile","columns","Header","accessor","formatter","_ref","result","data","code","resultDate","dispatch","formData","FormData","append","then","createElement","size","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Content","title","celled","noPaging","actions","active","color","percent","primary","onClick","current","click","content","ref","type","hidden","onChange","e","target","files","accept","propTypes","bool","func","defaultProps"],"sources":["H:/BAKCO/pj/data reconciliation/src/medical-test/components/examinations/SampleExaminationExcelModal.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Button, Modal, Progress } from 'semantic-ui-react';\n\nimport { DataTable } from 'app/components/shared';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uploadExaminationFile } from 'medical-test/actions/medical-test';\nimport { renderExaminationResult } from 'app/utils/helpers';\n\nconst MarginTopButton = styled(Button)`\n  margin-top: 1em !important;\n`;\nconst StyledProgress = styled(Progress)`\n  margin: 1em 0 !important;\n`;\n\nconst SampleExaminationExcelModal = (props) => {\n  const { open, onClose, onRefresh } = props;\n  const { uploadExaminationProgress, uploadExaminationLoading } = useSelector(\n    (state) => state.medicalTest,\n  );\n  const fileInputRef = useRef();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const columns = useMemo(\n    () => [\n      { Header: 'Mã', accessor: 'code' },\n      {\n        Header: 'Kết quả',\n        formatter: ({ result }) => renderExaminationResult(result),\n      },\n\n      { Header: 'Thời gian có kết quả', accessor: 'resultDate' },\n    ],\n    [],\n  );\n  const data = useMemo(\n    () => [\n      {\n        code: 'U07T01200001',\n        result: 'Dương tính',\n        resultDate: '20-09-2020 13:45',\n      },\n      {\n        code: 'U07T01200002',\n        result: 'Âm tính',\n        resultDate: '10-09-2020 10:15',\n      },\n      {\n        code: 'U07T01200003',\n        result: 'Dương tính',\n        resultDate: '15-10-2020 22:30',\n      },\n    ],\n    [],\n  );\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      dispatch(uploadExaminationFile(formData)).then(() => {\n        onClose();\n        onRefresh();\n      });\n    }\n    // eslint-disable-next-line\n  }, [dispatch, selectedFile]);\n  return (\n    <Modal open={open} onClose={onClose} size=\"small\">\n      <Modal.Header>Cập nhật kết quả xét nghiệm bằng file Excel</Modal.Header>\n      <Modal.Content>\n        <DataTable\n          title=\"Mẫu Excel\"\n          celled\n          noPaging\n          columns={columns}\n          data={data}\n          actions={[]}\n        />\n        {uploadExaminationLoading && (\n          <StyledProgress\n            active\n            color=\"green\"\n            percent={uploadExaminationProgress}\n            size=\"tiny\"\n          />\n        )}\n        <MarginTopButton\n          primary\n          onClick={() => fileInputRef.current.click()}\n          content=\"Chọn File Excel\"\n        />\n        <input\n          ref={fileInputRef}\n          type=\"file\"\n          hidden\n          onChange={(e) => setSelectedFile(e.target.files[0])}\n          accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n        />\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nSampleExaminationExcelModal.propTypes = {\n  open: PropTypes.bool,\n  onClose: PropTypes.func,\n  onRefresh: PropTypes.func,\n};\n\nSampleExaminationExcelModal.defaultProps = {\n  open: false,\n  onClose: () => {},\n  onRefresh: () => {},\n};\n\nexport default SampleExaminationExcelModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}