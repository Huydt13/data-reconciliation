{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\medical-test\\\\components\\\\units\\\\UnitFilter.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Select } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { InstantSearchBar } from 'app/components/shared';\nimport { useSelectLocations } from 'app/hooks';\nconst typeOptions = [{\n  key: 1,\n  value: 1,\n  text: 'Cơ sở lấy mẫu'\n}, {\n  key: 2,\n  value: 2,\n  text: 'Cơ sở tự xét nghiệm'\n}, {\n  key: 3,\n  value: 3,\n  text: 'Cơ sở tham gia xét nghiệm'\n}];\nconst Wrapper = styled.div`\n  padding: 8px;\n`;\nconst UnitFilter = props => {\n  const {\n    onChange\n  } = props;\n  const [searchValue, setSearchValue] = useState('');\n  const [selectingType, setSelectingType] = useState(null);\n  const {\n    province,\n    district,\n    ward,\n    provinceList,\n    districtList,\n    wardList,\n    setProvinceValue,\n    setDistrictValue,\n    setWardValue\n  } = useSelectLocations({});\n  useEffect(() => {\n    let filterType = {};\n    switch (selectingType) {\n      case 1:\n        {\n          filterType = {\n            isCollector: true,\n            isReceiver: false,\n            isTester: false\n          };\n          break;\n        }\n      case 2:\n        {\n          filterType = {\n            isCollector: true,\n            isReceiver: false,\n            isTester: true\n          };\n          break;\n        }\n      case 3:\n        {\n          filterType = {\n            isCollector: true,\n            isReceiver: true,\n            isTester: true\n          };\n          break;\n        }\n      default:\n        {\n          filterType = {};\n        }\n    }\n    onChange({\n      ...filterType,\n      searchValue,\n      provinceValue: province ? province.value : '',\n      districtValue: district ? district.value : '',\n      wardValue: ward ? ward.value : ''\n    });\n    // eslint-disable-next-line\n  }, [searchValue, selectingType, province, district, ward]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InstantSearchBar, {\n    onChange: v => setSearchValue(v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    search: true,\n    deburr: true,\n    clearable: true,\n    label: \"Lo\\u1EA1i c\\u01A1 s\\u1EDF\",\n    control: Select,\n    options: typeOptions,\n    onChange: (el, _ref) => {\n      let {\n        value\n      } = _ref;\n      setSelectingType(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    search: true,\n    deburr: true,\n    clearable: true,\n    label: \"T\\u1EC9nh/Th\\xE0nh\",\n    control: Select,\n    options: provinceList.map(p => ({\n      value: p.value,\n      text: p.label\n    })),\n    onChange: (el, _ref2) => {\n      let {\n        value\n      } = _ref2;\n      setProvinceValue(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    search: true,\n    deburr: true,\n    clearable: true,\n    label: \"Qu\\u1EADn/Huy\\u1EC7n\",\n    control: Select,\n    options: districtList.map(d => ({\n      value: d.value,\n      text: d.label\n    })),\n    onChange: (el, _ref3) => {\n      let {\n        value\n      } = _ref3;\n      setDistrictValue(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    search: true,\n    deburr: true,\n    clearable: true,\n    label: \"Ph\\u01B0\\u1EDDng/X\\xE3\",\n    control: Select,\n    options: wardList.map(w => ({\n      value: w.value,\n      text: w.label\n    })),\n    onChange: (el, _ref4) => {\n      let {\n        value\n      } = _ref4;\n      setWardValue(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }))))));\n};\nUnitFilter.propTypes = {\n  onChange: PropTypes.func\n};\nUnitFilter.defaultProps = {\n  onChange: () => {}\n};\nexport default UnitFilter;","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Form","Select","styled","InstantSearchBar","useSelectLocations","typeOptions","key","value","text","Wrapper","div","UnitFilter","props","onChange","searchValue","setSearchValue","selectingType","setSelectingType","province","district","ward","provinceList","districtList","wardList","setProvinceValue","setDistrictValue","setWardValue","filterType","isCollector","isReceiver","isTester","provinceValue","districtValue","wardValue","createElement","Fragment","v","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","Group","widths","Field","search","deburr","clearable","label","control","options","el","_ref","map","p","_ref2","d","_ref3","w","_ref4","propTypes","func","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/medical-test/components/units/UnitFilter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Select } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nimport { InstantSearchBar } from 'app/components/shared';\nimport { useSelectLocations } from 'app/hooks';\n\nconst typeOptions = [\n  { key: 1, value: 1, text: 'Cơ sở lấy mẫu' },\n  { key: 2, value: 2, text: 'Cơ sở tự xét nghiệm' },\n  { key: 3, value: 3, text: 'Cơ sở tham gia xét nghiệm' },\n];\n\nconst Wrapper = styled.div`\n  padding: 8px;\n`;\n\nconst UnitFilter = (props) => {\n  const { onChange } = props;\n\n  const [searchValue, setSearchValue] = useState('');\n\n  const [selectingType, setSelectingType] = useState(null);\n\n  const {\n    province,\n    district,\n    ward,\n    provinceList,\n    districtList,\n    wardList,\n    setProvinceValue,\n    setDistrictValue,\n    setWardValue,\n  } = useSelectLocations({});\n\n  useEffect(() => {\n    let filterType = {};\n    switch (selectingType) {\n      case 1: {\n        filterType = {\n          isCollector: true,\n          isReceiver: false,\n          isTester: false,\n        };\n        break;\n      }\n      case 2: {\n        filterType = {\n          isCollector: true,\n          isReceiver: false,\n          isTester: true,\n        };\n        break;\n      }\n      case 3: {\n        filterType = {\n          isCollector: true,\n          isReceiver: true,\n          isTester: true,\n        };\n        break;\n      }\n      default: {\n        filterType = {};\n      }\n    }\n    onChange({\n      ...filterType,\n      searchValue,\n      provinceValue: province ? province.value : '',\n      districtValue: district ? district.value : '',\n      wardValue: ward ? ward.value : '',\n    });\n    // eslint-disable-next-line\n  }, [searchValue, selectingType, province, district, ward]);\n\n  return (\n    <>\n      <InstantSearchBar onChange={(v) => setSearchValue(v)}>\n        <Wrapper>\n          <div className=\"ui form\">\n            <Form.Group widths=\"equal\">\n              <Form.Field\n                search\n                deburr\n                clearable\n                label=\"Loại cơ sở\"\n                control={Select}\n                options={typeOptions}\n                onChange={(el, { value }) => {\n                  setSelectingType(value);\n                }}\n              />\n              <Form.Field\n                search\n                deburr\n                clearable\n                label=\"Tỉnh/Thành\"\n                control={Select}\n                options={provinceList.map((p) => ({\n                  value: p.value,\n                  text: p.label,\n                }))}\n                onChange={(el, { value }) => {\n                  setProvinceValue(value);\n                }}\n              />\n              <Form.Field\n                search\n                deburr\n                clearable\n                label=\"Quận/Huyện\"\n                control={Select}\n                options={districtList.map((d) => ({\n                  value: d.value,\n                  text: d.label,\n                }))}\n                onChange={(el, { value }) => {\n                  setDistrictValue(value);\n                }}\n              />\n              <Form.Field\n                search\n                deburr\n                clearable\n                label=\"Phường/Xã\"\n                control={Select}\n                options={wardList.map((w) => ({\n                  value: w.value,\n                  text: w.label,\n                }))}\n                onChange={(el, { value }) => {\n                  setWardValue(value);\n                }}\n              />\n            </Form.Group>\n          </div>\n        </Wrapper>\n      </InstantSearchBar>\n    </>\n  );\n};\n\nUnitFilter.propTypes = {\n  onChange: PropTypes.func,\n};\n\nUnitFilter.defaultProps = {\n  onChange: () => {},\n};\n\nexport default UnitFilter;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}