{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\pdf\\\\pages\\\\PDFPreviewPage.js\";\nimport React, { useEffect } from 'react';\nimport PDFDocument from 'pdf/components/PDFDocument';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getReport, getSymptoms } from 'infection-chain/actions/subject';\nconst PDFPreviewPage = () => {\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (id) {\n      dispatch(getReport(id));\n    }\n    dispatch(getSymptoms());\n  }, [id, dispatch]);\n  const {\n    report,\n    symptomList\n  } = useSelector(state => state.subject);\n  return /*#__PURE__*/React.createElement(PDFViewer, {\n    style: {\n      width: '100%',\n      height: '100vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PDFDocument, {\n    data: report,\n    symptoms: symptomList,\n    subjectId: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n};\nexport default PDFPreviewPage;","map":{"version":3,"names":["React","useEffect","PDFDocument","PDFViewer","useParams","useDispatch","useSelector","getReport","getSymptoms","PDFPreviewPage","id","dispatch","report","symptomList","state","subject","createElement","style","width","height","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","data","symptoms","subjectId"],"sources":["H:/BAKCO/pj/data reconciliation/src/pdf/pages/PDFPreviewPage.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PDFDocument from 'pdf/components/PDFDocument';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getReport, getSymptoms } from 'infection-chain/actions/subject';\n\nconst PDFPreviewPage = () => {\n  const { id } = useParams();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (id) {\n      dispatch(getReport(id));\n    }\n    dispatch(getSymptoms());\n  }, [id, dispatch]);\n  const { report, symptomList } = useSelector((state) => state.subject);\n\n  return (\n    <PDFViewer style={{ width: '100%', height: '100vh' }}>\n      <PDFDocument data={report} symptoms={symptomList} subjectId={id} />\n    </PDFViewer>\n  );\n};\n\nexport default PDFPreviewPage;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,WAAW,MAAM,4BAA4B;AACpD,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,WAAW,QAAQ,iCAAiC;AAExE,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,EAAE;EAC1B,MAAMO,QAAQ,GAAGN,WAAW,EAAE;EAC9BJ,SAAS,CAAC,MAAM;IACd,IAAIS,EAAE,EAAE;MACNC,QAAQ,CAACJ,SAAS,CAACG,EAAE,CAAC,CAAC;IACzB;IACAC,QAAQ,CAACH,WAAW,EAAE,CAAC;EACzB,CAAC,EAAE,CAACE,EAAE,EAAEC,QAAQ,CAAC,CAAC;EAClB,MAAM;IAAEC,MAAM;IAAEC;EAAY,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC;EAErE,oBACEf,KAAA,CAAAgB,aAAA,CAACb,SAAS;IAACc,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnDzB,KAAA,CAAAgB,aAAA,CAACd,WAAW;IAACwB,IAAI,EAAEd,MAAO;IAACe,QAAQ,EAAEd,WAAY;IAACe,SAAS,EAAElB,EAAG;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CACzD;AAEhB,CAAC;AAED,eAAehB,cAAc"},"metadata":{},"sourceType":"module"}