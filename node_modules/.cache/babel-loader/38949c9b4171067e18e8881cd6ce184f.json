{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\medical-test\\\\components\\\\examinations\\\\ImportSampleTable.js\";\nimport React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport xlsx from 'xlsx';\nimport { Message, Icon, Button } from 'semantic-ui-react';\nimport DataTable from 'app/components/shared/data-table/DataTable';\nimport importExcelTemplate from 'app/assets/excels/Mẫu import Mã xét nghiệm.xlsx';\nconst ImportSampleTable = props => {\n  const {\n    onChange\n  } = props;\n  const [selectedFile, setSelectedFile] = useState(undefined);\n  const [sampleList, setSampleList] = useState([]);\n  const fileInputRef = useRef();\n  const columns = useMemo(() => [{\n    Header: '#',\n    accessor: 'index'\n  }, {\n    Header: 'Mã xét nghiệm',\n    accessor: 'code',\n    copiable: true\n  }], []);\n  const downloadExcelTemplate = () => {\n    const link = document.createElement('a');\n    link.href = importExcelTemplate;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  const parseExcelToData = useCallback(binary => {\n    try {\n      const book = xlsx.read(binary, {\n        type: 'binary'\n      });\n      const sheet = book.SheetNames[0];\n      const sheetContent = book.Sheets[sheet];\n      const samples = Object.keys(sheetContent).filter(r => /^A\\d+/.test(r)).map(c => sheetContent[c].v);\n      if (!samples || samples.length === 0) {\n        toast.warn('Tệp tin không có dữ liệu hoặc dữ liệu không chính xác');\n        return;\n      }\n      setSampleList(samples);\n      onChange(samples);\n    } catch (e) {\n      toast.warn('Tệp tin không đúng định dạng');\n    }\n  }, [onChange, setSampleList]);\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      if (reader.readAsBinaryString) {\n        reader.onload = () => parseExcelToData(reader.result);\n        reader.readAsBinaryString(selectedFile);\n      }\n    }\n  }, [selectedFile, parseExcelToData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    icon: \"upload\",\n    labelPosition: \"right\",\n    color: \"green\",\n    content: \"Ch\\u1ECDn File\",\n    onClick: () => fileInputRef.current.click(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), sampleList.length > 0 && /*#__PURE__*/React.createElement(DataTable, {\n    title: \"Danh s\\xE1ch m\\u1EABu\",\n    columns: columns,\n    data: (sampleList || []).map((s, i) => ({\n      index: i + 1,\n      code: s\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), (!selectedFile || sampleList.length === 0) && /*#__PURE__*/React.createElement(Message, {\n    info: true,\n    icon: true,\n    style: {\n      marginBottom: 0,\n      cursor: 'pointer'\n    },\n    onClick: downloadExcelTemplate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"download\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Message.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Message.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"T\\u1EA3i t\\u1EC7p tin m\\u1EABu\"), \"S\\u1EED d\\u1EE5ng t\\u1EC7p tin m\\u1EABu, \\u0111\\u1EC3 \\u0111\\u1EA3m b\\u1EA3o d\\u1EEF li\\u1EC7u ch\\xEDnh x\\xE1c\")), /*#__PURE__*/React.createElement(\"input\", {\n    ref: fileInputRef,\n    type: \"file\",\n    hidden: true,\n    onChange: e => {\n      setSampleList([]);\n      setSelectedFile(e.target.files[0]);\n    },\n    accept: \".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n};\nImportSampleTable.defaultProps = {\n  onChange: () => {}\n};\nImportSampleTable.propTypes = {\n  onChange: PropTypes.func\n};\nexport default ImportSampleTable;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","useRef","PropTypes","toast","xlsx","Message","Icon","Button","DataTable","importExcelTemplate","ImportSampleTable","props","onChange","selectedFile","setSelectedFile","undefined","sampleList","setSampleList","fileInputRef","columns","Header","accessor","copiable","downloadExcelTemplate","link","document","createElement","href","body","appendChild","click","removeChild","parseExcelToData","binary","book","read","type","sheet","SheetNames","sheetContent","Sheets","samples","Object","keys","filter","r","test","map","c","v","length","warn","e","reader","FileReader","readAsBinaryString","onload","result","Fragment","icon","labelPosition","color","content","onClick","current","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","data","s","i","index","code","info","style","marginBottom","cursor","name","Content","ref","hidden","target","files","accept","defaultProps","propTypes","func"],"sources":["H:/BAKCO/pj/data reconciliation/src/medical-test/components/examinations/ImportSampleTable.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport xlsx from 'xlsx';\n\nimport { Message, Icon, Button } from 'semantic-ui-react';\nimport DataTable from 'app/components/shared/data-table/DataTable';\n\nimport importExcelTemplate from 'app/assets/excels/Mẫu import Mã xét nghiệm.xlsx';\n\nconst ImportSampleTable = (props) => {\n  const { onChange } = props;\n\n  const [selectedFile, setSelectedFile] = useState(undefined);\n  const [sampleList, setSampleList] = useState([]);\n\n  const fileInputRef = useRef();\n\n  const columns = useMemo(() => ([\n    { Header: '#', accessor: 'index' },\n    {\n      Header: 'Mã xét nghiệm',\n      accessor: 'code',\n      copiable: true,\n    },\n\n  ]), []);\n\n  const downloadExcelTemplate = () => {\n    const link = document.createElement('a');\n    link.href = importExcelTemplate;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const parseExcelToData = useCallback((binary) => {\n    try {\n      const book = xlsx.read(binary, { type: 'binary' });\n      const sheet = book.SheetNames[0];\n      const sheetContent = book.Sheets[sheet];\n      const samples = Object\n        .keys(sheetContent)\n        .filter((r) => /^A\\d+/.test(r))\n        .map((c) => sheetContent[c].v);\n\n      if (!samples || samples.length === 0) {\n        toast.warn('Tệp tin không có dữ liệu hoặc dữ liệu không chính xác');\n        return;\n      }\n\n      setSampleList(samples);\n      onChange(samples);\n    } catch (e) {\n      toast.warn('Tệp tin không đúng định dạng');\n    }\n  }, [onChange, setSampleList]);\n\n  useEffect(() => {\n    if (selectedFile) {\n      const reader = new FileReader();\n      if (reader.readAsBinaryString) {\n        reader.onload = () => parseExcelToData(reader.result);\n        reader.readAsBinaryString(selectedFile);\n      }\n    }\n  }, [selectedFile, parseExcelToData]);\n\n  return (\n    <>\n      <Button\n        icon=\"upload\"\n        labelPosition=\"right\"\n        color=\"green\"\n        content=\"Chọn File\"\n        onClick={() => fileInputRef.current.click()}\n      />\n      {sampleList.length > 0 && (\n        <DataTable\n          title=\"Danh sách mẫu\"\n          columns={columns}\n          data={(sampleList || []).map((s, i) => ({ index: i + 1, code: s }))}\n        />\n      )}\n      {(!selectedFile || sampleList.length === 0) && (\n      <Message\n        info\n        icon\n        style={{ marginBottom: 0, cursor: 'pointer' }}\n        onClick={downloadExcelTemplate}\n      >\n        <Icon name=\"download\" />\n        <Message.Content>\n          <Message.Header>Tải tệp tin mẫu</Message.Header>\n          Sử dụng tệp tin mẫu, để đảm bảo dữ liệu chính xác\n        </Message.Content>\n      </Message>\n      )}\n      <input\n        ref={fileInputRef}\n        type=\"file\"\n        hidden\n        onChange={(e) => {\n          setSampleList([]);\n          setSelectedFile(e.target.files[0]);\n        }}\n        accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n      />\n    </>\n  );\n};\n\nImportSampleTable.defaultProps = {\n  onChange: () => {},\n};\n\nImportSampleTable.propTypes = {\n  onChange: PropTypes.func,\n};\n\nexport default ImportSampleTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}