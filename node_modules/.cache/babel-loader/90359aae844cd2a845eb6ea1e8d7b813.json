{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\medical-test\\\\components\\\\quick-test\\\\PersonalQuickTestHistoryTable.js\";\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { FiChevronRight, FiCommand } from 'react-icons/fi';\nimport { Breadcrumb } from 'semantic-ui-react';\nimport { DataTable } from 'app/components/shared';\nimport PersonalQuickTestHistoryDetailTable from 'medical-test/components/quick-test/PersonalQuickTestHistoryDetailTable';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuth } from 'app/hooks';\nimport { createAssignQuickTest, getPersonalQuickTestHistory } from 'medical-test/actions/medical-test';\nimport { getAssignQuickTestStatus } from 'medical-test/utils/helpers';\nconst BreadcrumbWrapper = styled.div`\n  margin-bottom: 8px;\n`;\nconst StyledChevronRight = styled(FiChevronRight)`\n  vertical-align: bottom !important;\n`;\nconst columns = [{\n  Header: '#',\n  accessor: 'index'\n}, {\n  Header: 'Tên cơ sở',\n  formatter: row => {\n    var _row$unit;\n    return row === null || row === void 0 ? void 0 : (_row$unit = row.unit) === null || _row$unit === void 0 ? void 0 : _row$unit.name;\n  }\n}, {\n  Header: 'Trạng thái',\n  formatter: row => {\n    var _getAssignQuickTestSt;\n    return (_getAssignQuickTestSt = getAssignQuickTestStatus(row === null || row === void 0 ? void 0 : row.status)) === null || _getAssignQuickTestSt === void 0 ? void 0 : _getAssignQuickTestSt.label;\n  }\n}];\nconst PersonalQuickTestHistoryTable = props => {\n  const {\n    loading: loadingProp,\n    profile\n  } = props;\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pageSize, setPageSize] = useState(10);\n  const [selected, setSelected] = useState(undefined);\n  const {\n    id\n  } = useParams();\n  const {\n    isUsername\n  } = useAuth();\n  const dispatch = useDispatch();\n  const {\n    personalQuickTestHistoryList,\n    getPersonalQuickTestHistoryLoading\n  } = useSelector(state => state.medicalTest);\n  const loading = loadingProp || getPersonalQuickTestHistoryLoading;\n  const handleRefresh = useCallback(() => {\n    var _profile$id;\n    dispatch(getPersonalQuickTestHistory({\n      profileId: (_profile$id = profile === null || profile === void 0 ? void 0 : profile.id) !== null && _profile$id !== void 0 ? _profile$id : id,\n      pageIndex,\n      pageSize\n    }));\n  }, [dispatch, id, profile, pageIndex, pageSize]);\n  useEffect(handleRefresh, [handleRefresh]);\n  const handleCreateAssignQuickTest = async () => {\n    try {\n      var _profile$id2;\n      await dispatch(createAssignQuickTest([{\n        profileId: (_profile$id2 = profile === null || profile === void 0 ? void 0 : profile.id) !== null && _profile$id2 !== void 0 ? _profile$id2 : id\n      }]));\n      handleRefresh();\n      // eslint-disable-next-line no-empty\n    } catch (error) {}\n  };\n  const dataTable = useMemo(() => /*#__PURE__*/React.createElement(DataTable, {\n    title: \"L\\u1ECBch s\\u1EED test nhanh\",\n    loading: loading,\n    columns: columns,\n    data: personalQuickTestHistoryList.map((h, i) => ({\n      ...h,\n      index: i + 1\n    })),\n    onRowClick: d => {\n      if (d.id) {\n        setSelected(d);\n      } else {\n        toast.info('Chưa có dữ liệu');\n      }\n    },\n    actions: [{\n      icon: /*#__PURE__*/React.createElement(FiCommand, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      }),\n      title: 'Chỉ định xét nghiệm',\n      color: 'yellow',\n      globalAction: true,\n      onClick: () => handleCreateAssignQuickTest(),\n      disabled: !((profile === null || profile === void 0 ? void 0 : profile.cccd) || (profile === null || profile === void 0 ? void 0 : profile.cmnd) || (profile === null || profile === void 0 ? void 0 : profile.passportNumber) || (profile === null || profile === void 0 ? void 0 : profile.healthInsuranceNumber)),\n      hidden: isUsername('hcdc')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  })\n  // eslint-disable-next-line\n  , [loading, profile, personalQuickTestHistoryList, isUsername]);\n  const sections = useMemo(() => {\n    const bc = [{\n      key: 0,\n      content: selected && 'Lịch sử test nhanh',\n      active: !selected,\n      onClick: () => setSelected(undefined)\n    }];\n    return bc;\n  }, [selected]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, selected ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadcrumbWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    sections: sections,\n    icon: /*#__PURE__*/React.createElement(StyledChevronRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 51\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(PersonalQuickTestHistoryDetailTable, {\n    data: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  })) : dataTable);\n};\nPersonalQuickTestHistoryTable.propTypes = {\n  profile: PropTypes.shape({\n    id: PropTypes.number\n  }),\n  loading: PropTypes.bool\n};\nPersonalQuickTestHistoryTable.defaultProps = {\n  profile: {},\n  loading: false\n};\nexport default PersonalQuickTestHistoryTable;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","styled","toast","PropTypes","FiChevronRight","FiCommand","Breadcrumb","DataTable","PersonalQuickTestHistoryDetailTable","useParams","useDispatch","useSelector","useAuth","createAssignQuickTest","getPersonalQuickTestHistory","getAssignQuickTestStatus","BreadcrumbWrapper","div","StyledChevronRight","columns","Header","accessor","formatter","row","_row$unit","unit","name","_getAssignQuickTestSt","status","label","PersonalQuickTestHistoryTable","props","loading","loadingProp","profile","pageIndex","setPageIndex","pageSize","setPageSize","selected","setSelected","undefined","id","isUsername","dispatch","personalQuickTestHistoryList","getPersonalQuickTestHistoryLoading","state","medicalTest","handleRefresh","_profile$id","profileId","handleCreateAssignQuickTest","_profile$id2","error","dataTable","createElement","title","data","map","h","i","index","onRowClick","d","info","actions","icon","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","color","globalAction","onClick","disabled","cccd","cmnd","passportNumber","healthInsuranceNumber","hidden","sections","bc","key","content","active","Fragment","propTypes","shape","number","bool","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/medical-test/components/quick-test/PersonalQuickTestHistoryTable.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { FiChevronRight, FiCommand } from 'react-icons/fi';\r\nimport { Breadcrumb } from 'semantic-ui-react';\r\nimport { DataTable } from 'app/components/shared';\r\nimport PersonalQuickTestHistoryDetailTable from 'medical-test/components/quick-test/PersonalQuickTestHistoryDetailTable';\r\n\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useAuth } from 'app/hooks';\r\nimport {\r\n  createAssignQuickTest,\r\n  getPersonalQuickTestHistory,\r\n} from 'medical-test/actions/medical-test';\r\nimport { getAssignQuickTestStatus } from 'medical-test/utils/helpers';\r\n\r\nconst BreadcrumbWrapper = styled.div`\r\n  margin-bottom: 8px;\r\n`;\r\nconst StyledChevronRight = styled(FiChevronRight)`\r\n  vertical-align: bottom !important;\r\n`;\r\n\r\nconst columns = [\r\n  { Header: '#', accessor: 'index' },\r\n  { Header: 'Tên cơ sở', formatter: (row) => row?.unit?.name },\r\n  {\r\n    Header: 'Trạng thái',\r\n    formatter: (row) => getAssignQuickTestStatus(row?.status)?.label,\r\n  },\r\n];\r\n\r\nconst PersonalQuickTestHistoryTable = (props) => {\r\n  const { loading: loadingProp, profile } = props;\r\n\r\n  const [pageIndex, setPageIndex] = useState(0);\r\n  const [pageSize, setPageSize] = useState(10);\r\n  const [selected, setSelected] = useState(undefined);\r\n\r\n  const { id } = useParams();\r\n  const { isUsername } = useAuth();\r\n  const dispatch = useDispatch();\r\n  const { personalQuickTestHistoryList, getPersonalQuickTestHistoryLoading } =\r\n    useSelector((state) => state.medicalTest);\r\n\r\n  const loading = loadingProp || getPersonalQuickTestHistoryLoading;\r\n  const handleRefresh = useCallback(() => {\r\n    dispatch(\r\n      getPersonalQuickTestHistory({\r\n        profileId: profile?.id ?? id,\r\n        pageIndex,\r\n        pageSize,\r\n      })\r\n    );\r\n  }, [dispatch, id, profile, pageIndex, pageSize]);\r\n  useEffect(handleRefresh, [handleRefresh]);\r\n\r\n  const handleCreateAssignQuickTest = async () => {\r\n    try {\r\n      await dispatch(createAssignQuickTest([{ profileId: profile?.id ?? id }]));\r\n      handleRefresh();\r\n      // eslint-disable-next-line no-empty\r\n    } catch (error) {}\r\n  };\r\n\r\n  const dataTable = useMemo(\r\n    () => (\r\n      <DataTable\r\n        title='Lịch sử test nhanh'\r\n        loading={loading}\r\n        columns={columns}\r\n        data={personalQuickTestHistoryList.map((h, i) => ({\r\n          ...h,\r\n          index: i + 1,\r\n        }))}\r\n        onRowClick={(d) => {\r\n          if (d.id) {\r\n            setSelected(d);\r\n          } else {\r\n            toast.info('Chưa có dữ liệu');\r\n          }\r\n        }}\r\n        actions={[\r\n          {\r\n            icon: <FiCommand />,\r\n            title: 'Chỉ định xét nghiệm',\r\n            color: 'yellow',\r\n            globalAction: true,\r\n            onClick: () => handleCreateAssignQuickTest(),\r\n            disabled: !(\r\n              profile?.cccd ||\r\n              profile?.cmnd ||\r\n              profile?.passportNumber ||\r\n              profile?.healthInsuranceNumber\r\n            ),\r\n            hidden: isUsername('hcdc'),\r\n          },\r\n        ]}\r\n      />\r\n      // eslint-disable-next-line\r\n    ),\r\n    [loading, profile, personalQuickTestHistoryList, isUsername]\r\n  );\r\n\r\n  const sections = useMemo(() => {\r\n    const bc = [\r\n      {\r\n        key: 0,\r\n        content: selected && 'Lịch sử test nhanh',\r\n        active: !selected,\r\n        onClick: () => setSelected(undefined),\r\n      },\r\n    ];\r\n\r\n    return bc;\r\n  }, [selected]);\r\n\r\n  return (\r\n    <div>\r\n      {selected ? (\r\n        <>\r\n          <BreadcrumbWrapper>\r\n            <Breadcrumb sections={sections} icon={<StyledChevronRight />} />\r\n          </BreadcrumbWrapper>\r\n          <PersonalQuickTestHistoryDetailTable data={selected} />\r\n        </>\r\n      ) : (\r\n        dataTable\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nPersonalQuickTestHistoryTable.propTypes = {\r\n  profile: PropTypes.shape({\r\n    id: PropTypes.number,\r\n  }),\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nPersonalQuickTestHistoryTable.defaultProps = {\r\n  profile: {},\r\n  loading: false,\r\n};\r\n\r\nexport default PersonalQuickTestHistoryTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}