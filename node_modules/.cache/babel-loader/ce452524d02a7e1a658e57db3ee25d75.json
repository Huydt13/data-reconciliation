{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport locations from 'app/assets/mock/locations.json';\nconst useSelectLocations = initialData => {\n  var _province$districts, _district$wards;\n  const {\n    provinceValue,\n    districtValue,\n    wardValue\n  } = initialData;\n  const [province, setProvince] = useState(null);\n  const [district, setDistrict] = useState(null);\n  const [ward, setWard] = useState(null);\n  useEffect(() => {\n    const tmpProvince = provinceValue && locations.find(p => p.value === provinceValue);\n    const tmpDistrict = districtValue && tmpProvince.districts.find(d => d.value === districtValue);\n    const tmpWard = wardValue && tmpDistrict.find(w => w.value === wardValue);\n    setProvince(tmpProvince);\n    setDistrict(tmpDistrict);\n    setWard(tmpWard);\n  }, [provinceValue, districtValue, wardValue]);\n  useEffect(() => {\n    setDistrict(null);\n  }, [province]);\n  useEffect(() => {\n    setWard(null);\n  }, [province]);\n  const provinceList = locations !== null && locations !== void 0 ? locations : [];\n  const districtList = (_province$districts = province === null || province === void 0 ? void 0 : province.districts) !== null && _province$districts !== void 0 ? _province$districts : [];\n  const wardList = (_district$wards = district === null || district === void 0 ? void 0 : district.wards) !== null && _district$wards !== void 0 ? _district$wards : [];\n  const setProvinceValue = value => {\n    setProvince(locations.find(p => p.value === value));\n  };\n  const setDistrictValue = value => {\n    var _province$districts$f;\n    setDistrict((_province$districts$f = province === null || province === void 0 ? void 0 : province.districts.find(d => d.value === value)) !== null && _province$districts$f !== void 0 ? _province$districts$f : null);\n  };\n  const setWardValue = value => {\n    var _district$wards$find;\n    setWard((_district$wards$find = district === null || district === void 0 ? void 0 : district.wards.find(w => w.value === value)) !== null && _district$wards$find !== void 0 ? _district$wards$find : null);\n  };\n  return {\n    provinceList,\n    districtList,\n    wardList,\n    province,\n    district,\n    ward,\n    setProvinceValue,\n    setDistrictValue,\n    setWardValue\n  };\n};\nexport default useSelectLocations;","map":{"version":3,"names":["useState","useEffect","locations","useSelectLocations","initialData","_province$districts","_district$wards","provinceValue","districtValue","wardValue","province","setProvince","district","setDistrict","ward","setWard","tmpProvince","find","p","value","tmpDistrict","districts","d","tmpWard","w","provinceList","districtList","wardList","wards","setProvinceValue","setDistrictValue","_province$districts$f","setWardValue","_district$wards$find"],"sources":["H:/BAKCO/pj/cds/src/app/hooks/use-select-locations.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport locations from 'app/assets/mock/locations.json';\n\nconst useSelectLocations = (initialData) => {\n  const {\n    provinceValue,\n    districtValue,\n    wardValue,\n  } = initialData;\n\n  const [province, setProvince] = useState(null);\n  const [district, setDistrict] = useState(null);\n  const [ward, setWard] = useState(null);\n\n  useEffect(() => {\n    const tmpProvince = provinceValue && locations.find((p) => p.value === provinceValue);\n    const tmpDistrict = districtValue && tmpProvince.districts.find((d) => d.value === districtValue);\n    const tmpWard = wardValue && tmpDistrict.find((w) => w.value === wardValue);\n    setProvince(tmpProvince);\n    setDistrict(tmpDistrict);\n    setWard(tmpWard);\n  }, [\n    provinceValue,\n    districtValue,\n    wardValue,\n  ]);\n\n  useEffect(() => { setDistrict(null); }, [province]);\n  useEffect(() => { setWard(null); }, [province]);\n\n  const provinceList = locations ?? [];\n  const districtList = province?.districts ?? [];\n  const wardList = district?.wards ?? [];\n\n  const setProvinceValue = (value) => {\n    setProvince(locations.find((p) => p.value === value));\n  };\n\n  const setDistrictValue = (value) => {\n    setDistrict(province?.districts.find((d) => d.value === value) ?? null);\n  };\n\n  const setWardValue = (value) => {\n    setWard(district?.wards.find((w) => w.value === value) ?? null);\n  };\n\n  return {\n    provinceList,\n    districtList,\n    wardList,\n    province,\n    district,\n    ward,\n    setProvinceValue,\n    setDistrictValue,\n    setWardValue,\n  };\n};\n\nexport default useSelectLocations;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}