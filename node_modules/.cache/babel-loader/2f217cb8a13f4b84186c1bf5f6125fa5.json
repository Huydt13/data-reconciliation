{"ast":null,"code":"const url = window.location.href;\nconst isDev = url.indexOf('abcde') > -1 || process.env.NODE_ENV === 'development';\nconst gatewayUrl = 'https://api.hcdc.vn/api/v1';\nconst devUrl = 'https://test-api.hcdc.vn/api/v1';\nconst userUrl = `${gatewayUrl}/auth`;\nconst profileUrl = isDev ? 'https://profile-test.hcdc.vn/api' : `${gatewayUrl}/profile`;\nconst examinationUrl = isDev ? 'https://examination-management.hcdc.vn/api' : `${gatewayUrl}/examination`;\nconst chainUrl = `${isDev ? devUrl : gatewayUrl}/infectionChain`;\nconst quarantineUrl = isDev ? 'http://202.78.227.175:32585/api' : 'https://quarantine.vkhealth.vn/api';\nconst treatmentUrl = isDev ? 'https://homequarantine.bakco.vn/api' : 'http://202.78.227.174:51560/api';\nconst reportUrl = `${gatewayUrl}/report`;\nconst healthDeclaration = isDev ? 'https://health-declaration-dev.hcdc.vn/api' : 'https://api.hcdc.vn/api/v1/healthDeclaration';\nconst apiLinks = {\n  login: `${userUrl}/Users/Login`,\n  checkCredential: `${userUrl}/Users/ValidateCredential`,\n  changePassword: `${userUrl}/Users/ChangePassword`,\n  getPermission: `${userUrl}/Users/Permissions/Ui`,\n  getDiseases: `${profileUrl}/Health?isSymptom=false&pageSize=20&pageIndex=0`,\n  getSymptoms: `${profileUrl}/Health?isSymptom=true&pageSize=20&pageIndex=0`,\n  disease: `${profileUrl}/Health/Diseases`,\n  symptoms: `${profileUrl}/Health/Symptoms`,\n  diseaseSample: {\n    get: `${examinationUrl}/DiseaseSamples`\n  },\n  diseases: {\n    get: `${examinationUrl}/Diseases`\n  },\n  samplingPlaces: {\n    get: `${examinationUrl}/SamplingPlaces?pageIndex=0&pageSize=1000`\n  },\n  examination: {\n    get: `${examinationUrl}/Examinations`,\n    create: `${examinationUrl}/Examinations`,\n    update: `${examinationUrl}/Examinations`,\n    delete: `${examinationUrl}/Examinations`,\n    getByPerson: `${examinationUrl}/Examinations/GetExaminationByPerson`,\n    getDetails: `${examinationUrl}/Examinations/GetExaminationDetailsAvailable`,\n    getNormalDetails: `${examinationUrl}/Examinations/GetExaminationDetailForTransportsNormal`,\n    getUrgencyDetails: `${examinationUrl}/Examinations/GetExaminationDetailForTransportsUrgency`,\n    getAvailableExamForTransport: `${examinationUrl}/Examinations/GetExaminationDetailsAvailableForTransport`,\n    getExaminationDetail: `${examinationUrl}/Examinations/GetExaminationDetails`,\n    getExaminationDetailV2: `${examinationUrl}/Examinations/GetExaminationDetailsV2`,\n    updateExaminationDetail: `${examinationUrl}/Examinations/UpdateExamDetail`,\n    uploadResultExcel: `${examinationUrl}/Examinations/ExamDetailResultExcel`,\n    getExaminationDetailsAvailableForTestSession: `${examinationUrl}/Examinations/GetExaminationDetailsAvailableForTestSession`,\n    getPositiveExaminationDetail: `${examinationUrl}/Examinations/ExamDetailPositive`,\n    changeProfile: `${examinationUrl}/Examinations/ChangeProfile`,\n    changeProfileBatch: `${examinationUrl}/Examinations/ChangeProfileBatch`,\n    markAsUnsatisfactorySample: `${examinationUrl}/Examinations/MarkAsUnsatisfactorySample`,\n    unMarkAsUnsatisfactorySample: `${examinationUrl}/Examinations/UnMarkAsUnsatisfactorySample`\n  },\n  excel: {\n    exportExam: `${examinationUrl}/Excels/ExamResultAnswerForm`,\n    exportByRange: `${examinationUrl}/Excels/DateRangeListHCDC`,\n    exportExamBook: `${examinationUrl}/Excels/ExportExamBook`,\n    examResultList: `${examinationUrl}/Excels/ExamResultList`,\n    getAvailableDatesForResultList: `${examinationUrl}/Excels/AvailableDatesForResultList`,\n    examResultListHCDC: `${examinationUrl}/Excels/ExamResultListHCDC`,\n    getAvailableDatesForResultListHCDC: `${examinationUrl}/Excels/AvailableDatesForResultListHCDC`,\n    receivedStatistic: `${examinationUrl}/Excels/ReceivedStatistic`,\n    takenExamList: `${examinationUrl}/Excels/TakenExamList`,\n    availableDatesForTakenExamList: `${examinationUrl}/Excels/AvailableDatesForTakenExamList`,\n    exportPlate: `${examinationUrl}/Excels/ExportPlate`,\n    exportPlateResult: `${examinationUrl}/Excels/ExportPlateResult`,\n    importTestSessionResult: `${examinationUrl}/Excels/ImportTestSessionResult`,\n    importInformation: `${examinationUrl}/Excels/ImportInformation`,\n    exportExaminationResult: `${examinationUrl}/Excels/ExportExaminationDetail`,\n    uploadProfilesFromExcel: `${examinationUrl}/Excels/FindProfilesFromExcel`,\n    exportResultFromExcel: `${examinationUrl}/Excels/FindResultFromExcel`,\n    importAssigns: `${examinationUrl}/Excels/ImportAssigns`,\n    importSecodaryCodeMapping: `${examinationUrl}/Excels/ImportSecondaryCodeMapping`,\n    importExams: `${examinationUrl}/Excels/ImportExams`,\n    dateRangeListAll: `${examinationUrl}/Excels/DateRangeListAll`,\n    readPlateResult: `${examinationUrl}/Excels/ReadPlateResult`,\n    importQuickResultUpdate: `${examinationUrl}/Excels/ImportQuickResultUpdate`,\n    exportStatisticExamination: `${reportUrl}/Excel/GetElasticReportStatistic`,\n    exportProgressExamiantionTracking: `${reportUrl}/Excel/GetProgressExaminationTracking`,\n    exportExaminationStatisticByTakenDate: `${reportUrl}/Excel/GetExaminationStatisticByTakenDate`,\n    exportExaminationStatisticByResultDate: `${reportUrl}/Excel/GetExaminationStatisticByResultDate`,\n    exportCommunityPositiveRateStatistic: `${reportUrl}/Excel/CommunityPositiveRateStatistic`,\n    exportStatisticExaminationByCodes: `${reportUrl}/Excel/GetElasticReportStatisticByCodes`,\n    exportExaminationStatusReportByPlaceResidence: `${reportUrl}/Excel/GetExaminationStatusReportByPlaceResidence`,\n    exportSummaryExaminationStatisticOfDistrictByResidencePlace: `${reportUrl}/Excel/SummaryExaminationStatisticOfDistrictByResidencePlace`,\n    exportIsNotGroupPositivePerIsNotGroupAll: `${reportUrl}/Excel/GetIsNotGroupPositivePerIsNotGroupAll`,\n    exportExaminationStatusReportByDangerZone: `${reportUrl}/Excel/GetExaminationStatusReportByDangerZone`,\n    exportPositiveRateStatisticBySamplingPlaces: `${reportUrl}/Excel/PositiveRateStatisticBySamplingPlaces`,\n    exportProfileHasExamination: `${profileUrl}/Exports/Profiles/Examinated`,\n    exportQuickTestAvailableToPublish: `${examinationUrl}/Excels/ExportQuickTestAvailableToPublish`,\n    exportQuickTestReportStatistic: `${reportUrl}/Excel/GetQuickTestReportStatistic`,\n    exportPositiveExaminationReportStatistic: `${reportUrl}/Excel/GetPositiveElasticReportStatistic`,\n    // exportQuickTestResultAnswerForm: `${examinationUrl}/Excels/QuickTestResultAnswerForm`,\n    exportQuickTestResultAnswerForm: `${examinationUrl}/Excels/QuickTestResultAnswerFormV2`,\n    // https://examination-management.hcdc.vn/api/Excels/QuickTestResultAnswerFormV2?qtId=342342\n    exportInfectiousDisease: `${profileUrl}/InfectiousDiseaseHistory/Export`\n  },\n  examinationType: {\n    get: `${examinationUrl}/ExaminationTypes`\n  },\n  samplingPlace: {\n    get: `${examinationUrl}/SamplingPlaces`\n  },\n  assign: {\n    get: `${examinationUrl}/Assigns`,\n    create: `${examinationUrl}/Assigns/AssignCreateWithProfile`,\n    update: `${examinationUrl}/Assigns`,\n    delete: `${examinationUrl}/Assigns`,\n    getByUnitId: `${examinationUrl}/units`,\n    cancel: `${examinationUrl}/Assigns/Cancel`,\n    assignWithCodeOnly: `${examinationUrl}/Assigns/AssignWithCodeOnly`,\n    assignWithDate: `${examinationUrl}/Assigns/AssignWithDate`\n  },\n  examinationCode: {\n    getUnAvailableCodes: `${examinationUrl}/ExaminationCodes/GetUnAvailableCodes`,\n    getAvailableCodes: `${examinationUrl}/ExaminationCodes/GetAvailableCodes`,\n    getUsedCodes: `${examinationUrl}/ExaminationCodes/GetUsedCodes`,\n    getOtherCodes: `${examinationUrl}/ExaminationCodes/GetOtherCodes`,\n    getAvailableCodesToPrint: `${examinationUrl}/ExaminationCodes/GetAvailableCodeToPrint`,\n    getAvailableCodesToPublish: `${examinationUrl}/ExaminationCodes/GetAvailableCodeToPublish`,\n    getAvailableCodesToRePrint: `${examinationUrl}/ExaminationCodes/GetAvailableCodeToRePrint`,\n    getAvailableCodesToUse: `${examinationUrl}/ExaminationCodes/AvailableCodeToUse`,\n    getAvailableDiseasesToPrint: `${examinationUrl}/ExaminationCodes/GetAvailableDiseaseToPrint`,\n    getAvailableDiseasesToPublish: `${examinationUrl}/ExaminationCodes/GetAvailableDiseaseToPublish`,\n    getAvailableDiseasesToRePrint: `${examinationUrl}/ExaminationCodes/GetAvailableDiseaseToRePrint`,\n    create: `${examinationUrl}/ExaminationCodes`,\n    publish: `${examinationUrl}/ExaminationCodes/Publish`,\n    print: `${examinationUrl}/ExaminationCodes/Print`,\n    rePrint: `${examinationUrl}/ExaminationCodes/RePrint`,\n    rePrintFrom: `${examinationUrl}/ExaminationCodes/RePrintFrom`,\n    createBatchUnit: `${examinationUrl}/ExaminationCodes/CreateBatchUnit`,\n    getAvailableUnitsToPublish: `${examinationUrl}/ExaminationCodes/GetAvailableUnitsToPublish`,\n    publishBatchUnit: `${examinationUrl}/ExaminationCodes/PublishBatchUnit`\n  },\n  transport: {\n    get: `${examinationUrl}/Transports`,\n    create: `${examinationUrl}/Transports`,\n    update: `${examinationUrl}/Transports`,\n    delete: `${examinationUrl}/Transports`,\n    send: `${examinationUrl}/Transports/Send`,\n    receive: `${examinationUrl}/Transports/Receive`,\n    getById: `${examinationUrl}/Transports/`,\n    getUnitAvailable: `${examinationUrl}/Transports/GetUnitsAvailable`,\n    importExcel: `${examinationUrl}/Transports/ImportExcel`,\n    exportExcel: `${examinationUrl}/Transports/ExportExcel`,\n    rejectSent: `${examinationUrl}/Transports/RejectSent`,\n    rejectReceived: `${examinationUrl}/Transports/RejectReceived`,\n    uploadTransportExcel: `${examinationUrl}/Examinations/GetExaminationDetailsAvailableForTransportExcel`,\n    findTransportRelated: `${examinationUrl}/Transports/FindTransportRelated`,\n    quickReceive: `${examinationUrl}/Transports/QuickReceive`\n  },\n  unit: {\n    getInfo: `${examinationUrl}/Units/GetByToken`,\n    get: `${examinationUrl}/Units`,\n    create: `${examinationUrl}/Units`,\n    update: `${examinationUrl}/Units`,\n    delete: `${examinationUrl}/Units`,\n    getById: `${examinationUrl}/Units`,\n    getPrefixes: `${examinationUrl}/Units/GetUnitPrefixes`,\n    updateCode: `${examinationUrl}/Units/UpdateCode`,\n    getUnitConfigs: `${examinationUrl}/Units/UnitConfigs`,\n    createUnitConfig: `${examinationUrl}/Units/UnitConfig`,\n    updateUnitConfig: `${examinationUrl}/Units/UnitConfig`,\n    deleteUnitConfig: `${examinationUrl}/Units/UnitConfig`\n  },\n  unitType: {\n    get: `${examinationUrl}/UnitTypes`,\n    create: `${examinationUrl}/UnitTypes`,\n    update: `${examinationUrl}/UnitTypes`,\n    delete: `${examinationUrl}/UnitTypes`\n  },\n  session: {\n    get: `${examinationUrl}/TestSessions`,\n    create: `${examinationUrl}/TestSessions`,\n    update: `${examinationUrl}/TestSessions`,\n    delete: `${examinationUrl}/TestSessions`,\n    getPlateAutoFill: `${examinationUrl}/TestSessions/PlateAutoFill`,\n    updateResult: `${examinationUrl}/TestSessions/UpdateResult`,\n    createAndUpdateResult: `${examinationUrl}/TestSessions/CreateAndUpdateResult`,\n    testing: `${examinationUrl}/TestSessions/Testing`\n  },\n  collectingSession: {\n    get: `${examinationUrl}/CollectingSession`,\n    getDetail: `${examinationUrl}/CollectingSession/`,\n    create: `${examinationUrl}/CollectingSession`,\n    update: `${examinationUrl}/CollectingSession`,\n    delete: `${examinationUrl}/CollectingSession/`\n  },\n  people: {\n    create: `${examinationUrl}/People`,\n    get: `${examinationUrl}/People/GetByProfileId`,\n    merge: `${examinationUrl}/People/MergeProfile`,\n    update: `${examinationUrl}/People/UpdateProfile`,\n    getPersonExamHistory: `${examinationUrl}/People/ProfileExamHistory`,\n    getPersonalQuickTestHistory: `${examinationUrl}/People/ProfileQuickTestHistory`,\n    createGroupProfile: `${examinationUrl}/People/CreateGroupProfileByIds`\n  },\n  examinationSummary: {\n    get: `${examinationUrl}/Dashboard`,\n    getByTime: `${examinationUrl}/Dashboard/GetTakenExaminationCountByDates`,\n    getTakenExaminationCountByDates3: `${examinationUrl}/Dashboard/GetTakenExaminationCountByDates`,\n    getResultedExaminationCount4: `${examinationUrl}/Dashboard/GetResultedExaminationCount`,\n    getPeopleAssignedCount1: `${examinationUrl}/Dashboard/GetPeopleAssignedCount`,\n    getPeopleTakenExamCount2: `${examinationUrl}/Dashboard/GetPeopleTakenExamCount`,\n    getPeopleHasResultedExamCount: `${examinationUrl}/Dashboard/GetPeopleHasResultedExamCount`,\n    getExaminationWaitingResultCount5: `${examinationUrl}/Dashboard/GetExaminationWaitingResultCount`,\n    getPeopleExaminationStatistic: `${examinationUrl}/Dashboard/GetPeopleExaminationStatistic`,\n    getExaminationDetailStatistic: `${examinationUrl}/Dashboard/GetExaminationDetailStatistic`,\n    getGroupedExamDetailStatistic: `${examinationUrl}/Dashboard/GetGroupedExamDetailStatistic`,\n    getDashboardByDate: `${examinationUrl}/Dashboard/getDashboardByDate`\n  },\n  quarantineFacilities: {\n    get: `${quarantineUrl}/Facilities`,\n    create: `${quarantineUrl}/Facilities`,\n    update: `${quarantineUrl}/Facilities`,\n    delete: `${quarantineUrl}/Facilities`,\n    setManager: `${quarantineUrl}/Facilities`\n  },\n  quarantineRequests: {\n    get: `${quarantineUrl}/QuarantineRequests`,\n    create: `${quarantineUrl}/QuarantineRequests`\n  },\n  profiles: {\n    get: `${profileUrl}/Profiles`,\n    create: `${profileUrl}/Profiles`,\n    update: `${profileUrl}/Profiles`,\n    delete: `${profileUrl}/Profiles`,\n    verify: `${profileUrl}/Profiles`,\n    getRelated: `${profileUrl}/Profiles/Related`,\n    getChildProfile: `${profileUrl}/Profiles/Grouping/`,\n    getDuplicateProfile: `${profileUrl}/Profiles/SearchExistences`,\n    mergeDuplicateProfile: `${profileUrl}/Profiles/Merge`,\n    getProfileByQRCode: `${profileUrl}/Profiles/GetByQRCode`\n  },\n  subjects: {\n    get: `${chainUrl}/Subjects`,\n    create: `${chainUrl}/Subjects`,\n    update: `${chainUrl}/Subjects`,\n    verify: `${chainUrl}/Subjects`,\n    search: `${chainUrl}/Subjects/Search`\n  },\n  contacts: {\n    get: `${chainUrl}/Contacts`,\n    getBySubject: `${chainUrl}/Subjects/`,\n    create: `${chainUrl}/Contacts`,\n    update: `${chainUrl}/Contacts`,\n    outbreakSearch: `${chainUrl}/Locations/Outbreak`,\n    estateSearch: `${chainUrl}/Locations/Estates`,\n    checkEstateName: `${chainUrl}/Locations/Estates/`,\n    airplaneSearch: `${chainUrl}/Locations/Airplanes`,\n    vehicleSearch: `${chainUrl}/Locations/Vehicles`,\n    getLocationDetail: `${chainUrl}/Locations/`,\n    updateEstate: `${chainUrl}/Locations/Estates/`,\n    getVisitors: `${chainUrl}/Locations/Visitors`,\n    addVisitors: `${chainUrl}/Locations/Visitors`,\n    removeVisitor: `${chainUrl}/Locations/Visitors`,\n    createLocation: `${chainUrl}/Locations`\n  },\n  facilities: {\n    quarantine: {\n      createAppoint: `${quarantineUrl}/Quarantine/CreateAppoint`,\n      appoint: `${quarantineUrl}/Quarantine/Appoint`,\n      takeIn: `${quarantineUrl}/Quarantine/TakeIn`,\n      complete: `${quarantineUrl}/Quarantine/Complete/QuarantineForm/`,\n      transfer: `${quarantineUrl}/Quarantine/Transfer/Treatment`,\n      transferRoom: `${quarantineUrl}/Quarantine/Rooms/QuarantineForm/`,\n      transferFacility: `${quarantineUrl}/Quarantine/Facilities/QuarantineForm/`,\n      extend: `${quarantineUrl}/Quarantine/Time/QuarantineForm/`,\n      getHistory: `${quarantineUrl}/Quarantine/Profiles`,\n      importWaitingList: `${quarantineUrl}/Quarantine/ImportWaitingList`,\n      exportWaitingList: `${quarantineUrl}/Quarantine/ExportExcelWaitingList`,\n      exportFacilityQuarantineList: `${quarantineUrl}/Quarantine/ExportFacilityQuarantineList/`,\n      exportCompletedQuarantineList: `${quarantineUrl}/Quarantine/ExportCompletedQuarantineList/`\n    },\n    quarantineFacilities: {\n      get: `${quarantineUrl}/Facilities`,\n      getInfo: `${quarantineUrl}/Users/Facility`,\n      create: `${quarantineUrl}/Facilities`,\n      update: `${quarantineUrl}/Facilities/`,\n      getDetail: `${quarantineUrl}/Facilities`,\n      getRooms: `${quarantineUrl}/Facilities`,\n      getAvailableRooms: `${quarantineUrl}/Facilities`,\n      createRooms: `${quarantineUrl}/Facilities`,\n      updateRoom: `${quarantineUrl}/Facilities`,\n      deleteRoom: `${quarantineUrl}/Facilities`,\n      delete: `${quarantineUrl}/Facilities/`,\n      getCompleted: `${quarantineUrl}/Facilities/Completed`,\n      getCompletedByFacility: `${quarantineUrl}/Facilities`,\n      getWaitingList: `${quarantineUrl}/Facilities/InWaitingList`,\n      getWaitingListByFacility: `${quarantineUrl}/Facilities`,\n      getInQuarantine: `${quarantineUrl}/Facilities/InQuarantine`,\n      getInQuarantineByFalicity: `${quarantineUrl}/Facilities`,\n      getInHome: `${quarantineUrl}/Facilities/InHomeQuarantine`,\n      getInHomeByFacility: `${quarantineUrl}/Facilities`,\n      getHouses: `${quarantineUrl}/Facilities`,\n      setManager: `${quarantineUrl}/Facilities`,\n      statistic1: `${quarantineUrl}/Facilities/Statistics`,\n      statistic2: `${quarantineUrl}/Facilities/Statistics`,\n      exportFacilities: `${quarantineUrl}/Facilities/ExportFacilities`,\n      exportFacilityRooms: `${quarantineUrl}/Facilities/ExportFacilityRooms`,\n      exportFacilityOccupiers: `${quarantineUrl}/Facilities/ExportFacilityOccupiers`\n    },\n    quarantineForms: {\n      get: `${quarantineUrl}/QuarantineForms`,\n      create: `${quarantineUrl}/QuarantineForms`,\n      getDetail: `${quarantineUrl}/QuarantineForms/`\n    }\n  },\n  general: {\n    diseaseTypes: {\n      get: `${chainUrl}/DiseaseTypes`,\n      create: `${chainUrl}/DiseaseTypes`,\n      update: `${chainUrl}/DiseaseTypes`,\n      delete: `${chainUrl}/DiseaseTypes/`\n    },\n    infectionTypes: {\n      get: `${chainUrl}/InfectionTypes`,\n      create: `${chainUrl}/InfectionTypes`,\n      update: `${chainUrl}/InfectionTypes`,\n      delete: `${chainUrl}/InfectionTypes/`,\n      getSummaries: `${chainUrl}/InfectionTypes/Summaries/DiseaseType/b597cc8f-74b6-434d-8b9d-52b74595a1de`,\n      reloadSummaries: `${chainUrl}/InfectionTypes/Summaries/DiseaseType/b597cc8f-74b6-434d-8b9d-52b74595a1de/Update/Current`\n    }\n    // locationTypes: {\n    //   get: `${chainUrl}/LocationTypes`,\n    //   create: `${chainUrl}/LocationTypes`,\n    //   update: `${chainUrl}/LocationTypes`,\n    //   delete: `${chainUrl}/LocationTypes`,\n    // },\n  },\n\n  infectionChain: {\n    chains: {\n      get: `${chainUrl}/Chains`,\n      create: `${chainUrl}/Chains`,\n      update: `${chainUrl}/Chains/`,\n      delete: `${chainUrl}/Chains/`,\n      addContact: `${chainUrl}/Chains`,\n      getDetail: `${chainUrl}/Chains/`,\n      createContact: `${chainUrl}/Chains`,\n      getSubjects: `${chainUrl}/Chains/`\n    },\n    contacts: {\n      getContactsByChain: `${chainUrl}/Chains`,\n      addSubjects: `${chainUrl}/Contacts/AddSubjects`,\n      deleteSubject: `${chainUrl}/Contacts`,\n      deleteContact: `${chainUrl}/Contacts/`,\n      getContactsBySubject: `${chainUrl}/Subjects`,\n      getContactDetail: `${chainUrl}/Contacts/`,\n      updateInvestigation: `${chainUrl}/Contacts/UpdateInvestigations`,\n      conclude: `${chainUrl}/Contacts/`,\n      exportContactsByChain: `${chainUrl}/Chains/`\n    },\n    subjects: {\n      getSubjectDetail: `${chainUrl}/Subjects/`,\n      checkPositive: `${chainUrl}/Subjects/ProfilesHavePositiveInfectedSubjects`,\n      getF0: `${chainUrl}/Profiles/F0`,\n      getF11: `${chainUrl}/Profiles/F11`,\n      getProfileList: `${profileUrl}/Profiles/Batch`,\n      getPersonels: `${chainUrl}/Personels`,\n      exportSubjects: `${chainUrl}/Subjects/Export`\n    }\n  },\n  investigationCrtieriaCategories: {\n    get: `${chainUrl}/InvestigationCrtieriaCategories`,\n    getNextLevel: `${chainUrl}/InvestigationCrtieriaCategories/InfectionType/`,\n    create: `${chainUrl}/InvestigationCrtieriaCategories`,\n    update: `${chainUrl}/InvestigationCrtieriaCategories`,\n    delete: `${chainUrl}/InvestigationCrtieriaCategories`,\n    assertResult: `${chainUrl}/InvestigationCrtieriaCategories/AssertResult`\n  },\n  treatment: {\n    account: {\n      getInfo: `${treatmentUrl}/Account/Information`\n    },\n    employee: {\n      get: `${treatmentUrl}/Employee`,\n      create: `${treatmentUrl}/Employee`,\n      updateByToken: `${treatmentUrl}/Employee`,\n      delete: `${treatmentUrl}/Employee`,\n      getAll: `${treatmentUrl}/Employee/Filter`,\n      updateById: `${treatmentUrl}/Employee/`\n    },\n    employeeType: {\n      get: `${treatmentUrl}/EmployeeType`\n    },\n    expectedQuarantineDate: {\n      get: `${treatmentUrl}/ExpectedQuarantineDate`,\n      update: `${treatmentUrl}/ExpectedQuarantineDate`\n    },\n    facility: {\n      get: `${treatmentUrl}/Facility`,\n      getFacilities: `${treatmentUrl}/Facility/Filter`,\n      create: `${treatmentUrl}/Facility/`,\n      update: `${treatmentUrl}/Facility/`,\n      delete: `${treatmentUrl}/Facility/`,\n      transfer: `${treatmentUrl}/Facility/Transfer`,\n      undo: `${treatmentUrl}/Facility/Recall`,\n      getDetail: `${treatmentUrl}/Facility/`,\n      getCompleted: `${treatmentUrl}/Facility/Completed`,\n      getTransited: `${treatmentUrl}/Facility/Transited`,\n      getOutOfProcess: `${treatmentUrl}/Facility/OutOfProcess`,\n      getTransfer: `${treatmentUrl}/Transfer`,\n      approveTransfer: `${treatmentUrl}/Transfer/Accept`\n    },\n    hospital: {\n      getAll: `${treatmentUrl}/Hospital/Filter`,\n      create: `${treatmentUrl}/Hospital`,\n      update: `${treatmentUrl}/Hospital/`,\n      delete: `${treatmentUrl}/Hospital/`,\n      getByFacility: `${treatmentUrl}/Hospital/`,\n      createByFacility: `${treatmentUrl}/Hospital/`,\n      deleteByFacility: `${treatmentUrl}/Hospital/`\n    },\n    quarantineList: {\n      get: `${treatmentUrl}/QuarantineList`,\n      complete: `${treatmentUrl}/QuarantineList/Complete`,\n      transit: `${treatmentUrl}/QuarantineList/Transit`,\n      outOfProcess: `${treatmentUrl}/QuarantineList/OutOfProcess`\n    },\n    visit: {\n      get: `${treatmentUrl}/Visit/`,\n      create: `${treatmentUrl}/Visit`,\n      update: `${treatmentUrl}/Visit`,\n      complete: `${treatmentUrl}/Visit/Completed`\n    },\n    waitingList: {\n      get: `${treatmentUrl}/WaitingList/AlreadyInWaitingList`,\n      getByFacility: `${treatmentUrl}/WaitingList`,\n      create: `${treatmentUrl}/WaitingList`,\n      approve: `${treatmentUrl}/WaitingList/Approve`\n    },\n    profileList: {\n      get: `${treatmentUrl}/ProfileList/Filter`,\n      create: `${treatmentUrl}/ProfileList`,\n      createNewProfile: `${treatmentUrl}/ProfileList/Profile`\n    }\n  },\n  excelCategories: {\n    get: `${reportUrl}/Category`,\n    create: `${reportUrl}/Category`,\n    update: `${reportUrl}/Category`,\n    delete: `${reportUrl}/Category/`\n  },\n  quickTest: {\n    get: id => `${examinationUrl}/QuickTests/${id || ''}`,\n    create: `${examinationUrl}/QuickTests`,\n    update: `${examinationUrl}/QuickTests`,\n    updateByAdmin: `${examinationUrl}/QuickTests/AdminUpdate`,\n    delete: id => `${examinationUrl}/QuickTests?id=${id}`,\n    deleteByAdmin: id => `${examinationUrl}/QuickTests/AdminDelete?id=${id}`,\n    assign: `${examinationUrl}/QuickTests/Assign`,\n    publish: `${examinationUrl}/QuickTests/Publish`,\n    recovery: id => `${examinationUrl}/QuickTests/RecoverDeleted?id=${id}`,\n    changeProfile: `${examinationUrl}/QuickTests/ChangeProfile`,\n    createWithProfile: `${examinationUrl}/QuickTests/CreateWithProfile`,\n    createBatch: `${examinationUrl}/QuickTests/CreateBatch`,\n    createBatchProfile: `${examinationUrl}/QuickTests/CreateBatch`,\n    createBatchWithProfile: `${examinationUrl}/QuickTests/CreateBatchWithProfile`,\n    getDeleted: `${examinationUrl}/QuickTests/GetDeleted`,\n    getPositiveQuickTests: `${examinationUrl}/QuickTests/QuickTestPositive`,\n    getQuickTestsByUnitType: `${examinationUrl}/QuickTests/FilterByUnitType`,\n    getQuickTestsByManagementUnit: `${examinationUrl}/QuickTests/FilterByManagementUnits`,\n    importJson: `${examinationUrl}/ImportJson/ImportQuickTestJson`\n  },\n  immunization: {\n    create: `${profileUrl}/Immunization`,\n    update: `${profileUrl}/Immunization`\n  },\n  underlyingDiseases: {\n    get: `${profileUrl}/Health`,\n    create: `${profileUrl}/Health`,\n    delete: `${profileUrl}/Health`\n  },\n  infectiousDiseases: {\n    get: `${profileUrl}/InfectiousDiseaseHistory`,\n    GetPHRAndCheckPositive: `${profileUrl}/InfectiousDiseaseHistory/GetPHRAndCheckPositive`\n  },\n  importPcrExamination: {\n    create: `${examinationUrl}/ImportJson/ImportExamJsonV2`\n  },\n  injectedPatient: {\n    get: `${healthDeclaration}/ProfileInformation/GetWithProfileHealthDeclaration`,\n    getById: `${healthDeclaration}/HealthDeclaration`,\n    importExcel: `${healthDeclaration}/HealthDeclaration/ImportByExcel`,\n    exportExcel: `${healthDeclaration}/ProfileInformation/ExportWithHealthDeclaration`,\n    delete: `${healthDeclaration}/HealthDeclaration`,\n    updateQuarantineAddress: `${healthDeclaration}/HealthDeclaration`\n  },\n  infectiousDiseaseHistories: {\n    get: `${profileUrl}/InfectiousDiseaseHistory`,\n    getLog: `${profileUrl}/InfectiousDiseaseHistoryLog`,\n    checkPositive: `${profileUrl}/InfectiousDiseaseHistory/GetPHRAndCheckPositive`\n  }\n};\nexport default apiLinks;","map":{"version":3,"names":["url","window","location","href","isDev","indexOf","process","env","NODE_ENV","gatewayUrl","devUrl","userUrl","profileUrl","examinationUrl","chainUrl","quarantineUrl","treatmentUrl","reportUrl","healthDeclaration","apiLinks","login","checkCredential","changePassword","getPermission","getDiseases","getSymptoms","disease","symptoms","diseaseSample","get","diseases","samplingPlaces","examination","create","update","delete","getByPerson","getDetails","getNormalDetails","getUrgencyDetails","getAvailableExamForTransport","getExaminationDetail","getExaminationDetailV2","updateExaminationDetail","uploadResultExcel","getExaminationDetailsAvailableForTestSession","getPositiveExaminationDetail","changeProfile","changeProfileBatch","markAsUnsatisfactorySample","unMarkAsUnsatisfactorySample","excel","exportExam","exportByRange","exportExamBook","examResultList","getAvailableDatesForResultList","examResultListHCDC","getAvailableDatesForResultListHCDC","receivedStatistic","takenExamList","availableDatesForTakenExamList","exportPlate","exportPlateResult","importTestSessionResult","importInformation","exportExaminationResult","uploadProfilesFromExcel","exportResultFromExcel","importAssigns","importSecodaryCodeMapping","importExams","dateRangeListAll","readPlateResult","importQuickResultUpdate","exportStatisticExamination","exportProgressExamiantionTracking","exportExaminationStatisticByTakenDate","exportExaminationStatisticByResultDate","exportCommunityPositiveRateStatistic","exportStatisticExaminationByCodes","exportExaminationStatusReportByPlaceResidence","exportSummaryExaminationStatisticOfDistrictByResidencePlace","exportIsNotGroupPositivePerIsNotGroupAll","exportExaminationStatusReportByDangerZone","exportPositiveRateStatisticBySamplingPlaces","exportProfileHasExamination","exportQuickTestAvailableToPublish","exportQuickTestReportStatistic","exportPositiveExaminationReportStatistic","exportQuickTestResultAnswerForm","exportInfectiousDisease","examinationType","samplingPlace","assign","getByUnitId","cancel","assignWithCodeOnly","assignWithDate","examinationCode","getUnAvailableCodes","getAvailableCodes","getUsedCodes","getOtherCodes","getAvailableCodesToPrint","getAvailableCodesToPublish","getAvailableCodesToRePrint","getAvailableCodesToUse","getAvailableDiseasesToPrint","getAvailableDiseasesToPublish","getAvailableDiseasesToRePrint","publish","print","rePrint","rePrintFrom","createBatchUnit","getAvailableUnitsToPublish","publishBatchUnit","transport","send","receive","getById","getUnitAvailable","importExcel","exportExcel","rejectSent","rejectReceived","uploadTransportExcel","findTransportRelated","quickReceive","unit","getInfo","getPrefixes","updateCode","getUnitConfigs","createUnitConfig","updateUnitConfig","deleteUnitConfig","unitType","session","getPlateAutoFill","updateResult","createAndUpdateResult","testing","collectingSession","getDetail","people","merge","getPersonExamHistory","getPersonalQuickTestHistory","createGroupProfile","examinationSummary","getByTime","getTakenExaminationCountByDates3","getResultedExaminationCount4","getPeopleAssignedCount1","getPeopleTakenExamCount2","getPeopleHasResultedExamCount","getExaminationWaitingResultCount5","getPeopleExaminationStatistic","getExaminationDetailStatistic","getGroupedExamDetailStatistic","getDashboardByDate","quarantineFacilities","setManager","quarantineRequests","profiles","verify","getRelated","getChildProfile","getDuplicateProfile","mergeDuplicateProfile","getProfileByQRCode","subjects","search","contacts","getBySubject","outbreakSearch","estateSearch","checkEstateName","airplaneSearch","vehicleSearch","getLocationDetail","updateEstate","getVisitors","addVisitors","removeVisitor","createLocation","facilities","quarantine","createAppoint","appoint","takeIn","complete","transfer","transferRoom","transferFacility","extend","getHistory","importWaitingList","exportWaitingList","exportFacilityQuarantineList","exportCompletedQuarantineList","getRooms","getAvailableRooms","createRooms","updateRoom","deleteRoom","getCompleted","getCompletedByFacility","getWaitingList","getWaitingListByFacility","getInQuarantine","getInQuarantineByFalicity","getInHome","getInHomeByFacility","getHouses","statistic1","statistic2","exportFacilities","exportFacilityRooms","exportFacilityOccupiers","quarantineForms","general","diseaseTypes","infectionTypes","getSummaries","reloadSummaries","infectionChain","chains","addContact","createContact","getSubjects","getContactsByChain","addSubjects","deleteSubject","deleteContact","getContactsBySubject","getContactDetail","updateInvestigation","conclude","exportContactsByChain","getSubjectDetail","checkPositive","getF0","getF11","getProfileList","getPersonels","exportSubjects","investigationCrtieriaCategories","getNextLevel","assertResult","treatment","account","employee","updateByToken","getAll","updateById","employeeType","expectedQuarantineDate","facility","getFacilities","undo","getTransited","getOutOfProcess","getTransfer","approveTransfer","hospital","getByFacility","createByFacility","deleteByFacility","quarantineList","transit","outOfProcess","visit","waitingList","approve","profileList","createNewProfile","excelCategories","quickTest","id","updateByAdmin","deleteByAdmin","recovery","createWithProfile","createBatch","createBatchProfile","createBatchWithProfile","getDeleted","getPositiveQuickTests","getQuickTestsByUnitType","getQuickTestsByManagementUnit","importJson","immunization","underlyingDiseases","infectiousDiseases","GetPHRAndCheckPositive","importPcrExamination","injectedPatient","updateQuarantineAddress","infectiousDiseaseHistories","getLog"],"sources":["H:/BAKCO/pj/cds/src/app/utils/api-links.js"],"sourcesContent":["const url = window.location.href;\nconst isDev = url.indexOf('abcde') > -1 || process.env.NODE_ENV === 'development';\n\nconst gatewayUrl = 'https://api.hcdc.vn/api/v1';\nconst devUrl = 'https://test-api.hcdc.vn/api/v1';\n\nconst userUrl = `${gatewayUrl}/auth`;\nconst profileUrl = isDev\n  ? 'https://profile-test.hcdc.vn/api'\n  : `${gatewayUrl}/profile`;\nconst examinationUrl = isDev\n  ? 'https://examination-management.hcdc.vn/api'\n  : `${gatewayUrl}/examination`;\nconst chainUrl = `${isDev ? devUrl : gatewayUrl}/infectionChain`;\nconst quarantineUrl = isDev\n  ? 'http://202.78.227.175:32585/api'\n  : 'https://quarantine.vkhealth.vn/api';\n\nconst treatmentUrl = isDev\n  ? 'https://homequarantine.bakco.vn/api'\n  : 'http://202.78.227.174:51560/api';\nconst reportUrl = `${gatewayUrl}/report`;\n\nconst healthDeclaration = isDev\n  ? 'https://health-declaration-dev.hcdc.vn/api'\n  : 'https://api.hcdc.vn/api/v1/healthDeclaration';\n\nconst apiLinks = {\n  login: `${userUrl}/Users/Login`,\n  checkCredential: `${userUrl}/Users/ValidateCredential`,\n  changePassword: `${userUrl}/Users/ChangePassword`,\n  getPermission: `${userUrl}/Users/Permissions/Ui`,\n  getDiseases: `${profileUrl}/Health?isSymptom=false&pageSize=20&pageIndex=0`,\n  getSymptoms: `${profileUrl}/Health?isSymptom=true&pageSize=20&pageIndex=0`,\n  disease: `${profileUrl}/Health/Diseases`,\n  symptoms: `${profileUrl}/Health/Symptoms`,\n  diseaseSample: {\n    get: `${examinationUrl}/DiseaseSamples`,\n  },\n  diseases: {\n    get: `${examinationUrl}/Diseases`,\n  },\n  samplingPlaces: {\n    get: `${examinationUrl}/SamplingPlaces?pageIndex=0&pageSize=1000`,\n  },\n  examination: {\n    get: `${examinationUrl}/Examinations`,\n    create: `${examinationUrl}/Examinations`,\n    update: `${examinationUrl}/Examinations`,\n    delete: `${examinationUrl}/Examinations`,\n    getByPerson: `${examinationUrl}/Examinations/GetExaminationByPerson`,\n    getDetails: `${examinationUrl}/Examinations/GetExaminationDetailsAvailable`,\n    getNormalDetails: `${examinationUrl}/Examinations/GetExaminationDetailForTransportsNormal`,\n    getUrgencyDetails: `${examinationUrl}/Examinations/GetExaminationDetailForTransportsUrgency`,\n    getAvailableExamForTransport: `${examinationUrl}/Examinations/GetExaminationDetailsAvailableForTransport`,\n    getExaminationDetail: `${examinationUrl}/Examinations/GetExaminationDetails`,\n    getExaminationDetailV2: `${examinationUrl}/Examinations/GetExaminationDetailsV2`,\n    updateExaminationDetail: `${examinationUrl}/Examinations/UpdateExamDetail`,\n    uploadResultExcel: `${examinationUrl}/Examinations/ExamDetailResultExcel`,\n    getExaminationDetailsAvailableForTestSession: `${examinationUrl}/Examinations/GetExaminationDetailsAvailableForTestSession`,\n    getPositiveExaminationDetail: `${examinationUrl}/Examinations/ExamDetailPositive`,\n    changeProfile: `${examinationUrl}/Examinations/ChangeProfile`,\n    changeProfileBatch: `${examinationUrl}/Examinations/ChangeProfileBatch`,\n    markAsUnsatisfactorySample: `${examinationUrl}/Examinations/MarkAsUnsatisfactorySample`,\n    unMarkAsUnsatisfactorySample: `${examinationUrl}/Examinations/UnMarkAsUnsatisfactorySample`,\n  },\n  excel: {\n    exportExam: `${examinationUrl}/Excels/ExamResultAnswerForm`,\n    exportByRange: `${examinationUrl}/Excels/DateRangeListHCDC`,\n    exportExamBook: `${examinationUrl}/Excels/ExportExamBook`,\n    examResultList: `${examinationUrl}/Excels/ExamResultList`,\n    getAvailableDatesForResultList: `${examinationUrl}/Excels/AvailableDatesForResultList`,\n    examResultListHCDC: `${examinationUrl}/Excels/ExamResultListHCDC`,\n    getAvailableDatesForResultListHCDC: `${examinationUrl}/Excels/AvailableDatesForResultListHCDC`,\n    receivedStatistic: `${examinationUrl}/Excels/ReceivedStatistic`,\n    takenExamList: `${examinationUrl}/Excels/TakenExamList`,\n    availableDatesForTakenExamList: `${examinationUrl}/Excels/AvailableDatesForTakenExamList`,\n    exportPlate: `${examinationUrl}/Excels/ExportPlate`,\n    exportPlateResult: `${examinationUrl}/Excels/ExportPlateResult`,\n    importTestSessionResult: `${examinationUrl}/Excels/ImportTestSessionResult`,\n    importInformation: `${examinationUrl}/Excels/ImportInformation`,\n    exportExaminationResult: `${examinationUrl}/Excels/ExportExaminationDetail`,\n    uploadProfilesFromExcel: `${examinationUrl}/Excels/FindProfilesFromExcel`,\n    exportResultFromExcel: `${examinationUrl}/Excels/FindResultFromExcel`,\n    importAssigns: `${examinationUrl}/Excels/ImportAssigns`,\n    importSecodaryCodeMapping: `${examinationUrl}/Excels/ImportSecondaryCodeMapping`,\n    importExams: `${examinationUrl}/Excels/ImportExams`,\n    dateRangeListAll: `${examinationUrl}/Excels/DateRangeListAll`,\n    readPlateResult: `${examinationUrl}/Excels/ReadPlateResult`,\n    importQuickResultUpdate: `${examinationUrl}/Excels/ImportQuickResultUpdate`,\n    exportStatisticExamination: `${reportUrl}/Excel/GetElasticReportStatistic`,\n    exportProgressExamiantionTracking: `${reportUrl}/Excel/GetProgressExaminationTracking`,\n    exportExaminationStatisticByTakenDate: `${reportUrl}/Excel/GetExaminationStatisticByTakenDate`,\n    exportExaminationStatisticByResultDate: `${reportUrl}/Excel/GetExaminationStatisticByResultDate`,\n    exportCommunityPositiveRateStatistic: `${reportUrl}/Excel/CommunityPositiveRateStatistic`,\n    exportStatisticExaminationByCodes: `${reportUrl}/Excel/GetElasticReportStatisticByCodes`,\n    exportExaminationStatusReportByPlaceResidence: `${reportUrl}/Excel/GetExaminationStatusReportByPlaceResidence`,\n    exportSummaryExaminationStatisticOfDistrictByResidencePlace: `${reportUrl}/Excel/SummaryExaminationStatisticOfDistrictByResidencePlace`,\n    exportIsNotGroupPositivePerIsNotGroupAll: `${reportUrl}/Excel/GetIsNotGroupPositivePerIsNotGroupAll`,\n    exportExaminationStatusReportByDangerZone: `${reportUrl}/Excel/GetExaminationStatusReportByDangerZone`,\n    exportPositiveRateStatisticBySamplingPlaces: `${reportUrl}/Excel/PositiveRateStatisticBySamplingPlaces`,\n    exportProfileHasExamination: `${profileUrl}/Exports/Profiles/Examinated`,\n    exportQuickTestAvailableToPublish: `${examinationUrl}/Excels/ExportQuickTestAvailableToPublish`,\n    exportQuickTestReportStatistic: `${reportUrl}/Excel/GetQuickTestReportStatistic`,\n    exportPositiveExaminationReportStatistic: `${reportUrl}/Excel/GetPositiveElasticReportStatistic`,\n    // exportQuickTestResultAnswerForm: `${examinationUrl}/Excels/QuickTestResultAnswerForm`,\n    exportQuickTestResultAnswerForm: `${examinationUrl}/Excels/QuickTestResultAnswerFormV2`,\n    // https://examination-management.hcdc.vn/api/Excels/QuickTestResultAnswerFormV2?qtId=342342\n    exportInfectiousDisease: `${profileUrl}/InfectiousDiseaseHistory/Export`,\n  },\n  examinationType: {\n    get: `${examinationUrl}/ExaminationTypes`,\n  },\n  samplingPlace: {\n    get: `${examinationUrl}/SamplingPlaces`,\n  },\n  assign: {\n    get: `${examinationUrl}/Assigns`,\n    create: `${examinationUrl}/Assigns/AssignCreateWithProfile`,\n    update: `${examinationUrl}/Assigns`,\n    delete: `${examinationUrl}/Assigns`,\n    getByUnitId: `${examinationUrl}/units`,\n    cancel: `${examinationUrl}/Assigns/Cancel`,\n    assignWithCodeOnly: `${examinationUrl}/Assigns/AssignWithCodeOnly`,\n    assignWithDate: `${examinationUrl}/Assigns/AssignWithDate`,\n  },\n  examinationCode: {\n    getUnAvailableCodes: `${examinationUrl}/ExaminationCodes/GetUnAvailableCodes`,\n    getAvailableCodes: `${examinationUrl}/ExaminationCodes/GetAvailableCodes`,\n    getUsedCodes: `${examinationUrl}/ExaminationCodes/GetUsedCodes`,\n    getOtherCodes: `${examinationUrl}/ExaminationCodes/GetOtherCodes`,\n    getAvailableCodesToPrint: `${examinationUrl}/ExaminationCodes/GetAvailableCodeToPrint`,\n    getAvailableCodesToPublish: `${examinationUrl}/ExaminationCodes/GetAvailableCodeToPublish`,\n    getAvailableCodesToRePrint: `${examinationUrl}/ExaminationCodes/GetAvailableCodeToRePrint`,\n    getAvailableCodesToUse: `${examinationUrl}/ExaminationCodes/AvailableCodeToUse`,\n    getAvailableDiseasesToPrint: `${examinationUrl}/ExaminationCodes/GetAvailableDiseaseToPrint`,\n    getAvailableDiseasesToPublish: `${examinationUrl}/ExaminationCodes/GetAvailableDiseaseToPublish`,\n    getAvailableDiseasesToRePrint: `${examinationUrl}/ExaminationCodes/GetAvailableDiseaseToRePrint`,\n    create: `${examinationUrl}/ExaminationCodes`,\n    publish: `${examinationUrl}/ExaminationCodes/Publish`,\n    print: `${examinationUrl}/ExaminationCodes/Print`,\n    rePrint: `${examinationUrl}/ExaminationCodes/RePrint`,\n    rePrintFrom: `${examinationUrl}/ExaminationCodes/RePrintFrom`,\n    createBatchUnit: `${examinationUrl}/ExaminationCodes/CreateBatchUnit`,\n    getAvailableUnitsToPublish: `${examinationUrl}/ExaminationCodes/GetAvailableUnitsToPublish`,\n    publishBatchUnit: `${examinationUrl}/ExaminationCodes/PublishBatchUnit`,\n  },\n  transport: {\n    get: `${examinationUrl}/Transports`,\n    create: `${examinationUrl}/Transports`,\n    update: `${examinationUrl}/Transports`,\n    delete: `${examinationUrl}/Transports`,\n    send: `${examinationUrl}/Transports/Send`,\n    receive: `${examinationUrl}/Transports/Receive`,\n    getById: `${examinationUrl}/Transports/`,\n    getUnitAvailable: `${examinationUrl}/Transports/GetUnitsAvailable`,\n    importExcel: `${examinationUrl}/Transports/ImportExcel`,\n    exportExcel: `${examinationUrl}/Transports/ExportExcel`,\n    rejectSent: `${examinationUrl}/Transports/RejectSent`,\n    rejectReceived: `${examinationUrl}/Transports/RejectReceived`,\n    uploadTransportExcel: `${examinationUrl}/Examinations/GetExaminationDetailsAvailableForTransportExcel`,\n    findTransportRelated: `${examinationUrl}/Transports/FindTransportRelated`,\n    quickReceive: `${examinationUrl}/Transports/QuickReceive`,\n  },\n  unit: {\n    getInfo: `${examinationUrl}/Units/GetByToken`,\n    get: `${examinationUrl}/Units`,\n    create: `${examinationUrl}/Units`,\n    update: `${examinationUrl}/Units`,\n    delete: `${examinationUrl}/Units`,\n    getById: `${examinationUrl}/Units`,\n    getPrefixes: `${examinationUrl}/Units/GetUnitPrefixes`,\n    updateCode: `${examinationUrl}/Units/UpdateCode`,\n    getUnitConfigs: `${examinationUrl}/Units/UnitConfigs`,\n    createUnitConfig: `${examinationUrl}/Units/UnitConfig`,\n    updateUnitConfig: `${examinationUrl}/Units/UnitConfig`,\n    deleteUnitConfig: `${examinationUrl}/Units/UnitConfig`,\n  },\n  unitType: {\n    get: `${examinationUrl}/UnitTypes`,\n    create: `${examinationUrl}/UnitTypes`,\n    update: `${examinationUrl}/UnitTypes`,\n    delete: `${examinationUrl}/UnitTypes`,\n  },\n  session: {\n    get: `${examinationUrl}/TestSessions`,\n    create: `${examinationUrl}/TestSessions`,\n    update: `${examinationUrl}/TestSessions`,\n    delete: `${examinationUrl}/TestSessions`,\n    getPlateAutoFill: `${examinationUrl}/TestSessions/PlateAutoFill`,\n    updateResult: `${examinationUrl}/TestSessions/UpdateResult`,\n    createAndUpdateResult: `${examinationUrl}/TestSessions/CreateAndUpdateResult`,\n    testing: `${examinationUrl}/TestSessions/Testing`,\n  },\n  collectingSession: {\n    get: `${examinationUrl}/CollectingSession`,\n    getDetail: `${examinationUrl}/CollectingSession/`,\n    create: `${examinationUrl}/CollectingSession`,\n    update: `${examinationUrl}/CollectingSession`,\n    delete: `${examinationUrl}/CollectingSession/`,\n  },\n  people: {\n    create: `${examinationUrl}/People`,\n    get: `${examinationUrl}/People/GetByProfileId`,\n    merge: `${examinationUrl}/People/MergeProfile`,\n    update: `${examinationUrl}/People/UpdateProfile`,\n    getPersonExamHistory: `${examinationUrl}/People/ProfileExamHistory`,\n    getPersonalQuickTestHistory: `${examinationUrl}/People/ProfileQuickTestHistory`,\n    createGroupProfile: `${examinationUrl}/People/CreateGroupProfileByIds`,\n  },\n  examinationSummary: {\n    get: `${examinationUrl}/Dashboard`,\n    getByTime: `${examinationUrl}/Dashboard/GetTakenExaminationCountByDates`,\n    getTakenExaminationCountByDates3: `${examinationUrl}/Dashboard/GetTakenExaminationCountByDates`,\n    getResultedExaminationCount4: `${examinationUrl}/Dashboard/GetResultedExaminationCount`,\n    getPeopleAssignedCount1: `${examinationUrl}/Dashboard/GetPeopleAssignedCount`,\n    getPeopleTakenExamCount2: `${examinationUrl}/Dashboard/GetPeopleTakenExamCount`,\n    getPeopleHasResultedExamCount: `${examinationUrl}/Dashboard/GetPeopleHasResultedExamCount`,\n    getExaminationWaitingResultCount5: `${examinationUrl}/Dashboard/GetExaminationWaitingResultCount`,\n    getPeopleExaminationStatistic: `${examinationUrl}/Dashboard/GetPeopleExaminationStatistic`,\n    getExaminationDetailStatistic: `${examinationUrl}/Dashboard/GetExaminationDetailStatistic`,\n    getGroupedExamDetailStatistic: `${examinationUrl}/Dashboard/GetGroupedExamDetailStatistic`,\n    getDashboardByDate: `${examinationUrl}/Dashboard/getDashboardByDate`,\n  },\n  quarantineFacilities: {\n    get: `${quarantineUrl}/Facilities`,\n    create: `${quarantineUrl}/Facilities`,\n    update: `${quarantineUrl}/Facilities`,\n    delete: `${quarantineUrl}/Facilities`,\n    setManager: `${quarantineUrl}/Facilities`,\n  },\n  quarantineRequests: {\n    get: `${quarantineUrl}/QuarantineRequests`,\n    create: `${quarantineUrl}/QuarantineRequests`,\n  },\n  profiles: {\n    get: `${profileUrl}/Profiles`,\n    create: `${profileUrl}/Profiles`,\n    update: `${profileUrl}/Profiles`,\n    delete: `${profileUrl}/Profiles`,\n    verify: `${profileUrl}/Profiles`,\n    getRelated: `${profileUrl}/Profiles/Related`,\n    getChildProfile: `${profileUrl}/Profiles/Grouping/`,\n    getDuplicateProfile: `${profileUrl}/Profiles/SearchExistences`,\n    mergeDuplicateProfile: `${profileUrl}/Profiles/Merge`,\n    getProfileByQRCode: `${profileUrl}/Profiles/GetByQRCode`,\n  },\n  subjects: {\n    get: `${chainUrl}/Subjects`,\n    create: `${chainUrl}/Subjects`,\n    update: `${chainUrl}/Subjects`,\n    verify: `${chainUrl}/Subjects`,\n    search: `${chainUrl}/Subjects/Search`,\n  },\n  contacts: {\n    get: `${chainUrl}/Contacts`,\n    getBySubject: `${chainUrl}/Subjects/`,\n    create: `${chainUrl}/Contacts`,\n    update: `${chainUrl}/Contacts`,\n    outbreakSearch: `${chainUrl}/Locations/Outbreak`,\n    estateSearch: `${chainUrl}/Locations/Estates`,\n    checkEstateName: `${chainUrl}/Locations/Estates/`,\n    airplaneSearch: `${chainUrl}/Locations/Airplanes`,\n    vehicleSearch: `${chainUrl}/Locations/Vehicles`,\n    getLocationDetail: `${chainUrl}/Locations/`,\n    updateEstate: `${chainUrl}/Locations/Estates/`,\n    getVisitors: `${chainUrl}/Locations/Visitors`,\n    addVisitors: `${chainUrl}/Locations/Visitors`,\n    removeVisitor: `${chainUrl}/Locations/Visitors`,\n    createLocation: `${chainUrl}/Locations`,\n  },\n  facilities: {\n    quarantine: {\n      createAppoint: `${quarantineUrl}/Quarantine/CreateAppoint`,\n      appoint: `${quarantineUrl}/Quarantine/Appoint`,\n      takeIn: `${quarantineUrl}/Quarantine/TakeIn`,\n      complete: `${quarantineUrl}/Quarantine/Complete/QuarantineForm/`,\n      transfer: `${quarantineUrl}/Quarantine/Transfer/Treatment`,\n      transferRoom: `${quarantineUrl}/Quarantine/Rooms/QuarantineForm/`,\n      transferFacility: `${quarantineUrl}/Quarantine/Facilities/QuarantineForm/`,\n      extend: `${quarantineUrl}/Quarantine/Time/QuarantineForm/`,\n      getHistory: `${quarantineUrl}/Quarantine/Profiles`,\n      importWaitingList: `${quarantineUrl}/Quarantine/ImportWaitingList`,\n      exportWaitingList: `${quarantineUrl}/Quarantine/ExportExcelWaitingList`,\n      exportFacilityQuarantineList: `${quarantineUrl}/Quarantine/ExportFacilityQuarantineList/`,\n      exportCompletedQuarantineList: `${quarantineUrl}/Quarantine/ExportCompletedQuarantineList/`,\n    },\n    quarantineFacilities: {\n      get: `${quarantineUrl}/Facilities`,\n      getInfo: `${quarantineUrl}/Users/Facility`,\n      create: `${quarantineUrl}/Facilities`,\n      update: `${quarantineUrl}/Facilities/`,\n      getDetail: `${quarantineUrl}/Facilities`,\n      getRooms: `${quarantineUrl}/Facilities`,\n      getAvailableRooms: `${quarantineUrl}/Facilities`,\n      createRooms: `${quarantineUrl}/Facilities`,\n      updateRoom: `${quarantineUrl}/Facilities`,\n      deleteRoom: `${quarantineUrl}/Facilities`,\n      delete: `${quarantineUrl}/Facilities/`,\n      getCompleted: `${quarantineUrl}/Facilities/Completed`,\n      getCompletedByFacility: `${quarantineUrl}/Facilities`,\n      getWaitingList: `${quarantineUrl}/Facilities/InWaitingList`,\n      getWaitingListByFacility: `${quarantineUrl}/Facilities`,\n      getInQuarantine: `${quarantineUrl}/Facilities/InQuarantine`,\n      getInQuarantineByFalicity: `${quarantineUrl}/Facilities`,\n      getInHome: `${quarantineUrl}/Facilities/InHomeQuarantine`,\n      getInHomeByFacility: `${quarantineUrl}/Facilities`,\n      getHouses: `${quarantineUrl}/Facilities`,\n      setManager: `${quarantineUrl}/Facilities`,\n      statistic1: `${quarantineUrl}/Facilities/Statistics`,\n      statistic2: `${quarantineUrl}/Facilities/Statistics`,\n      exportFacilities: `${quarantineUrl}/Facilities/ExportFacilities`,\n      exportFacilityRooms: `${quarantineUrl}/Facilities/ExportFacilityRooms`,\n      exportFacilityOccupiers: `${quarantineUrl}/Facilities/ExportFacilityOccupiers`,\n    },\n    quarantineForms: {\n      get: `${quarantineUrl}/QuarantineForms`,\n      create: `${quarantineUrl}/QuarantineForms`,\n      getDetail: `${quarantineUrl}/QuarantineForms/`,\n    },\n  },\n  general: {\n    diseaseTypes: {\n      get: `${chainUrl}/DiseaseTypes`,\n      create: `${chainUrl}/DiseaseTypes`,\n      update: `${chainUrl}/DiseaseTypes`,\n      delete: `${chainUrl}/DiseaseTypes/`,\n    },\n    infectionTypes: {\n      get: `${chainUrl}/InfectionTypes`,\n      create: `${chainUrl}/InfectionTypes`,\n      update: `${chainUrl}/InfectionTypes`,\n      delete: `${chainUrl}/InfectionTypes/`,\n      getSummaries: `${chainUrl}/InfectionTypes/Summaries/DiseaseType/b597cc8f-74b6-434d-8b9d-52b74595a1de`,\n      reloadSummaries: `${chainUrl}/InfectionTypes/Summaries/DiseaseType/b597cc8f-74b6-434d-8b9d-52b74595a1de/Update/Current`,\n    },\n    // locationTypes: {\n    //   get: `${chainUrl}/LocationTypes`,\n    //   create: `${chainUrl}/LocationTypes`,\n    //   update: `${chainUrl}/LocationTypes`,\n    //   delete: `${chainUrl}/LocationTypes`,\n    // },\n  },\n  infectionChain: {\n    chains: {\n      get: `${chainUrl}/Chains`,\n      create: `${chainUrl}/Chains`,\n      update: `${chainUrl}/Chains/`,\n      delete: `${chainUrl}/Chains/`,\n      addContact: `${chainUrl}/Chains`,\n      getDetail: `${chainUrl}/Chains/`,\n      createContact: `${chainUrl}/Chains`,\n      getSubjects: `${chainUrl}/Chains/`,\n    },\n    contacts: {\n      getContactsByChain: `${chainUrl}/Chains`,\n      addSubjects: `${chainUrl}/Contacts/AddSubjects`,\n      deleteSubject: `${chainUrl}/Contacts`,\n      deleteContact: `${chainUrl}/Contacts/`,\n      getContactsBySubject: `${chainUrl}/Subjects`,\n      getContactDetail: `${chainUrl}/Contacts/`,\n      updateInvestigation: `${chainUrl}/Contacts/UpdateInvestigations`,\n      conclude: `${chainUrl}/Contacts/`,\n      exportContactsByChain: `${chainUrl}/Chains/`,\n    },\n    subjects: {\n      getSubjectDetail: `${chainUrl}/Subjects/`,\n      checkPositive: `${chainUrl}/Subjects/ProfilesHavePositiveInfectedSubjects`,\n      getF0: `${chainUrl}/Profiles/F0`,\n      getF11: `${chainUrl}/Profiles/F11`,\n      getProfileList: `${profileUrl}/Profiles/Batch`,\n      getPersonels: `${chainUrl}/Personels`,\n      exportSubjects: `${chainUrl}/Subjects/Export`,\n    },\n  },\n  investigationCrtieriaCategories: {\n    get: `${chainUrl}/InvestigationCrtieriaCategories`,\n    getNextLevel: `${chainUrl}/InvestigationCrtieriaCategories/InfectionType/`,\n    create: `${chainUrl}/InvestigationCrtieriaCategories`,\n    update: `${chainUrl}/InvestigationCrtieriaCategories`,\n    delete: `${chainUrl}/InvestigationCrtieriaCategories`,\n    assertResult: `${chainUrl}/InvestigationCrtieriaCategories/AssertResult`,\n  },\n  treatment: {\n    account: {\n      getInfo: `${treatmentUrl}/Account/Information`,\n    },\n    employee: {\n      get: `${treatmentUrl}/Employee`,\n      create: `${treatmentUrl}/Employee`,\n      updateByToken: `${treatmentUrl}/Employee`,\n      delete: `${treatmentUrl}/Employee`,\n      getAll: `${treatmentUrl}/Employee/Filter`,\n      updateById: `${treatmentUrl}/Employee/`,\n    },\n    employeeType: {\n      get: `${treatmentUrl}/EmployeeType`,\n    },\n    expectedQuarantineDate: {\n      get: `${treatmentUrl}/ExpectedQuarantineDate`,\n      update: `${treatmentUrl}/ExpectedQuarantineDate`,\n    },\n    facility: {\n      get: `${treatmentUrl}/Facility`,\n      getFacilities: `${treatmentUrl}/Facility/Filter`,\n      create: `${treatmentUrl}/Facility/`,\n      update: `${treatmentUrl}/Facility/`,\n      delete: `${treatmentUrl}/Facility/`,\n      transfer: `${treatmentUrl}/Facility/Transfer`,\n      undo: `${treatmentUrl}/Facility/Recall`,\n      getDetail: `${treatmentUrl}/Facility/`,\n      getCompleted: `${treatmentUrl}/Facility/Completed`,\n      getTransited: `${treatmentUrl}/Facility/Transited`,\n      getOutOfProcess: `${treatmentUrl}/Facility/OutOfProcess`,\n      getTransfer: `${treatmentUrl}/Transfer`,\n      approveTransfer: `${treatmentUrl}/Transfer/Accept`,\n    },\n    hospital: {\n      getAll: `${treatmentUrl}/Hospital/Filter`,\n      create: `${treatmentUrl}/Hospital`,\n      update: `${treatmentUrl}/Hospital/`,\n      delete: `${treatmentUrl}/Hospital/`,\n      getByFacility: `${treatmentUrl}/Hospital/`,\n      createByFacility: `${treatmentUrl}/Hospital/`,\n      deleteByFacility: `${treatmentUrl}/Hospital/`,\n    },\n    quarantineList: {\n      get: `${treatmentUrl}/QuarantineList`,\n      complete: `${treatmentUrl}/QuarantineList/Complete`,\n      transit: `${treatmentUrl}/QuarantineList/Transit`,\n      outOfProcess: `${treatmentUrl}/QuarantineList/OutOfProcess`,\n    },\n    visit: {\n      get: `${treatmentUrl}/Visit/`,\n      create: `${treatmentUrl}/Visit`,\n      update: `${treatmentUrl}/Visit`,\n      complete: `${treatmentUrl}/Visit/Completed`,\n    },\n    waitingList: {\n      get: `${treatmentUrl}/WaitingList/AlreadyInWaitingList`,\n      getByFacility: `${treatmentUrl}/WaitingList`,\n      create: `${treatmentUrl}/WaitingList`,\n      approve: `${treatmentUrl}/WaitingList/Approve`,\n    },\n    profileList: {\n      get: `${treatmentUrl}/ProfileList/Filter`,\n      create: `${treatmentUrl}/ProfileList`,\n      createNewProfile: `${treatmentUrl}/ProfileList/Profile`,\n    },\n  },\n  excelCategories: {\n    get: `${reportUrl}/Category`,\n    create: `${reportUrl}/Category`,\n    update: `${reportUrl}/Category`,\n    delete: `${reportUrl}/Category/`,\n  },\n  quickTest: {\n    get: (id) => `${examinationUrl}/QuickTests/${id || ''}`,\n    create: `${examinationUrl}/QuickTests`,\n    update: `${examinationUrl}/QuickTests`,\n    updateByAdmin: `${examinationUrl}/QuickTests/AdminUpdate`,\n    delete: (id) => `${examinationUrl}/QuickTests?id=${id}`,\n    deleteByAdmin: (id) => `${examinationUrl}/QuickTests/AdminDelete?id=${id}`,\n    assign: `${examinationUrl}/QuickTests/Assign`,\n    publish: `${examinationUrl}/QuickTests/Publish`,\n    recovery: (id) => `${examinationUrl}/QuickTests/RecoverDeleted?id=${id}`,\n    changeProfile: `${examinationUrl}/QuickTests/ChangeProfile`,\n    createWithProfile: `${examinationUrl}/QuickTests/CreateWithProfile`,\n    createBatch: `${examinationUrl}/QuickTests/CreateBatch`,\n    createBatchProfile: `${examinationUrl}/QuickTests/CreateBatch`,\n    createBatchWithProfile: `${examinationUrl}/QuickTests/CreateBatchWithProfile`,\n    getDeleted: `${examinationUrl}/QuickTests/GetDeleted`,\n    getPositiveQuickTests: `${examinationUrl}/QuickTests/QuickTestPositive`,\n    getQuickTestsByUnitType: `${examinationUrl}/QuickTests/FilterByUnitType`,\n    getQuickTestsByManagementUnit: `${examinationUrl}/QuickTests/FilterByManagementUnits`,\n    importJson: `${examinationUrl}/ImportJson/ImportQuickTestJson`,\n  },\n  immunization: {\n    create: `${profileUrl}/Immunization`,\n    update: `${profileUrl}/Immunization`,\n  },\n  underlyingDiseases: {\n    get: `${profileUrl}/Health`,\n    create: `${profileUrl}/Health`,\n    delete: `${profileUrl}/Health`,\n  },\n  infectiousDiseases: {\n    get: `${profileUrl}/InfectiousDiseaseHistory`,\n    GetPHRAndCheckPositive: `${profileUrl}/InfectiousDiseaseHistory/GetPHRAndCheckPositive`,\n  },\n  importPcrExamination: {\n    create: `${examinationUrl}/ImportJson/ImportExamJsonV2`,\n  },\n  injectedPatient: {\n    get: `${healthDeclaration}/ProfileInformation/GetWithProfileHealthDeclaration`,\n    getById: `${healthDeclaration}/HealthDeclaration`,\n    importExcel: `${healthDeclaration}/HealthDeclaration/ImportByExcel`,\n    exportExcel: `${healthDeclaration}/ProfileInformation/ExportWithHealthDeclaration`,\n    delete: `${healthDeclaration}/HealthDeclaration`,\n    updateQuarantineAddress: `${healthDeclaration}/HealthDeclaration`,\n  },\n  infectiousDiseaseHistories: {\n    get: `${profileUrl}/InfectiousDiseaseHistory`,\n    getLog: `${profileUrl}/InfectiousDiseaseHistoryLog`,\n    checkPositive: `${profileUrl}/InfectiousDiseaseHistory/GetPHRAndCheckPositive`,\n  },\n\n};\n\nexport default apiLinks;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}