{"ast":null,"code":"import { treatmentPaging } from 'app/utils/helpers';\nimport types from '../actions/types';\nconst INITIAL_STATE = {\n  employeeList: [],\n  getEmployeeListLoading: false,\n  employeeByToken: treatmentPaging,\n  getEmployeeTokenLoading: false,\n  createEmployeeLoading: false,\n  updateEmployeeByIdLoading: false,\n  updateEmployeeByTokenLoading: false,\n  deleteEmployeeLoading: false\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.GET_EMPLOYEE_LIST_REQUEST:\n      {\n        return {\n          ...state,\n          getEmployeeListLoading: true\n        };\n      }\n    case types.GET_EMPLOYEE_LIST_SUCCESS:\n      {\n        return {\n          ...state,\n          employeeList: action.payload,\n          getEmployeeListLoading: false\n        };\n      }\n    case types.GET_EMPLOYEE_LIST_FAILURE:\n      {\n        return {\n          ...state,\n          getEmployeeListLoading: false\n        };\n      }\n    case types.GET_EMPLOYEE_BY_TOKEN_REQUEST:\n      {\n        return {\n          ...state,\n          getEmployeeTokenLoading: true\n        };\n      }\n    case types.GET_EMPLOYEE_BY_TOKEN_SUCCESS:\n      {\n        return {\n          ...state,\n          employeeByToken: action.payload,\n          getEmployeeTokenLoading: false\n        };\n      }\n    case types.GET_EMPLOYEE_BY_TOKEN_FAILURE:\n      {\n        return {\n          ...state,\n          getEmployeeTokenLoading: false\n        };\n      }\n    case types.CREATE_EMPLOYEE_REQUEST:\n      {\n        return {\n          ...state,\n          createEmployeeLoading: true\n        };\n      }\n    case types.CREATE_EMPLOYEE_SUCCESS:\n    case types.CREATE_EMPLOYEE_FAILURE:\n      {\n        return {\n          ...state,\n          createEmployeeLoading: false\n        };\n      }\n    case types.UPDATE_EMPLOYEE_BY_ID_REQUEST:\n      {\n        return {\n          ...state,\n          updateEmployeeByIdLoading: true\n        };\n      }\n    case types.UPDATE_EMPLOYEE_BY_ID_SUCCESS:\n    case types.UPDATE_EMPLOYEE_BY_ID_FAILURE:\n      {\n        return {\n          ...state,\n          updateEmployeeByIdLoading: false\n        };\n      }\n    case types.UPDATE_EMPLOYEE_BY_TOKEN_REQUEST:\n      {\n        return {\n          ...state,\n          updateEmployeeByTokenLoading: true\n        };\n      }\n    case types.UPDATE_EMPLOYEE_BY_TOKEN_SUCCESS:\n    case types.UPDATE_EMPLOYEE_BY_TOKEN_FAILURE:\n      {\n        return {\n          ...state,\n          updateEmployeeByTokenLoading: false\n        };\n      }\n    case types.DELETE_EMPLOYEE_REQUEST:\n      {\n        return {\n          ...state,\n          deleteEmployeeLoading: true\n        };\n      }\n    case types.DELETE_EMPLOYEE_SUCCESS:\n    case types.DELETE_EMPLOYEE_FAILURE:\n      {\n        return {\n          ...state,\n          deleteEmployeeLoading: false\n        };\n      }\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["treatmentPaging","types","INITIAL_STATE","employeeList","getEmployeeListLoading","employeeByToken","getEmployeeTokenLoading","createEmployeeLoading","updateEmployeeByIdLoading","updateEmployeeByTokenLoading","deleteEmployeeLoading","state","arguments","length","undefined","action","type","GET_EMPLOYEE_LIST_REQUEST","GET_EMPLOYEE_LIST_SUCCESS","payload","GET_EMPLOYEE_LIST_FAILURE","GET_EMPLOYEE_BY_TOKEN_REQUEST","GET_EMPLOYEE_BY_TOKEN_SUCCESS","GET_EMPLOYEE_BY_TOKEN_FAILURE","CREATE_EMPLOYEE_REQUEST","CREATE_EMPLOYEE_SUCCESS","CREATE_EMPLOYEE_FAILURE","UPDATE_EMPLOYEE_BY_ID_REQUEST","UPDATE_EMPLOYEE_BY_ID_SUCCESS","UPDATE_EMPLOYEE_BY_ID_FAILURE","UPDATE_EMPLOYEE_BY_TOKEN_REQUEST","UPDATE_EMPLOYEE_BY_TOKEN_SUCCESS","UPDATE_EMPLOYEE_BY_TOKEN_FAILURE","DELETE_EMPLOYEE_REQUEST","DELETE_EMPLOYEE_SUCCESS","DELETE_EMPLOYEE_FAILURE"],"sources":["H:/BAKCO/pj/cds/src/treatment/reducers/employee.js"],"sourcesContent":["import { treatmentPaging } from 'app/utils/helpers';\nimport types from '../actions/types';\n\nconst INITIAL_STATE = {\n  employeeList: [],\n  getEmployeeListLoading: false,\n  employeeByToken: treatmentPaging,\n  getEmployeeTokenLoading: false,\n  createEmployeeLoading: false,\n  updateEmployeeByIdLoading: false,\n  updateEmployeeByTokenLoading: false,\n  deleteEmployeeLoading: false,\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case types.GET_EMPLOYEE_LIST_REQUEST: {\n      return {\n        ...state,\n        getEmployeeListLoading: true,\n      };\n    }\n    case types.GET_EMPLOYEE_LIST_SUCCESS: {\n      return {\n        ...state,\n        employeeList: action.payload,\n        getEmployeeListLoading: false,\n      };\n    }\n    case types.GET_EMPLOYEE_LIST_FAILURE: {\n      return {\n        ...state,\n        getEmployeeListLoading: false,\n      };\n    }\n    case types.GET_EMPLOYEE_BY_TOKEN_REQUEST: {\n      return {\n        ...state,\n        getEmployeeTokenLoading: true,\n      };\n    }\n    case types.GET_EMPLOYEE_BY_TOKEN_SUCCESS: {\n      return {\n        ...state,\n        employeeByToken: action.payload,\n        getEmployeeTokenLoading: false,\n      };\n    }\n    case types.GET_EMPLOYEE_BY_TOKEN_FAILURE: {\n      return {\n        ...state,\n        getEmployeeTokenLoading: false,\n      };\n    }\n    case types.CREATE_EMPLOYEE_REQUEST: {\n      return {\n        ...state,\n        createEmployeeLoading: true,\n      };\n    }\n    case types.CREATE_EMPLOYEE_SUCCESS:\n    case types.CREATE_EMPLOYEE_FAILURE: {\n      return {\n        ...state,\n        createEmployeeLoading: false,\n      };\n    }\n    case types.UPDATE_EMPLOYEE_BY_ID_REQUEST: {\n      return {\n        ...state,\n        updateEmployeeByIdLoading: true,\n      };\n    }\n    case types.UPDATE_EMPLOYEE_BY_ID_SUCCESS:\n    case types.UPDATE_EMPLOYEE_BY_ID_FAILURE: {\n      return {\n        ...state,\n        updateEmployeeByIdLoading: false,\n      };\n    }\n    case types.UPDATE_EMPLOYEE_BY_TOKEN_REQUEST: {\n      return {\n        ...state,\n        updateEmployeeByTokenLoading: true,\n      };\n    }\n    case types.UPDATE_EMPLOYEE_BY_TOKEN_SUCCESS:\n    case types.UPDATE_EMPLOYEE_BY_TOKEN_FAILURE: {\n      return {\n        ...state,\n        updateEmployeeByTokenLoading: false,\n      };\n    }\n    case types.DELETE_EMPLOYEE_REQUEST: {\n      return {\n        ...state,\n        deleteEmployeeLoading: true,\n      };\n    }\n    case types.DELETE_EMPLOYEE_SUCCESS:\n    case types.DELETE_EMPLOYEE_FAILURE: {\n      return {\n        ...state,\n        deleteEmployeeLoading: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}