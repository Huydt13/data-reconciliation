{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\infection-chain\\\\components\\\\subject\\\\information\\\\form-sections\\\\InformSubjectSection.js\";\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { DataTable } from 'app/components/shared';\nimport { FiFileText, FiList } from 'react-icons/fi';\nimport EvaluateModal from 'chain/components/EvaluateModal';\nimport { Label } from 'semantic-ui-react';\nimport { getFullLocationName } from 'app/utils/helpers';\nconst columns = [{\n  Header: '#',\n  accessor: 'index'\n}, {\n  Header: 'Nhãn thông báo',\n  formatter: _ref => {\n    var _infectionTypeFromSub, _infectionTypeFromSub2;\n    let {\n      infectionTypeFromSubjectFromInvestigation\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Label, {\n      basic: true,\n      color: (_infectionTypeFromSub = infectionTypeFromSubjectFromInvestigation === null || infectionTypeFromSubjectFromInvestigation === void 0 ? void 0 : infectionTypeFromSubjectFromInvestigation.colorCode) !== null && _infectionTypeFromSub !== void 0 ? _infectionTypeFromSub : 'black',\n      content: (_infectionTypeFromSub2 = infectionTypeFromSubjectFromInvestigation === null || infectionTypeFromSubjectFromInvestigation === void 0 ? void 0 : infectionTypeFromSubjectFromInvestigation.name) !== null && _infectionTypeFromSub2 !== void 0 ? _infectionTypeFromSub2 : 'F?',\n      className: \"type-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    });\n  }\n}, {\n  Header: 'Nhãn điều tra',\n  formatter: _ref2 => {\n    var _infectionTypeFromSub3, _infectionTypeFromSub4;\n    let {\n      infectionTypeFromSubjectToInvestigation\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(Label, {\n      basic: true,\n      color: (_infectionTypeFromSub3 = infectionTypeFromSubjectToInvestigation === null || infectionTypeFromSubjectToInvestigation === void 0 ? void 0 : infectionTypeFromSubjectToInvestigation.colorCode) !== null && _infectionTypeFromSub3 !== void 0 ? _infectionTypeFromSub3 : 'black',\n      content: (_infectionTypeFromSub4 = infectionTypeFromSubjectToInvestigation === null || infectionTypeFromSubjectToInvestigation === void 0 ? void 0 : infectionTypeFromSubjectToInvestigation.name) !== null && _infectionTypeFromSub4 !== void 0 ? _infectionTypeFromSub4 : 'F?',\n      className: \"type-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    });\n  }\n}, {\n  Header: 'Nơi tiếp xúc',\n  formatter: getFullLocationName\n}, {\n  Header: 'Từ thời gian',\n  formatter: _ref3 => {\n    let {\n      fromTime\n    } = _ref3;\n    return moment(fromTime).format('HH:mm | DD-MM');\n  }\n}, {\n  Header: 'Đến thời gian',\n  formatter: _ref4 => {\n    let {\n      toTime\n    } = _ref4;\n    return moment(toTime).format('HH:mm | DD-MM');\n  }\n}, {\n  Header: 'Người chỉ điểm',\n  formatter: _ref5 => {\n    var _subjectFrom$profileD;\n    let {\n      subjectFrom\n    } = _ref5;\n    return subjectFrom === null || subjectFrom === void 0 ? void 0 : (_subjectFrom$profileD = subjectFrom.profileDetail) === null || _subjectFrom$profileD === void 0 ? void 0 : _subjectFrom$profileD.fullName;\n  }\n}];\nconst InformSubjectSection = _ref6 => {\n  let {\n    onPaginationChange,\n    onRefresh: onRefreshProp\n  } = _ref6;\n  const [selected, setSelected] = useState({});\n  const {\n    contactData: {\n      data,\n      totalPages\n    },\n    getContactsBySubjectLoading\n  } = useSelector(s => s.chain);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataTable, {\n    title: \"Th\\xF4ng tin ch\\u1EC9 \\u0111i\\u1EC3m\",\n    columns: columns,\n    data: data.map((d, i) => ({\n      ...d,\n      index: i + 1\n    })),\n    pageCount: totalPages,\n    loading: getContactsBySubjectLoading,\n    onPaginationChange: onPaginationChange,\n    actions: [{\n      icon: /*#__PURE__*/React.createElement(FiList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 19\n        }\n      }),\n      title: 'Phiếu đánh giá tiếp xúc',\n      color: 'violet',\n      onClick: setSelected\n    }, {\n      icon: /*#__PURE__*/React.createElement(FiFileText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 19\n        }\n      }),\n      title: 'Hồ sơ người chỉ điểm',\n      color: 'blue',\n      onClick: _ref7 => {\n        let {\n          subjectFrom\n        } = _ref7;\n        return window.open(`/profile/${subjectFrom === null || subjectFrom === void 0 ? void 0 : subjectFrom.profileId}`, '_blank');\n      },\n      hidden: _ref8 => {\n        let {\n          subjectFrom\n        } = _ref8;\n        return !(subjectFrom === null || subjectFrom === void 0 ? void 0 : subjectFrom.profileId);\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(EvaluateModal, {\n    data: selected,\n    onClose: () => setSelected({}),\n    onRefresh: onRefreshProp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }));\n};\nInformSubjectSection.propTypes = {\n  onPaginationChange: PropTypes.func.isRequired,\n  onRefresh: PropTypes.func.isRequired\n};\nexport default InformSubjectSection;","map":{"version":3,"names":["React","useState","moment","PropTypes","useSelector","DataTable","FiFileText","FiList","EvaluateModal","Label","getFullLocationName","columns","Header","accessor","formatter","_ref","_infectionTypeFromSub","_infectionTypeFromSub2","infectionTypeFromSubjectFromInvestigation","createElement","basic","color","colorCode","content","name","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","_ref2","_infectionTypeFromSub3","_infectionTypeFromSub4","infectionTypeFromSubjectToInvestigation","_ref3","fromTime","format","_ref4","toTime","_ref5","_subjectFrom$profileD","subjectFrom","profileDetail","fullName","InformSubjectSection","_ref6","onPaginationChange","onRefresh","onRefreshProp","selected","setSelected","contactData","data","totalPages","getContactsBySubjectLoading","s","chain","title","map","d","i","index","pageCount","loading","actions","icon","onClick","_ref7","window","open","profileId","hidden","_ref8","onClose","propTypes","func","isRequired"],"sources":["H:/BAKCO/pj/data reconciliation/src/infection-chain/components/subject/information/form-sections/InformSubjectSection.js"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\n\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\nimport { useSelector } from 'react-redux';\n\nimport { DataTable } from 'app/components/shared';\nimport { FiFileText, FiList } from 'react-icons/fi';\n\nimport EvaluateModal from 'chain/components/EvaluateModal';\nimport { Label } from 'semantic-ui-react';\nimport { getFullLocationName } from 'app/utils/helpers';\n\nconst columns = [\n  {\n    Header: '#',\n    accessor: 'index',\n  },\n  {\n    Header: 'Nhãn thông báo',\n    formatter: ({ infectionTypeFromSubjectFromInvestigation }) => (\n      <Label\n        basic\n        color={infectionTypeFromSubjectFromInvestigation?.colorCode ?? 'black'}\n        content={infectionTypeFromSubjectFromInvestigation?.name ?? 'F?'}\n        className=\"type-label\"\n      />\n    ),\n  },\n  {\n    Header: 'Nhãn điều tra',\n    formatter: ({ infectionTypeFromSubjectToInvestigation }) => (\n      <Label\n        basic\n        color={infectionTypeFromSubjectToInvestigation?.colorCode ?? 'black'}\n        content={infectionTypeFromSubjectToInvestigation?.name ?? 'F?'}\n        className=\"type-label\"\n      />\n    ),\n  },\n  {\n    Header: 'Nơi tiếp xúc',\n    formatter: getFullLocationName,\n  },\n  {\n    Header: 'Từ thời gian',\n    formatter: ({ fromTime }) => moment(fromTime).format('HH:mm | DD-MM'),\n  },\n  {\n    Header: 'Đến thời gian',\n    formatter: ({ toTime }) => moment(toTime).format('HH:mm | DD-MM'),\n  },\n  {\n    Header: 'Người chỉ điểm',\n    formatter: ({ subjectFrom }) => subjectFrom?.profileDetail?.fullName,\n  },\n];\nconst InformSubjectSection = ({\n  onPaginationChange,\n  onRefresh: onRefreshProp,\n}) => {\n  const [selected, setSelected] = useState({});\n  const {\n    contactData: { data, totalPages },\n    getContactsBySubjectLoading,\n  } = useSelector((s) => s.chain);\n  return (\n    <div>\n      <DataTable\n        title=\"Thông tin chỉ điểm\"\n        columns={columns}\n        data={data.map((d, i) => ({ ...d, index: i + 1 }))}\n        pageCount={totalPages}\n        loading={getContactsBySubjectLoading}\n        onPaginationChange={onPaginationChange}\n        actions={[\n          {\n            icon: <FiList />,\n            title: 'Phiếu đánh giá tiếp xúc',\n            color: 'violet',\n            onClick: setSelected,\n          },\n          {\n            icon: <FiFileText />,\n            title: 'Hồ sơ người chỉ điểm',\n            color: 'blue',\n            onClick: ({ subjectFrom }) =>\n              window.open(`/profile/${subjectFrom?.profileId}`, '_blank'),\n            hidden: ({ subjectFrom }) => !subjectFrom?.profileId,\n          },\n        ]}\n      />\n      <EvaluateModal\n        data={selected}\n        onClose={() => setSelected({})}\n        onRefresh={onRefreshProp}\n      />\n    </div>\n  );\n};\n\nInformSubjectSection.propTypes = {\n  onPaginationChange: PropTypes.func.isRequired,\n  onRefresh: PropTypes.func.isRequired,\n};\n\nexport default InformSubjectSection;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAElC,SAASC,WAAW,QAAQ,aAAa;AAEzC,SAASC,SAAS,QAAQ,uBAAuB;AACjD,SAASC,UAAU,EAAEC,MAAM,QAAQ,gBAAgB;AAEnD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,KAAK,QAAQ,mBAAmB;AACzC,SAASC,mBAAmB,QAAQ,mBAAmB;AAEvD,MAAMC,OAAO,GAAG,CACd;EACEC,MAAM,EAAE,GAAG;EACXC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,MAAM,EAAE,gBAAgB;EACxBE,SAAS,EAAEC,IAAA;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IAAA,IAAC;MAAEC;IAA0C,CAAC,GAAAH,IAAA;IAAA,oBACvDf,KAAA,CAAAmB,aAAA,CAACV,KAAK;MACJW,KAAK;MACLC,KAAK,GAAAL,qBAAA,GAAEE,yCAAyC,aAAzCA,yCAAyC,uBAAzCA,yCAAyC,CAAEI,SAAS,cAAAN,qBAAA,cAAAA,qBAAA,GAAI,OAAQ;MACvEO,OAAO,GAAAN,sBAAA,GAAEC,yCAAyC,aAAzCA,yCAAyC,uBAAzCA,yCAAyC,CAAEM,IAAI,cAAAP,sBAAA,cAAAA,sBAAA,GAAI,IAAK;MACjEQ,SAAS,EAAC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EACtB;EAAA;AAEN,CAAC,EACD;EACEnB,MAAM,EAAE,eAAe;EACvBE,SAAS,EAAEkB,KAAA;IAAA,IAAAC,sBAAA,EAAAC,sBAAA;IAAA,IAAC;MAAEC;IAAwC,CAAC,GAAAH,KAAA;IAAA,oBACrDhC,KAAA,CAAAmB,aAAA,CAACV,KAAK;MACJW,KAAK;MACLC,KAAK,GAAAY,sBAAA,GAAEE,uCAAuC,aAAvCA,uCAAuC,uBAAvCA,uCAAuC,CAAEb,SAAS,cAAAW,sBAAA,cAAAA,sBAAA,GAAI,OAAQ;MACrEV,OAAO,GAAAW,sBAAA,GAAEC,uCAAuC,aAAvCA,uCAAuC,uBAAvCA,uCAAuC,CAAEX,IAAI,cAAAU,sBAAA,cAAAA,sBAAA,GAAI,IAAK;MAC/DT,SAAS,EAAC,YAAY;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,EACtB;EAAA;AAEN,CAAC,EACD;EACEnB,MAAM,EAAE,cAAc;EACtBE,SAAS,EAAEJ;AACb,CAAC,EACD;EACEE,MAAM,EAAE,cAAc;EACtBE,SAAS,EAAEsB,KAAA;IAAA,IAAC;MAAEC;IAAS,CAAC,GAAAD,KAAA;IAAA,OAAKlC,MAAM,CAACmC,QAAQ,CAAC,CAACC,MAAM,CAAC,eAAe,CAAC;EAAA;AACvE,CAAC,EACD;EACE1B,MAAM,EAAE,eAAe;EACvBE,SAAS,EAAEyB,KAAA;IAAA,IAAC;MAAEC;IAAO,CAAC,GAAAD,KAAA;IAAA,OAAKrC,MAAM,CAACsC,MAAM,CAAC,CAACF,MAAM,CAAC,eAAe,CAAC;EAAA;AACnE,CAAC,EACD;EACE1B,MAAM,EAAE,gBAAgB;EACxBE,SAAS,EAAE2B,KAAA;IAAA,IAAAC,qBAAA;IAAA,IAAC;MAAEC;IAAY,CAAC,GAAAF,KAAA;IAAA,OAAKE,WAAW,aAAXA,WAAW,wBAAAD,qBAAA,GAAXC,WAAW,CAAEC,aAAa,cAAAF,qBAAA,uBAA1BA,qBAAA,CAA4BG,QAAQ;EAAA;AACtE,CAAC,CACF;AACD,MAAMC,oBAAoB,GAAGC,KAAA,IAGvB;EAAA,IAHwB;IAC5BC,kBAAkB;IAClBC,SAAS,EAAEC;EACb,CAAC,GAAAH,KAAA;EACC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGnD,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM;IACJoD,WAAW,EAAE;MAAEC,IAAI;MAAEC;IAAW,CAAC;IACjCC;EACF,CAAC,GAAGpD,WAAW,CAAEqD,CAAC,IAAKA,CAAC,CAACC,KAAK,CAAC;EAC/B,oBACE1D,KAAA,CAAAmB,aAAA;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE/B,KAAA,CAAAmB,aAAA,CAACd,SAAS;IACRsD,KAAK,EAAC,sCAAoB;IAC1BhD,OAAO,EAAEA,OAAQ;IACjB2C,IAAI,EAAEA,IAAI,CAACM,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,MAAM;MAAE,GAAGD,CAAC;MAAEE,KAAK,EAAED,CAAC,GAAG;IAAE,CAAC,CAAC,CAAE;IACnDE,SAAS,EAAET,UAAW;IACtBU,OAAO,EAAET,2BAA4B;IACrCR,kBAAkB,EAAEA,kBAAmB;IACvCkB,OAAO,EAAE,CACP;MACEC,IAAI,eAAEnE,KAAA,CAAAmB,aAAA,CAACZ,MAAM;QAAAmB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,EAAG;MAChB4B,KAAK,EAAE,yBAAyB;MAChCtC,KAAK,EAAE,QAAQ;MACf+C,OAAO,EAAEhB;IACX,CAAC,EACD;MACEe,IAAI,eAAEnE,KAAA,CAAAmB,aAAA,CAACb,UAAU;QAAAoB,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,EAAG;MACpB4B,KAAK,EAAE,sBAAsB;MAC7BtC,KAAK,EAAE,MAAM;MACb+C,OAAO,EAAEC,KAAA;QAAA,IAAC;UAAE1B;QAAY,CAAC,GAAA0B,KAAA;QAAA,OACvBC,MAAM,CAACC,IAAI,CAAE,YAAW5B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE6B,SAAU,EAAC,EAAE,QAAQ,CAAC;MAAA;MAC7DC,MAAM,EAAEC,KAAA;QAAA,IAAC;UAAE/B;QAAY,CAAC,GAAA+B,KAAA;QAAA,OAAK,EAAC/B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE6B,SAAS;MAAA;IACtD,CAAC,CACD;IAAA9C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACF,eACF/B,KAAA,CAAAmB,aAAA,CAACX,aAAa;IACZ8C,IAAI,EAAEH,QAAS;IACfwB,OAAO,EAAEA,CAAA,KAAMvB,WAAW,CAAC,CAAC,CAAC,CAAE;IAC/BH,SAAS,EAAEC,aAAc;IAAAxB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACzB,CACE;AAEV,CAAC;AAEDe,oBAAoB,CAAC8B,SAAS,GAAG;EAC/B5B,kBAAkB,EAAE7C,SAAS,CAAC0E,IAAI,CAACC,UAAU;EAC7C7B,SAAS,EAAE9C,SAAS,CAAC0E,IAAI,CAACC;AAC5B,CAAC;AAED,eAAehC,oBAAoB"},"metadata":{},"sourceType":"module"}