{"ast":null,"code":"import types from 'contact/actions/types';\nconst INITIAL_STATE = {\n  contactLocationList: [],\n  loadingGetContactLocation: false,\n  loadingCreateContactLocation: false,\n  loadingUpdateContactLocation: false,\n  loadingDeleteContactLocation: false,\n  contactVehicleList: [],\n  loadingGetContactVehicle: false,\n  loadingCreateContactVehicle: false,\n  loadingUpdateContactVehicle: false,\n  loadingDeleteContactVehicle: false,\n  criteriaList: [],\n  criteriaListByInfectionType: [],\n  loadingGetCriteria: false,\n  fromAskingData: {},\n  toAskingData: {},\n  loadingGetFromAsking: false,\n  loadingGetToAsking: false,\n  loadingUpdateAsking: false,\n  askingResult: {},\n  loadingGetAskingResult: false,\n  searchContactLocationList: [],\n  getSearchContactLocationLoading: false,\n  searchAirplaneList: [],\n  getSearchAirplaneLoading: false,\n  searchOtherVehicleList: [],\n  getSearchOtherVehicleLoading: false,\n  outbreakLocationList: [],\n  getOutbreakLocationLoading: false,\n  updateEstateLoading: false,\n  createLocationLoading: false\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.GET_CONTACT_LOCATIONS_REQUEST:\n      return {\n        ...state,\n        loadingGetContactLocation: true\n      };\n    case types.GET_CONTACT_LOCATIONS_SUCCESS:\n      return {\n        ...state,\n        contactLocationList: action.payload,\n        loadingGetContactLocation: false\n      };\n    case types.GET_CONTACT_LOCATIONS_FAILURE:\n      return {\n        ...state,\n        loadingGetContactLocation: false\n      };\n    case types.CREATE_CONTACT_LOCATION_REQUEST:\n      return {\n        ...state,\n        loadingCreateContactLocation: true\n      };\n    case types.CREATE_CONTACT_LOCATION_SUCCESS:\n    case types.CREATE_CONTACT_LOCATION_FAILURE:\n      return {\n        ...state,\n        loadingCreateContactLocation: false\n      };\n    case types.UPDATE_CONTACT_LOCATION_REQUEST:\n      return {\n        ...state,\n        loadingUpdateContactLocation: true\n      };\n    case types.UPDATE_CONTACT_LOCATION_SUCCESS:\n    case types.UPDATE_CONTACT_LOCATION_FAILURE:\n      return {\n        ...state,\n        loadingUpdateContactLocation: false\n      };\n    case types.DELETE_CONTACT_LOCATION_REQUEST:\n      return {\n        ...state,\n        loadingDeleteContactLocation: true\n      };\n    case types.DELETE_CONTACT_LOCATION_SUCCESS:\n    case types.DELETE_CONTACT_LOCATION_FAILURE:\n      return {\n        ...state,\n        loadingDeleteContactLocation: false\n      };\n    case types.GET_CONTACT_VEHICLES_REQUEST:\n      return {\n        ...state,\n        loadingGetContactVehicle: true\n      };\n    case types.GET_CONTACT_VEHICLES_SUCCESS:\n      return {\n        ...state,\n        contactVehicleList: action.payload,\n        loadingGetContactVehicle: false\n      };\n    case types.GET_CONTACT_VEHICLES_FAILURE:\n      return {\n        ...state,\n        loadingGetContactVehicle: false\n      };\n    case types.GET_ASKING_RESULT_REQUEST:\n      return {\n        ...state,\n        loadingGetAskingResult: true\n      };\n    case types.GET_ASKING_RESULT_SUCCESS:\n      return {\n        ...state,\n        askingResult: action.payload,\n        loadingGetAskingResult: false\n      };\n    case types.GET_ASKING_RESULT_FAILURE:\n      return {\n        ...state,\n        loadingGetAskingResult: false\n      };\n    case types.GET_CRITERIAS_REQUEST:\n      return {\n        ...state,\n        loadingGetCriteria: true\n      };\n    case types.GET_CRITERIAS_SUCCESS:\n      {\n        const response = action.payload;\n        const criteriaList = [];\n        response.forEach(element => {\n          const {\n            criterias\n          } = element;\n          criterias.forEach(e => {\n            e.id = `${e.id}/${element.id}`;\n          });\n          criteriaList.push(...criterias);\n        });\n        return {\n          ...state,\n          criteriaList,\n          loadingGetCriteria: false\n        };\n      }\n    case types.GET_CRITERIAS_FAILURE:\n      return {\n        ...state,\n        loadingGetCriteria: false\n      };\n    case types.GET_CRITERIAS_BY_INFECTION_TYPE_REQUEST:\n      return {\n        ...state,\n        loadingGetCriteria: true\n      };\n    case types.GET_CRITERIAS_BY_INFECTION_TYPE_SUCCESS:\n      {\n        const response = action.payload;\n        const criteriaListByInfectionType = [];\n        response.forEach(element => {\n          const {\n            criterias\n          } = element;\n          criterias.forEach(e => {\n            e.id = `${e.id}/${element.id}`;\n          });\n          criteriaListByInfectionType.push(...criterias);\n        });\n        return {\n          ...state,\n          criteriaListByInfectionType,\n          loadingGetCriteria: false\n        };\n      }\n    case types.GET_CRITERIAS_BY_INFECTION_TYPE_FAILURE:\n      return {\n        ...state,\n        loadingGetCriteria: false\n      };\n    case types.GET_ASKING_REQUEST:\n      {\n        const isAskingSubjectFrom = action.payload;\n        return {\n          ...state,\n          loadingGetFromAsking: isAskingSubjectFrom ? true : state.loadingGetFromAsking,\n          loadingGetToAsking: !isAskingSubjectFrom ? true : state.loadingGetToAsking,\n          fromAskingData: isAskingSubjectFrom ? {} : state.fromAskingData,\n          toAskingData: !isAskingSubjectFrom ? {} : state.toAskingData\n        };\n      }\n    case types.GET_ASKING_SUCCESS:\n      {\n        const {\n          response,\n          isAskingSubjectFrom\n        } = action.payload;\n        return {\n          ...state,\n          fromAskingData: isAskingSubjectFrom ? response : state.fromAskingData,\n          toAskingData: !isAskingSubjectFrom ? response : state.toAskingData,\n          loadingGetFromAsking: false,\n          loadingGetToAsking: false\n        };\n      }\n    case types.GET_ASKING_FAILURE:\n      return {\n        ...state,\n        loadingGetFromAsking: false,\n        loadingGetToAsking: false\n      };\n    case types.UPDATE_ASKING_REQUEST:\n      return {\n        ...state,\n        loadingUpdateAsking: true\n      };\n    case types.UPDATE_ASKING_SUCCESS:\n    case types.UPDATE_ASKING_FAILURE:\n      return {\n        ...state,\n        loadingUpdateAsking: false\n      };\n    case types.CREATE_CONTACT_VEHICLE_REQUEST:\n      return {\n        ...state,\n        loadingCreateContactVehicle: true\n      };\n    case types.CREATE_CONTACT_VEHICLE_SUCCESS:\n    case types.CREATE_CONTACT_VEHICLE_FAILURE:\n      return {\n        ...state,\n        loadingCreateContactVehicle: false\n      };\n    case types.UPDATE_CONTACT_VEHICLE_REQUEST:\n      return {\n        ...state,\n        loadingUpdateContactVehicle: true\n      };\n    case types.UPDATE_CONTACT_VEHICLE_SUCCESS:\n    case types.UPDATE_CONTACT_VEHICLE_FAILURE:\n      return {\n        ...state,\n        loadingUpdateContactVehicle: false\n      };\n    case types.DELETE_CONTACT_VEHICLE_REQUEST:\n      return {\n        ...state,\n        loadingDeleteContactVehicle: true\n      };\n    case types.DELETE_CONTACT_VEHICLE_SUCCESS:\n    case types.DELETE_CONTACT_VEHICLE_FAILURE:\n      return {\n        ...state,\n        loadingDeleteContactVehicle: false\n      };\n    case types.UPDATE_ESTATE_REQUEST:\n      return {\n        ...state,\n        updateEstateLoading: true\n      };\n    case types.UPDATE_ESTATE_SUCCESS:\n    case types.UPDATE_ESTATE_FAILURE:\n      return {\n        ...state,\n        updateEstateLoading: false\n      };\n    case types.SEARCH_LOCATION_REQUEST:\n      return {\n        ...state,\n        getSearchContactLocationLoading: true\n      };\n    case types.SEARCH_LOCATION_SUCCESS:\n      return {\n        ...state,\n        searchContactLocationList: action.payload,\n        getSearchContactLocationLoading: false\n      };\n    case types.SEARCH_LOCATION_FAILURE:\n      return {\n        ...state,\n        getSearchContactLocationLoading: false\n      };\n    case types.SEARCH_AIRPLANE_REQUEST:\n      return {\n        ...state,\n        getSearchAirplaneLoading: true\n      };\n    case types.SEARCH_AIRPLANE_SUCCESS:\n      return {\n        ...state,\n        searchAirplaneList: action.payload,\n        getSearchAirplaneLoading: false\n      };\n    case types.SEARCH_AIRPLANE_FAILURE:\n      return {\n        ...state,\n        getSearchAirplaneLoading: false\n      };\n    case types.SEARCH_OTHER_VEHICLE_REQUEST:\n      return {\n        ...state,\n        getSearchOtherVehicleLoading: true\n      };\n    case types.SEARCH_OTHER_VEHICLE_SUCCESS:\n      return {\n        ...state,\n        searchOtherVehicleList: action.payload,\n        getSearchOtherVehicleLoading: false\n      };\n    case types.SEARCH_OTHER_VEHICLE_FAILURE:\n      return {\n        ...state,\n        getSearchOtherVehicleLoading: false\n      };\n    case types.GET_OUTBREAK_LOCATION_REQUEST:\n      return {\n        ...state,\n        getOutbreakLocationLoading: true\n      };\n    case types.GET_OUTBREAK_LOCATION_SUCCESS:\n      return {\n        ...state,\n        outbreakLocationList: action.payload,\n        getOutbreakLocationLoading: false\n      };\n    case types.GET_OUTBREAK_LOCATION_FAILURE:\n      return {\n        ...state,\n        getOutbreakLocationLoading: false\n      };\n    case types.CREATE_LOCATION_REQUEST:\n      return {\n        ...state,\n        createLocationLoading: true\n      };\n    case types.CREATE_LOCATION_SUCCESS:\n    case types.CREATE_LOCATION_FAILURE:\n      return {\n        ...state,\n        createLocationLoading: false\n      };\n    case types.CLEAR_ASKING:\n      {\n        return {\n          ...state,\n          fromAskingData: {}\n        };\n      }\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["types","INITIAL_STATE","contactLocationList","loadingGetContactLocation","loadingCreateContactLocation","loadingUpdateContactLocation","loadingDeleteContactLocation","contactVehicleList","loadingGetContactVehicle","loadingCreateContactVehicle","loadingUpdateContactVehicle","loadingDeleteContactVehicle","criteriaList","criteriaListByInfectionType","loadingGetCriteria","fromAskingData","toAskingData","loadingGetFromAsking","loadingGetToAsking","loadingUpdateAsking","askingResult","loadingGetAskingResult","searchContactLocationList","getSearchContactLocationLoading","searchAirplaneList","getSearchAirplaneLoading","searchOtherVehicleList","getSearchOtherVehicleLoading","outbreakLocationList","getOutbreakLocationLoading","updateEstateLoading","createLocationLoading","state","arguments","length","undefined","action","type","GET_CONTACT_LOCATIONS_REQUEST","GET_CONTACT_LOCATIONS_SUCCESS","payload","GET_CONTACT_LOCATIONS_FAILURE","CREATE_CONTACT_LOCATION_REQUEST","CREATE_CONTACT_LOCATION_SUCCESS","CREATE_CONTACT_LOCATION_FAILURE","UPDATE_CONTACT_LOCATION_REQUEST","UPDATE_CONTACT_LOCATION_SUCCESS","UPDATE_CONTACT_LOCATION_FAILURE","DELETE_CONTACT_LOCATION_REQUEST","DELETE_CONTACT_LOCATION_SUCCESS","DELETE_CONTACT_LOCATION_FAILURE","GET_CONTACT_VEHICLES_REQUEST","GET_CONTACT_VEHICLES_SUCCESS","GET_CONTACT_VEHICLES_FAILURE","GET_ASKING_RESULT_REQUEST","GET_ASKING_RESULT_SUCCESS","GET_ASKING_RESULT_FAILURE","GET_CRITERIAS_REQUEST","GET_CRITERIAS_SUCCESS","response","forEach","element","criterias","e","id","push","GET_CRITERIAS_FAILURE","GET_CRITERIAS_BY_INFECTION_TYPE_REQUEST","GET_CRITERIAS_BY_INFECTION_TYPE_SUCCESS","GET_CRITERIAS_BY_INFECTION_TYPE_FAILURE","GET_ASKING_REQUEST","isAskingSubjectFrom","GET_ASKING_SUCCESS","GET_ASKING_FAILURE","UPDATE_ASKING_REQUEST","UPDATE_ASKING_SUCCESS","UPDATE_ASKING_FAILURE","CREATE_CONTACT_VEHICLE_REQUEST","CREATE_CONTACT_VEHICLE_SUCCESS","CREATE_CONTACT_VEHICLE_FAILURE","UPDATE_CONTACT_VEHICLE_REQUEST","UPDATE_CONTACT_VEHICLE_SUCCESS","UPDATE_CONTACT_VEHICLE_FAILURE","DELETE_CONTACT_VEHICLE_REQUEST","DELETE_CONTACT_VEHICLE_SUCCESS","DELETE_CONTACT_VEHICLE_FAILURE","UPDATE_ESTATE_REQUEST","UPDATE_ESTATE_SUCCESS","UPDATE_ESTATE_FAILURE","SEARCH_LOCATION_REQUEST","SEARCH_LOCATION_SUCCESS","SEARCH_LOCATION_FAILURE","SEARCH_AIRPLANE_REQUEST","SEARCH_AIRPLANE_SUCCESS","SEARCH_AIRPLANE_FAILURE","SEARCH_OTHER_VEHICLE_REQUEST","SEARCH_OTHER_VEHICLE_SUCCESS","SEARCH_OTHER_VEHICLE_FAILURE","GET_OUTBREAK_LOCATION_REQUEST","GET_OUTBREAK_LOCATION_SUCCESS","GET_OUTBREAK_LOCATION_FAILURE","CREATE_LOCATION_REQUEST","CREATE_LOCATION_SUCCESS","CREATE_LOCATION_FAILURE","CLEAR_ASKING"],"sources":["H:/BAKCO/pj/data reconciliation/src/contact/reducers/contact.js"],"sourcesContent":["import types from 'contact/actions/types';\n\nconst INITIAL_STATE = {\n  contactLocationList: [],\n  loadingGetContactLocation: false,\n  loadingCreateContactLocation: false,\n  loadingUpdateContactLocation: false,\n  loadingDeleteContactLocation: false,\n\n  contactVehicleList: [],\n  loadingGetContactVehicle: false,\n  loadingCreateContactVehicle: false,\n  loadingUpdateContactVehicle: false,\n  loadingDeleteContactVehicle: false,\n\n  criteriaList: [],\n  criteriaListByInfectionType: [],\n  loadingGetCriteria: false,\n\n  fromAskingData: {},\n  toAskingData: {},\n  loadingGetFromAsking: false,\n  loadingGetToAsking: false,\n  loadingUpdateAsking: false,\n\n  askingResult: {},\n  loadingGetAskingResult: false,\n\n  searchContactLocationList: [],\n  getSearchContactLocationLoading: false,\n  searchAirplaneList: [],\n  getSearchAirplaneLoading: false,\n  searchOtherVehicleList: [],\n  getSearchOtherVehicleLoading: false,\n  outbreakLocationList: [],\n  getOutbreakLocationLoading: false,\n  updateEstateLoading: false,\n\n  createLocationLoading: false,\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case types.GET_CONTACT_LOCATIONS_REQUEST:\n      return {\n        ...state,\n        loadingGetContactLocation: true,\n      };\n    case types.GET_CONTACT_LOCATIONS_SUCCESS:\n      return {\n        ...state,\n        contactLocationList: action.payload,\n        loadingGetContactLocation: false,\n      };\n    case types.GET_CONTACT_LOCATIONS_FAILURE:\n      return {\n        ...state,\n        loadingGetContactLocation: false,\n      };\n    case types.CREATE_CONTACT_LOCATION_REQUEST:\n      return {\n        ...state,\n        loadingCreateContactLocation: true,\n      };\n    case types.CREATE_CONTACT_LOCATION_SUCCESS:\n    case types.CREATE_CONTACT_LOCATION_FAILURE:\n      return {\n        ...state,\n        loadingCreateContactLocation: false,\n      };\n    case types.UPDATE_CONTACT_LOCATION_REQUEST:\n      return {\n        ...state,\n        loadingUpdateContactLocation: true,\n      };\n    case types.UPDATE_CONTACT_LOCATION_SUCCESS:\n    case types.UPDATE_CONTACT_LOCATION_FAILURE:\n      return {\n        ...state,\n        loadingUpdateContactLocation: false,\n      };\n    case types.DELETE_CONTACT_LOCATION_REQUEST:\n      return {\n        ...state,\n        loadingDeleteContactLocation: true,\n      };\n    case types.DELETE_CONTACT_LOCATION_SUCCESS:\n    case types.DELETE_CONTACT_LOCATION_FAILURE:\n      return {\n        ...state,\n        loadingDeleteContactLocation: false,\n      };\n\n    case types.GET_CONTACT_VEHICLES_REQUEST:\n      return {\n        ...state,\n        loadingGetContactVehicle: true,\n      };\n    case types.GET_CONTACT_VEHICLES_SUCCESS:\n      return {\n        ...state,\n        contactVehicleList: action.payload,\n        loadingGetContactVehicle: false,\n      };\n    case types.GET_CONTACT_VEHICLES_FAILURE:\n      return {\n        ...state,\n        loadingGetContactVehicle: false,\n      };\n    case types.GET_ASKING_RESULT_REQUEST:\n      return {\n        ...state,\n        loadingGetAskingResult: true,\n      };\n    case types.GET_ASKING_RESULT_SUCCESS:\n      return {\n        ...state,\n        askingResult: action.payload,\n        loadingGetAskingResult: false,\n      };\n    case types.GET_ASKING_RESULT_FAILURE:\n      return {\n        ...state,\n        loadingGetAskingResult: false,\n      };\n    case types.GET_CRITERIAS_REQUEST:\n      return {\n        ...state,\n        loadingGetCriteria: true,\n      };\n    case types.GET_CRITERIAS_SUCCESS: {\n      const response = action.payload;\n      const criteriaList = [];\n      response.forEach((element) => {\n        const { criterias } = element;\n        criterias.forEach((e) => {\n          e.id = `${e.id}/${element.id}`;\n        });\n        criteriaList.push(...criterias);\n      });\n      return {\n        ...state,\n        criteriaList,\n        loadingGetCriteria: false,\n      };\n    }\n    case types.GET_CRITERIAS_FAILURE:\n      return {\n        ...state,\n        loadingGetCriteria: false,\n      };\n    case types.GET_CRITERIAS_BY_INFECTION_TYPE_REQUEST:\n      return {\n        ...state,\n        loadingGetCriteria: true,\n      };\n    case types.GET_CRITERIAS_BY_INFECTION_TYPE_SUCCESS: {\n      const response = action.payload;\n      const criteriaListByInfectionType = [];\n      response.forEach((element) => {\n        const { criterias } = element;\n        criterias.forEach((e) => {\n          e.id = `${e.id}/${element.id}`;\n        });\n        criteriaListByInfectionType.push(...criterias);\n      });\n      return {\n        ...state,\n        criteriaListByInfectionType,\n        loadingGetCriteria: false,\n      };\n    }\n    case types.GET_CRITERIAS_BY_INFECTION_TYPE_FAILURE:\n      return {\n        ...state,\n        loadingGetCriteria: false,\n      };\n    case types.GET_ASKING_REQUEST: {\n      const isAskingSubjectFrom = action.payload;\n      return {\n        ...state,\n        loadingGetFromAsking: isAskingSubjectFrom\n          ? true\n          : state.loadingGetFromAsking,\n        loadingGetToAsking: !isAskingSubjectFrom\n          ? true\n          : state.loadingGetToAsking,\n        fromAskingData: isAskingSubjectFrom ? {} : state.fromAskingData,\n        toAskingData: !isAskingSubjectFrom ? {} : state.toAskingData,\n      };\n    }\n    case types.GET_ASKING_SUCCESS: {\n      const { response, isAskingSubjectFrom } = action.payload;\n      return {\n        ...state,\n        fromAskingData: isAskingSubjectFrom ? response : state.fromAskingData,\n        toAskingData: !isAskingSubjectFrom ? response : state.toAskingData,\n        loadingGetFromAsking: false,\n        loadingGetToAsking: false,\n      };\n    }\n    case types.GET_ASKING_FAILURE:\n      return {\n        ...state,\n        loadingGetFromAsking: false,\n        loadingGetToAsking: false,\n      };\n    case types.UPDATE_ASKING_REQUEST:\n      return {\n        ...state,\n        loadingUpdateAsking: true,\n      };\n    case types.UPDATE_ASKING_SUCCESS:\n    case types.UPDATE_ASKING_FAILURE:\n      return {\n        ...state,\n        loadingUpdateAsking: false,\n      };\n    case types.CREATE_CONTACT_VEHICLE_REQUEST:\n      return {\n        ...state,\n        loadingCreateContactVehicle: true,\n      };\n    case types.CREATE_CONTACT_VEHICLE_SUCCESS:\n    case types.CREATE_CONTACT_VEHICLE_FAILURE:\n      return {\n        ...state,\n        loadingCreateContactVehicle: false,\n      };\n    case types.UPDATE_CONTACT_VEHICLE_REQUEST:\n      return {\n        ...state,\n        loadingUpdateContactVehicle: true,\n      };\n    case types.UPDATE_CONTACT_VEHICLE_SUCCESS:\n    case types.UPDATE_CONTACT_VEHICLE_FAILURE:\n      return {\n        ...state,\n        loadingUpdateContactVehicle: false,\n      };\n    case types.DELETE_CONTACT_VEHICLE_REQUEST:\n      return {\n        ...state,\n        loadingDeleteContactVehicle: true,\n      };\n    case types.DELETE_CONTACT_VEHICLE_SUCCESS:\n    case types.DELETE_CONTACT_VEHICLE_FAILURE:\n      return {\n        ...state,\n        loadingDeleteContactVehicle: false,\n      };\n    case types.UPDATE_ESTATE_REQUEST:\n      return {\n        ...state,\n        updateEstateLoading: true,\n      };\n    case types.UPDATE_ESTATE_SUCCESS:\n    case types.UPDATE_ESTATE_FAILURE:\n      return {\n        ...state,\n        updateEstateLoading: false,\n      };\n    case types.SEARCH_LOCATION_REQUEST:\n      return {\n        ...state,\n        getSearchContactLocationLoading: true,\n      };\n    case types.SEARCH_LOCATION_SUCCESS:\n      return {\n        ...state,\n        searchContactLocationList: action.payload,\n        getSearchContactLocationLoading: false,\n      };\n    case types.SEARCH_LOCATION_FAILURE:\n      return {\n        ...state,\n        getSearchContactLocationLoading: false,\n      };\n    case types.SEARCH_AIRPLANE_REQUEST:\n      return {\n        ...state,\n        getSearchAirplaneLoading: true,\n      };\n    case types.SEARCH_AIRPLANE_SUCCESS:\n      return {\n        ...state,\n        searchAirplaneList: action.payload,\n        getSearchAirplaneLoading: false,\n      };\n    case types.SEARCH_AIRPLANE_FAILURE:\n      return {\n        ...state,\n        getSearchAirplaneLoading: false,\n      };\n    case types.SEARCH_OTHER_VEHICLE_REQUEST:\n      return {\n        ...state,\n        getSearchOtherVehicleLoading: true,\n      };\n    case types.SEARCH_OTHER_VEHICLE_SUCCESS:\n      return {\n        ...state,\n        searchOtherVehicleList: action.payload,\n        getSearchOtherVehicleLoading: false,\n      };\n    case types.SEARCH_OTHER_VEHICLE_FAILURE:\n      return {\n        ...state,\n        getSearchOtherVehicleLoading: false,\n      };\n    case types.GET_OUTBREAK_LOCATION_REQUEST:\n      return {\n        ...state,\n        getOutbreakLocationLoading: true,\n      };\n    case types.GET_OUTBREAK_LOCATION_SUCCESS:\n      return {\n        ...state,\n        outbreakLocationList: action.payload,\n        getOutbreakLocationLoading: false,\n      };\n    case types.GET_OUTBREAK_LOCATION_FAILURE:\n      return {\n        ...state,\n        getOutbreakLocationLoading: false,\n      };\n    case types.CREATE_LOCATION_REQUEST:\n      return {\n        ...state,\n        createLocationLoading: true,\n      };\n    case types.CREATE_LOCATION_SUCCESS:\n    case types.CREATE_LOCATION_FAILURE:\n      return {\n        ...state,\n        createLocationLoading: false,\n      };\n    case types.CLEAR_ASKING: {\n      return {\n        ...state,\n        fromAskingData: {},\n      };\n    }\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}