{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\infection-chain\\\\components\\\\subject\\\\information\\\\form-sections\\\\MinimizeHealthInformation.js\";\n/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfile, updateProfile } from 'profile/actions/profile';\nimport EditableLabel from 'app/components/shared/EditableLabel';\nimport { getSymptoms, getUnderlyingDiseases } from 'infection-chain/actions/subject';\nconst Flex = styled.div`\n  display: flex;\n`;\nconst MinimizeHealthInformation = _ref => {\n  let {\n    data,\n    disabled\n  } = _ref;\n  const {\n    symptoms,\n    underlyingDiseases\n  } = data;\n  const [selectingKey, setSelectingKey] = useState(undefined);\n  const dispatch = useDispatch();\n  const symptomList = useSelector(state => state.subject.symptomList);\n  const getSymptomsLoading = useSelector(state => state.subject.getSymptomsLoading);\n  const underlyingDiseaseList = useSelector(state => state.subject.underlyingDiseaseList);\n  const getUnderlyingDiseasesLoading = useSelector(state => state.subject.getUnderlyingDiseasesLoading);\n  useEffect(() => {\n    dispatch(getSymptoms());\n    dispatch(getUnderlyingDiseases());\n  }, [dispatch]);\n  const labels = [{\n    rowIndex: 0,\n    col: [{\n      name: 'symptoms',\n      label: 'Triệu chứng:',\n      type: 'multiple-select',\n      value: symptoms.map(s => s.symptomId),\n      loading: getSymptomsLoading,\n      dropdownOptions: symptomList.map(r => ({\n        value: r.id,\n        text: r.name\n      })),\n      disabled\n    }]\n  }, {\n    rowIndex: 1,\n    col: [{\n      name: 'underlyingDiseases',\n      label: 'Bệnh nền:',\n      type: 'multiple-select',\n      value: underlyingDiseases,\n      loading: getUnderlyingDiseasesLoading,\n      dropdownOptions: underlyingDiseaseList.map(r => ({\n        value: r.id,\n        text: r.name\n      })),\n      disabled\n    }]\n  }];\n  const getProfileLoading = useSelector(s => s.profile.getProfileLoading);\n  const updateProfileLoading = useSelector(s => s.profile.updateProfileLoading);\n  const handleUpdateProfile = async _ref2 => {\n    let {\n      name,\n      data: d\n    } = _ref2;\n    try {\n      await dispatch(updateProfile({\n        ...data,\n        [name]: name === 'symptoms' ? d.map(s => ({\n          symptomId: s,\n          notes: '',\n          otherSymptomDescription: ''\n        })) : d\n      }));\n    } catch (e) {\n      toast.warn(e);\n    }\n    await dispatch(getProfile(data.id));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, labels.map(r => /*#__PURE__*/React.createElement(Flex, {\n    key: r.rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, r.col.map(f => /*#__PURE__*/React.createElement(EditableLabel\n  // style props\n  , {\n    key: f.name,\n    color: f.color,\n    header: f.label,\n    content: f.value,\n    maxLength: f === null || f === void 0 ? void 0 : f.maxLength\n    // logic props\n    ,\n    name: f.name,\n    type: f === null || f === void 0 ? void 0 : f.type,\n    disabled: f.disabled,\n    loading: getProfileLoading || updateProfileLoading,\n    dropdownOptions: f === null || f === void 0 ? void 0 : f.dropdownOptions,\n    selectingKey: selectingKey,\n    setSelectingKey: setSelectingKey,\n    onChange: d => handleUpdateProfile({\n      name: f.name,\n      data: d\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })))));\n};\nMinimizeHealthInformation.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  data: PropTypes.shape({\n    id: PropTypes.number,\n    symptoms: PropTypes.arrayOf(PropTypes.shape({})),\n    underlyingDiseases: PropTypes.arrayOf(PropTypes.shape({}))\n  }).isRequired\n};\nexport default MinimizeHealthInformation;","map":{"version":3,"names":["React","useEffect","useState","PropTypes","styled","toast","useDispatch","useSelector","getProfile","updateProfile","EditableLabel","getSymptoms","getUnderlyingDiseases","Flex","div","MinimizeHealthInformation","_ref","data","disabled","symptoms","underlyingDiseases","selectingKey","setSelectingKey","undefined","dispatch","symptomList","state","subject","getSymptomsLoading","underlyingDiseaseList","getUnderlyingDiseasesLoading","labels","rowIndex","col","name","label","type","value","map","s","symptomId","loading","dropdownOptions","r","id","text","getProfileLoading","profile","updateProfileLoading","handleUpdateProfile","_ref2","d","notes","otherSymptomDescription","e","warn","createElement","Fragment","key","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","f","color","header","content","maxLength","onChange","propTypes","bool","isRequired","shape","number","arrayOf"],"sources":["H:/BAKCO/pj/data reconciliation/src/infection-chain/components/subject/information/form-sections/MinimizeHealthInformation.js"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProfile, updateProfile } from 'profile/actions/profile';\n\nimport EditableLabel from 'app/components/shared/EditableLabel';\nimport {\n  getSymptoms,\n  getUnderlyingDiseases,\n} from 'infection-chain/actions/subject';\n\nconst Flex = styled.div`\n  display: flex;\n`;\n\nconst MinimizeHealthInformation = ({ data, disabled }) => {\n  const { symptoms, underlyingDiseases } = data;\n  const [selectingKey, setSelectingKey] = useState(undefined);\n\n  const dispatch = useDispatch();\n  const symptomList = useSelector((state) => state.subject.symptomList);\n  const getSymptomsLoading = useSelector(\n    (state) => state.subject.getSymptomsLoading,\n  );\n  const underlyingDiseaseList = useSelector(\n    (state) => state.subject.underlyingDiseaseList,\n  );\n  const getUnderlyingDiseasesLoading = useSelector(\n    (state) => state.subject.getUnderlyingDiseasesLoading,\n  );\n\n  useEffect(() => {\n    dispatch(getSymptoms());\n    dispatch(getUnderlyingDiseases());\n  }, [dispatch]);\n\n  const labels = [\n    {\n      rowIndex: 0,\n      col: [\n        {\n          name: 'symptoms',\n          label: 'Triệu chứng:',\n          type: 'multiple-select',\n          value: symptoms.map((s) => s.symptomId),\n          loading: getSymptomsLoading,\n          dropdownOptions: symptomList.map((r) => ({\n            value: r.id,\n            text: r.name,\n          })),\n          disabled,\n        },\n      ],\n    },\n    {\n      rowIndex: 1,\n      col: [\n        {\n          name: 'underlyingDiseases',\n          label: 'Bệnh nền:',\n          type: 'multiple-select',\n          value: underlyingDiseases,\n          loading: getUnderlyingDiseasesLoading,\n          dropdownOptions: underlyingDiseaseList.map((r) => ({\n            value: r.id,\n            text: r.name,\n          })),\n          disabled,\n        },\n      ],\n    },\n  ];\n\n  const getProfileLoading = useSelector((s) => s.profile.getProfileLoading);\n  const updateProfileLoading = useSelector(\n    (s) => s.profile.updateProfileLoading,\n  );\n  const handleUpdateProfile = async ({ name, data: d }) => {\n    try {\n      await dispatch(\n        updateProfile({\n          ...data,\n          [name]:\n            name === 'symptoms'\n              ? d.map((s) => ({\n                  symptomId: s,\n                  notes: '',\n                  otherSymptomDescription: '',\n                }))\n              : d,\n        }),\n      );\n    } catch (e) {\n      toast.warn(e);\n    }\n    await dispatch(getProfile(data.id));\n  };\n\n  return (\n    <>\n      {labels.map((r) => (\n        <Flex key={r.rowIndex}>\n          {r.col.map((f) => (\n            <EditableLabel\n              // style props\n              key={f.name}\n              color={f.color}\n              header={f.label}\n              content={f.value}\n              maxLength={f?.maxLength}\n              // logic props\n              name={f.name}\n              type={f?.type}\n              disabled={f.disabled}\n              loading={getProfileLoading || updateProfileLoading}\n              dropdownOptions={f?.dropdownOptions}\n              selectingKey={selectingKey}\n              setSelectingKey={setSelectingKey}\n              onChange={(d) => handleUpdateProfile({ name: f.name, data: d })}\n            />\n          ))}\n        </Flex>\n      ))}\n    </>\n  );\n};\n\nMinimizeHealthInformation.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n  data: PropTypes.shape({\n    id: PropTypes.number,\n    symptoms: PropTypes.arrayOf(PropTypes.shape({})),\n    underlyingDiseases: PropTypes.arrayOf(PropTypes.shape({})),\n  }).isRequired,\n};\n\nexport default MinimizeHealthInformation;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,aAAa,QAAQ,yBAAyB;AAEnE,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,SACEC,WAAW,EACXC,qBAAqB,QAChB,iCAAiC;AAExC,MAAMC,IAAI,GAAGT,MAAM,CAACU,GAAI;AACxB;AACA,CAAC;AAED,MAAMC,yBAAyB,GAAGC,IAAA,IAAwB;EAAA,IAAvB;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACnD,MAAM;IAAEG,QAAQ;IAAEC;EAAmB,CAAC,GAAGH,IAAI;EAC7C,MAAM,CAACI,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAACqB,SAAS,CAAC;EAE3D,MAAMC,QAAQ,GAAGlB,WAAW,EAAE;EAC9B,MAAMmB,WAAW,GAAGlB,WAAW,CAAEmB,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,WAAW,CAAC;EACrE,MAAMG,kBAAkB,GAAGrB,WAAW,CACnCmB,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACC,kBAAkB,CAC5C;EACD,MAAMC,qBAAqB,GAAGtB,WAAW,CACtCmB,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACE,qBAAqB,CAC/C;EACD,MAAMC,4BAA4B,GAAGvB,WAAW,CAC7CmB,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACG,4BAA4B,CACtD;EAED7B,SAAS,CAAC,MAAM;IACduB,QAAQ,CAACb,WAAW,EAAE,CAAC;IACvBa,QAAQ,CAACZ,qBAAqB,EAAE,CAAC;EACnC,CAAC,EAAE,CAACY,QAAQ,CAAC,CAAC;EAEd,MAAMO,MAAM,GAAG,CACb;IACEC,QAAQ,EAAE,CAAC;IACXC,GAAG,EAAE,CACH;MACEC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE,cAAc;MACrBC,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAElB,QAAQ,CAACmB,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,SAAS,CAAC;MACvCC,OAAO,EAAEb,kBAAkB;MAC3Bc,eAAe,EAAEjB,WAAW,CAACa,GAAG,CAAEK,CAAC,KAAM;QACvCN,KAAK,EAAEM,CAAC,CAACC,EAAE;QACXC,IAAI,EAAEF,CAAC,CAACT;MACV,CAAC,CAAC,CAAC;MACHhB;IACF,CAAC;EAEL,CAAC,EACD;IACEc,QAAQ,EAAE,CAAC;IACXC,GAAG,EAAE,CACH;MACEC,IAAI,EAAE,oBAAoB;MAC1BC,KAAK,EAAE,WAAW;MAClBC,IAAI,EAAE,iBAAiB;MACvBC,KAAK,EAAEjB,kBAAkB;MACzBqB,OAAO,EAAEX,4BAA4B;MACrCY,eAAe,EAAEb,qBAAqB,CAACS,GAAG,CAAEK,CAAC,KAAM;QACjDN,KAAK,EAAEM,CAAC,CAACC,EAAE;QACXC,IAAI,EAAEF,CAAC,CAACT;MACV,CAAC,CAAC,CAAC;MACHhB;IACF,CAAC;EAEL,CAAC,CACF;EAED,MAAM4B,iBAAiB,GAAGvC,WAAW,CAAEgC,CAAC,IAAKA,CAAC,CAACQ,OAAO,CAACD,iBAAiB,CAAC;EACzE,MAAME,oBAAoB,GAAGzC,WAAW,CACrCgC,CAAC,IAAKA,CAAC,CAACQ,OAAO,CAACC,oBAAoB,CACtC;EACD,MAAMC,mBAAmB,GAAG,MAAAC,KAAA,IAA6B;IAAA,IAAtB;MAAEhB,IAAI;MAAEjB,IAAI,EAAEkC;IAAE,CAAC,GAAAD,KAAA;IAClD,IAAI;MACF,MAAM1B,QAAQ,CACZf,aAAa,CAAC;QACZ,GAAGQ,IAAI;QACP,CAACiB,IAAI,GACHA,IAAI,KAAK,UAAU,GACfiB,CAAC,CAACb,GAAG,CAAEC,CAAC,KAAM;UACZC,SAAS,EAAED,CAAC;UACZa,KAAK,EAAE,EAAE;UACTC,uBAAuB,EAAE;QAC3B,CAAC,CAAC,CAAC,GACHF;MACR,CAAC,CAAC,CACH;IACH,CAAC,CAAC,OAAOG,CAAC,EAAE;MACVjD,KAAK,CAACkD,IAAI,CAACD,CAAC,CAAC;IACf;IACA,MAAM9B,QAAQ,CAAChB,UAAU,CAACS,IAAI,CAAC2B,EAAE,CAAC,CAAC;EACrC,CAAC;EAED,oBACE5C,KAAA,CAAAwD,aAAA,CAAAxD,KAAA,CAAAyD,QAAA,QACG1B,MAAM,CAACO,GAAG,CAAEK,CAAC,iBACZ3C,KAAA,CAAAwD,aAAA,CAAC3C,IAAI;IAAC6C,GAAG,EAAEf,CAAC,CAACX,QAAS;IAAA2B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACnBrB,CAAC,CAACV,GAAG,CAACK,GAAG,CAAE2B,CAAC,iBACXjE,KAAA,CAAAwD,aAAA,CAAC9C;EACC;EAAA;IACAgD,GAAG,EAAEO,CAAC,CAAC/B,IAAK;IACZgC,KAAK,EAAED,CAAC,CAACC,KAAM;IACfC,MAAM,EAAEF,CAAC,CAAC9B,KAAM;IAChBiC,OAAO,EAAEH,CAAC,CAAC5B,KAAM;IACjBgC,SAAS,EAAEJ,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEI;IACd;IAAA;IACAnC,IAAI,EAAE+B,CAAC,CAAC/B,IAAK;IACbE,IAAI,EAAE6B,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAE7B,IAAK;IACdlB,QAAQ,EAAE+C,CAAC,CAAC/C,QAAS;IACrBuB,OAAO,EAAEK,iBAAiB,IAAIE,oBAAqB;IACnDN,eAAe,EAAEuB,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEvB,eAAgB;IACpCrB,YAAY,EAAEA,YAAa;IAC3BC,eAAe,EAAEA,eAAgB;IACjCgD,QAAQ,EAAGnB,CAAC,IAAKF,mBAAmB,CAAC;MAAEf,IAAI,EAAE+B,CAAC,CAAC/B,IAAI;MAAEjB,IAAI,EAAEkC;IAAE,CAAC,CAAE;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAEnE,CAAC,CAEL,CAAC,CACD;AAEP,CAAC;AAEDjD,yBAAyB,CAACwD,SAAS,GAAG;EACpCrD,QAAQ,EAAEf,SAAS,CAACqE,IAAI,CAACC,UAAU;EACnCxD,IAAI,EAAEd,SAAS,CAACuE,KAAK,CAAC;IACpB9B,EAAE,EAAEzC,SAAS,CAACwE,MAAM;IACpBxD,QAAQ,EAAEhB,SAAS,CAACyE,OAAO,CAACzE,SAAS,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAChDtD,kBAAkB,EAAEjB,SAAS,CAACyE,OAAO,CAACzE,SAAS,CAACuE,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3D,CAAC,CAAC,CAACD;AACL,CAAC;AAED,eAAe1D,yBAAyB"},"metadata":{},"sourceType":"module"}