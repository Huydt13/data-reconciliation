{"ast":null,"code":"import types, { GET_SUBJECT_SUMMARIES_REQUEST, GET_SUBJECT_SUMMARIES_SUCCESS, GET_SUBJECT_SUMMARIES_FAILURE, SELECT_SUBJECT_SUMMARIES_LIST, SELECT_SUBJECT_TYPE, SELECT_SUBJECT_LOCATION, SELECT_LOCATION_TYPE, GET_SUBJECT_SUMMARY_BY_RANGE_REQUEST, GET_SUBJECT_SUMMARY_BY_RANGE_SUCCESS, GET_SUBJECT_SUMMARY_BY_RANGE_FAILURE, GET_EXAMINATION_SUMMARY_REQUEST, GET_EXAMINATION_SUMMARY_SUCCESS, GET_EXAMINATION_SUMMARY_FAILURE, GET_EXAMINATION_SUMMARY_BY_RANGE_REQUEST, GET_EXAMINATION_SUMMARY_BY_RANGE_SUCCESS, GET_EXAMINATION_SUMMARY_BY_RANGE_FAILURE } from 'dashboard/actions/types';\nimport moment from 'moment';\nconst defaultSummary = {\n  diseaseTypeId: '',\n  summaryDate: '',\n  summaryDetails: []\n};\nconst INITIAL_STATE = {\n  selectedSubjectType: 0,\n  selectedLocationType: 0,\n  isSubject: true,\n  subjectSummaries: null,\n  loadingGetSubjectSummaries: false,\n  selectedSubjectSummariesList: [],\n  loadingGetSubjectSummariesByRange: false,\n  subjectSummariesByRange: [],\n  loadingGetExaminationSummary: false,\n  examinationSummary: [],\n  loadingGetExaminationSummaryByRange: false,\n  examinationSummaryByRange: [],\n  getPeopleExaminationStatisticLoading: false,\n  peopleExaminationStatistic: [],\n  getExaminationDetailStatisticLoading: false,\n  examinationDetailStatistic: [],\n  getGroupedExamDetailLoading: false,\n  groupedExamDetail: [],\n  getDashboardByDateLoading: false,\n  dashboardByDate: {},\n  chainsSummariesData: defaultSummary,\n  getChainsSummariesLoading: false,\n  getChainsSummariesByRangeLoading: false,\n  chainsSummariesByRangeData: [],\n  reloadSummariesLoading: false\n};\nexport default function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_SUBJECT_SUMMARIES_REQUEST:\n      {\n        return {\n          ...state,\n          loadingGetSubjectSummaries: true\n        };\n      }\n    case GET_SUBJECT_SUMMARIES_SUCCESS:\n      {\n        return {\n          ...state,\n          loadingGetSubjectSummaries: false,\n          subjectSummaries: action.payload\n        };\n      }\n    case GET_SUBJECT_SUMMARIES_FAILURE:\n      {\n        return {\n          ...state,\n          loadingGetSubjectSummaries: false\n        };\n      }\n    case GET_SUBJECT_SUMMARY_BY_RANGE_REQUEST:\n      {\n        return {\n          ...state,\n          loadingGetSubjectSummariesByRange: true\n        };\n      }\n    case GET_SUBJECT_SUMMARY_BY_RANGE_SUCCESS:\n      {\n        return {\n          ...state,\n          loadingGetSubjectSummariesByRange: false,\n          subjectSummariesByRange: action.payload\n        };\n      }\n    case GET_SUBJECT_SUMMARY_BY_RANGE_FAILURE:\n      {\n        return {\n          ...state,\n          loadingGetSubjectSummariesByRange: false\n        };\n      }\n    case GET_EXAMINATION_SUMMARY_REQUEST:\n      {\n        return {\n          ...state,\n          loadingGetExaminationSummary: true\n        };\n      }\n    case GET_EXAMINATION_SUMMARY_SUCCESS:\n      {\n        return {\n          ...state,\n          loadingGetExaminationSummary: false,\n          examinationSummary: action.payload\n        };\n      }\n    case GET_EXAMINATION_SUMMARY_FAILURE:\n      {\n        return {\n          ...state,\n          loadingGetExaminationSummary: false\n        };\n      }\n    case GET_EXAMINATION_SUMMARY_BY_RANGE_REQUEST:\n      {\n        return {\n          ...state,\n          loadingGetExaminationSummaryByRange: true\n        };\n      }\n    case GET_EXAMINATION_SUMMARY_BY_RANGE_SUCCESS:\n      {\n        return {\n          ...state,\n          loadingGetExaminationSummaryByRange: false,\n          examinationSummaryByRange: action.payload\n        };\n      }\n    case GET_EXAMINATION_SUMMARY_BY_RANGE_FAILURE:\n      {\n        return {\n          ...state,\n          loadingGetExaminationSummaryByRange: false\n        };\n      }\n    case SELECT_SUBJECT_SUMMARIES_LIST:\n      {\n        return {\n          ...state,\n          selectedSubjectSummariesList: action.payload\n        };\n      }\n    case SELECT_SUBJECT_TYPE:\n      {\n        return {\n          ...state,\n          selectedSubjectType: action.payload\n        };\n      }\n    case SELECT_LOCATION_TYPE:\n      {\n        return {\n          ...state,\n          selectedLocationType: action.payload\n        };\n      }\n    case SELECT_SUBJECT_LOCATION:\n      {\n        return {\n          ...state,\n          isSubject: action.payload\n        };\n      }\n    case types.EXAMINATION_GET_TAKEN_EXAMINATION_COUNT_BY_DATE_REQUEST:\n      {\n        return {\n          ...state,\n          getTakenExaminationCountLoading: true\n        };\n      }\n    case types.EXAMINATION_GET_TAKEN_EXAMINATION_COUNT_BY_DATE_SUCCESS:\n      {\n        return {\n          ...state,\n          getTakenExaminationCountLoading: false,\n          takenExaminationCountList: action.payload\n        };\n      }\n    case types.EXAMINATION_GET_TAKEN_EXAMINATION_COUNT_BY_DATE_FAILURE:\n      {\n        return {\n          ...state,\n          getTakenExaminationCountLoading: false\n        };\n      }\n    case types.EXAMINATION_GET_RESULT_EXAMINATION_COUNT_REQUEST:\n      {\n        return {\n          ...state,\n          getResultExaminationCountLoading: true\n        };\n      }\n    case types.EXAMINATION_GET_RESULT_EXAMINATION_COUNT_SUCCESS:\n      {\n        return {\n          ...state,\n          getResultExaminationCountLoading: false,\n          resultExaminationCountList: action.payload\n        };\n      }\n    case types.EXAMINATION_GET_RESULT_EXAMINATION_COUNT_FAILURE:\n      {\n        return {\n          ...state,\n          getResultExaminationCountLoading: false\n        };\n      }\n    case types.EXAMINATION_GET_PEOPLE_ASSIGNED_COUNT_REQUEST:\n      {\n        return {\n          ...state,\n          getPeopleAssignedCountLoading: true\n        };\n      }\n    case types.EXAMINATION_GET_PEOPLE_ASSIGNED_COUNT_SUCCESS:\n      {\n        return {\n          ...state,\n          getPeopleAssignedCountLoading: false,\n          peopleAssignedCountList: action.payload\n        };\n      }\n    case types.EXAMINATION_GET_PEOPLE_ASSIGNED_COUNT_FAILURE:\n      {\n        return {\n          ...state,\n          getPeopleAssignedCountLoading: false\n        };\n      }\n    case types.EXAMINATION_GET_PEOPLE_TAKEN_EXAM_COUNT_REQUEST:\n      {\n        return {\n          ...state,\n          getPeopleTakenExamCountLoading: true\n        };\n      }\n    case types.EXAMINATION_GET_PEOPLE_TAKEN_EXAM_COUNT_SUCCESS:\n      {\n        return {\n          ...state,\n          getPeopleTakenExamCountLoading: false,\n          peopleTakenExamCountList: action.payload\n        };\n      }\n    case types.EXAMINATION_GET_PEOPLE_TAKEN_EXAM_COUNT_FAILURE:\n      {\n        return {\n          ...state,\n          getPeopleTakenExamCountLoading: false\n        };\n      }\n    case types.EXAMINATION_GET_PEOPLE_HAS_RESULT_EXAM_COUNT_REQUEST:\n      {\n        return {\n          ...state,\n          getPeopleHasResultExamCountLoading: true\n        };\n      }\n    case types.EXAMINATION_GET_PEOPLE_HAS_RESULT_EXAM_COUNT_SUCCESS:\n      {\n        return {\n          ...state,\n          getPeopleHasResultExamCountLoading: false,\n          peopleHasResultExamList: action.payload\n        };\n      }\n    case types.EXAMINATION_GET_PEOPLE_HAS_RESULT_EXAM_COUNT_FAILURE:\n      {\n        return {\n          ...state,\n          getPeopleHasResultExamCountLoading: false\n        };\n      }\n    case types.EXAMINATION_GET_EXAM_WAITING_RESULT_COUNT_REQUEST:\n      {\n        return {\n          ...state,\n          getExamWaitingResultCountLoading: true\n        };\n      }\n    case types.EXAMINATION_GET_EXAM_WAITING_RESULT_COUNT_SUCCESS:\n      {\n        return {\n          ...state,\n          getExamWaitingResultCountLoading: false,\n          examWaitingResultCountList: action.payload\n        };\n      }\n    case types.EXAMINATION_GET_EXAM_WAITING_RESULT_COUNT_FAILURE:\n      {\n        return {\n          ...state,\n          getExamWaitingResultCountLoading: false\n        };\n      }\n    case types.GET_PEOPLE_EXAMINATION_STATISTIC_REQUEST:\n      {\n        return {\n          ...state,\n          getPeopleExaminationStatisticLoading: true\n        };\n      }\n    case types.GET_PEOPLE_EXAMINATION_STATISTIC_SUCCESS:\n      {\n        return {\n          ...state,\n          getPeopleExaminationStatisticLoading: false,\n          peopleExaminationStatistic: action.payload\n        };\n      }\n    case types.GET_PEOPLE_EXAMINATION_STATISTIC_FAILURE:\n      {\n        return {\n          ...state,\n          getPeopleExaminationStatisticLoading: false\n        };\n      }\n    case types.GET_EXAMINATION_DETAIL_STATISTIC_REQUEST:\n      {\n        return {\n          ...state,\n          getExaminationDetailStatisticLoading: true\n        };\n      }\n    case types.GET_EXAMINATION_DETAIL_STATISTIC_SUCCESS:\n      {\n        return {\n          ...state,\n          getExaminationDetailStatisticLoading: false,\n          examinationDetailStatistic: action.payload\n        };\n      }\n    case types.GET_EXAMINATION_DETAIL_STATISTIC_FAILURE:\n      {\n        return {\n          ...state,\n          getExaminationDetailStatisticLoading: false\n        };\n      }\n    case types.GET_GROUPED_EXAM_DETAIL_STATISTIC_REQUEST:\n      {\n        return {\n          ...state,\n          getGroupedExamDetailLoading: true\n        };\n      }\n    case types.GET_GROUPED_EXAM_DETAIL_STATISTIC_SUCCESS:\n      {\n        return {\n          ...state,\n          getGroupedExamDetailLoading: false,\n          groupedExamDetail: action.payload\n        };\n      }\n    case types.GET_GROUPED_EXAM_DETAIL_STATISTIC_FAILURE:\n      {\n        return {\n          ...state,\n          getGroupedExamDetailLoading: false\n        };\n      }\n    case types.GET_DASHBOARD_BY_DATE_REQUEST:\n      {\n        return {\n          ...state,\n          getDashboardByDateLoading: true\n        };\n      }\n    case types.GET_DASHBOARD_BY_DATE_SUCCESS:\n      {\n        return {\n          ...state,\n          getDashboardByDateLoading: false,\n          dashboardByDate: action.payload\n        };\n      }\n    case types.GET_DASHBOARD_BY_DATE_FAILURE:\n      {\n        return {\n          ...state,\n          getDashboardByDateLoading: false\n        };\n      }\n    case types.GET_CHAINS_SUMMARIES_REQUEST:\n      {\n        const {\n          isRange\n        } = action.payload;\n        return {\n          ...state,\n          getChainsSummariesLoading: !isRange ? true : state.getChainsSummariesLoading,\n          getChainsSummariesByRangeLoading: isRange ? true : state.getChainsSummariesByRangeLoading\n        };\n      }\n    case types.GET_CHAINS_SUMMARIES_SUCCESS:\n      {\n        const {\n          response,\n          isRange\n        } = action.payload;\n        return {\n          ...state,\n          chainsSummariesData: !isRange ? response.find(res => res.diseaseTypeId === 'b597cc8f-74b6-434d-8b9d-52b74595a1de') || state.chainsSummariesData : state.chainsSummariesData,\n          chainsSummariesByRangeData: isRange ? [...response.map(res => ({\n            ...res,\n            date: moment(res.summaryDate).format('DD-MM-YYYY')\n          })).sort((a, b) => moment(a.date, 'DD-MM-YYYY').diff(moment(b.date, 'DD-MM-YYYY')))].sort((a, b) => moment(a.date, 'DD-MM-YYYY').diff(moment(b.date, 'DD-MM-YYYY'))) : state.chainsSummariesByRangeData,\n          getChainsSummariesLoading: !isRange ? false : state.getChainsSummariesLoading,\n          getChainsSummariesByRangeLoading: isRange ? false : state.getChainsSummariesByRangeLoading\n        };\n      }\n    case types.GET_CHAINS_SUMMARIES_FAILURE:\n      {\n        const {\n          isRange\n        } = action.payload;\n        return {\n          ...state,\n          getChainsSummariesLoading: !isRange ? false : state.getChainsSummariesLoading,\n          getChainsSummariesByRangeLoading: isRange ? false : state.getChainsSummariesByRangeLoading\n        };\n      }\n    case types.RELOAD_SUMMARIES_REQUEST:\n      {\n        return {\n          ...state,\n          reloadSummariesLoading: true\n        };\n      }\n    case types.RELOAD_SUMMARIES_SUCCESS:\n      {\n        return {\n          ...state,\n          reloadSummariesLoading: false,\n          chainsSummariesData: {\n            ...state.chainsSummariesData,\n            summaryDetails: state.chainsSummariesData.summaryDetails.map(s => ({\n              ...s,\n              total: action.payload.summaryDetails.find(reloadSummary => reloadSummary.infectionTypeId === s.infectionTypeId).total,\n              diff: s.total - action.payload.summaryDetails.find(reloadSummary => reloadSummary.infectionTypeId === s.infectionTypeId).total\n            }))\n          }\n        };\n      }\n    case types.RELOAD_SUMMARIES_FAILURE:\n      {\n        return {\n          ...state,\n          reloadSummariesLoading: false\n        };\n      }\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["types","GET_SUBJECT_SUMMARIES_REQUEST","GET_SUBJECT_SUMMARIES_SUCCESS","GET_SUBJECT_SUMMARIES_FAILURE","SELECT_SUBJECT_SUMMARIES_LIST","SELECT_SUBJECT_TYPE","SELECT_SUBJECT_LOCATION","SELECT_LOCATION_TYPE","GET_SUBJECT_SUMMARY_BY_RANGE_REQUEST","GET_SUBJECT_SUMMARY_BY_RANGE_SUCCESS","GET_SUBJECT_SUMMARY_BY_RANGE_FAILURE","GET_EXAMINATION_SUMMARY_REQUEST","GET_EXAMINATION_SUMMARY_SUCCESS","GET_EXAMINATION_SUMMARY_FAILURE","GET_EXAMINATION_SUMMARY_BY_RANGE_REQUEST","GET_EXAMINATION_SUMMARY_BY_RANGE_SUCCESS","GET_EXAMINATION_SUMMARY_BY_RANGE_FAILURE","moment","defaultSummary","diseaseTypeId","summaryDate","summaryDetails","INITIAL_STATE","selectedSubjectType","selectedLocationType","isSubject","subjectSummaries","loadingGetSubjectSummaries","selectedSubjectSummariesList","loadingGetSubjectSummariesByRange","subjectSummariesByRange","loadingGetExaminationSummary","examinationSummary","loadingGetExaminationSummaryByRange","examinationSummaryByRange","getPeopleExaminationStatisticLoading","peopleExaminationStatistic","getExaminationDetailStatisticLoading","examinationDetailStatistic","getGroupedExamDetailLoading","groupedExamDetail","getDashboardByDateLoading","dashboardByDate","chainsSummariesData","getChainsSummariesLoading","getChainsSummariesByRangeLoading","chainsSummariesByRangeData","reloadSummariesLoading","state","arguments","length","undefined","action","type","payload","EXAMINATION_GET_TAKEN_EXAMINATION_COUNT_BY_DATE_REQUEST","getTakenExaminationCountLoading","EXAMINATION_GET_TAKEN_EXAMINATION_COUNT_BY_DATE_SUCCESS","takenExaminationCountList","EXAMINATION_GET_TAKEN_EXAMINATION_COUNT_BY_DATE_FAILURE","EXAMINATION_GET_RESULT_EXAMINATION_COUNT_REQUEST","getResultExaminationCountLoading","EXAMINATION_GET_RESULT_EXAMINATION_COUNT_SUCCESS","resultExaminationCountList","EXAMINATION_GET_RESULT_EXAMINATION_COUNT_FAILURE","EXAMINATION_GET_PEOPLE_ASSIGNED_COUNT_REQUEST","getPeopleAssignedCountLoading","EXAMINATION_GET_PEOPLE_ASSIGNED_COUNT_SUCCESS","peopleAssignedCountList","EXAMINATION_GET_PEOPLE_ASSIGNED_COUNT_FAILURE","EXAMINATION_GET_PEOPLE_TAKEN_EXAM_COUNT_REQUEST","getPeopleTakenExamCountLoading","EXAMINATION_GET_PEOPLE_TAKEN_EXAM_COUNT_SUCCESS","peopleTakenExamCountList","EXAMINATION_GET_PEOPLE_TAKEN_EXAM_COUNT_FAILURE","EXAMINATION_GET_PEOPLE_HAS_RESULT_EXAM_COUNT_REQUEST","getPeopleHasResultExamCountLoading","EXAMINATION_GET_PEOPLE_HAS_RESULT_EXAM_COUNT_SUCCESS","peopleHasResultExamList","EXAMINATION_GET_PEOPLE_HAS_RESULT_EXAM_COUNT_FAILURE","EXAMINATION_GET_EXAM_WAITING_RESULT_COUNT_REQUEST","getExamWaitingResultCountLoading","EXAMINATION_GET_EXAM_WAITING_RESULT_COUNT_SUCCESS","examWaitingResultCountList","EXAMINATION_GET_EXAM_WAITING_RESULT_COUNT_FAILURE","GET_PEOPLE_EXAMINATION_STATISTIC_REQUEST","GET_PEOPLE_EXAMINATION_STATISTIC_SUCCESS","GET_PEOPLE_EXAMINATION_STATISTIC_FAILURE","GET_EXAMINATION_DETAIL_STATISTIC_REQUEST","GET_EXAMINATION_DETAIL_STATISTIC_SUCCESS","GET_EXAMINATION_DETAIL_STATISTIC_FAILURE","GET_GROUPED_EXAM_DETAIL_STATISTIC_REQUEST","GET_GROUPED_EXAM_DETAIL_STATISTIC_SUCCESS","GET_GROUPED_EXAM_DETAIL_STATISTIC_FAILURE","GET_DASHBOARD_BY_DATE_REQUEST","GET_DASHBOARD_BY_DATE_SUCCESS","GET_DASHBOARD_BY_DATE_FAILURE","GET_CHAINS_SUMMARIES_REQUEST","isRange","GET_CHAINS_SUMMARIES_SUCCESS","response","find","res","map","date","format","sort","a","b","diff","GET_CHAINS_SUMMARIES_FAILURE","RELOAD_SUMMARIES_REQUEST","RELOAD_SUMMARIES_SUCCESS","s","total","reloadSummary","infectionTypeId","RELOAD_SUMMARIES_FAILURE"],"sources":["H:/BAKCO/pj/data reconciliation/src/dashboard/reducers/dashboard.js"],"sourcesContent":["import types, {\n  GET_SUBJECT_SUMMARIES_REQUEST,\n  GET_SUBJECT_SUMMARIES_SUCCESS,\n  GET_SUBJECT_SUMMARIES_FAILURE,\n  SELECT_SUBJECT_SUMMARIES_LIST,\n  SELECT_SUBJECT_TYPE,\n  SELECT_SUBJECT_LOCATION,\n  SELECT_LOCATION_TYPE,\n  GET_SUBJECT_SUMMARY_BY_RANGE_REQUEST,\n  GET_SUBJECT_SUMMARY_BY_RANGE_SUCCESS,\n  GET_SUBJECT_SUMMARY_BY_RANGE_FAILURE,\n  GET_EXAMINATION_SUMMARY_REQUEST,\n  GET_EXAMINATION_SUMMARY_SUCCESS,\n  GET_EXAMINATION_SUMMARY_FAILURE,\n  GET_EXAMINATION_SUMMARY_BY_RANGE_REQUEST,\n  GET_EXAMINATION_SUMMARY_BY_RANGE_SUCCESS,\n  GET_EXAMINATION_SUMMARY_BY_RANGE_FAILURE,\n} from 'dashboard/actions/types';\nimport moment from 'moment';\n\nconst defaultSummary = {\n  diseaseTypeId: '',\n  summaryDate: '',\n  summaryDetails: [],\n};\n\nconst INITIAL_STATE = {\n  selectedSubjectType: 0,\n  selectedLocationType: 0,\n  isSubject: true,\n  subjectSummaries: null,\n  loadingGetSubjectSummaries: false,\n  selectedSubjectSummariesList: [],\n  loadingGetSubjectSummariesByRange: false,\n  subjectSummariesByRange: [],\n  loadingGetExaminationSummary: false,\n  examinationSummary: [],\n  loadingGetExaminationSummaryByRange: false,\n  examinationSummaryByRange: [],\n  getPeopleExaminationStatisticLoading: false,\n  peopleExaminationStatistic: [],\n  getExaminationDetailStatisticLoading: false,\n  examinationDetailStatistic: [],\n  getGroupedExamDetailLoading: false,\n  groupedExamDetail: [],\n  getDashboardByDateLoading: false,\n  dashboardByDate: {},\n\n  chainsSummariesData: defaultSummary,\n  getChainsSummariesLoading: false,\n  getChainsSummariesByRangeLoading: false,\n  chainsSummariesByRangeData: [],\n  reloadSummariesLoading: false,\n};\n\nexport default function (state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case GET_SUBJECT_SUMMARIES_REQUEST: {\n      return {\n        ...state,\n        loadingGetSubjectSummaries: true,\n      };\n    }\n    case GET_SUBJECT_SUMMARIES_SUCCESS: {\n      return {\n        ...state,\n        loadingGetSubjectSummaries: false,\n        subjectSummaries: action.payload,\n      };\n    }\n    case GET_SUBJECT_SUMMARIES_FAILURE: {\n      return {\n        ...state,\n        loadingGetSubjectSummaries: false,\n      };\n    }\n    case GET_SUBJECT_SUMMARY_BY_RANGE_REQUEST: {\n      return {\n        ...state,\n        loadingGetSubjectSummariesByRange: true,\n      };\n    }\n    case GET_SUBJECT_SUMMARY_BY_RANGE_SUCCESS: {\n      return {\n        ...state,\n        loadingGetSubjectSummariesByRange: false,\n        subjectSummariesByRange: action.payload,\n      };\n    }\n    case GET_SUBJECT_SUMMARY_BY_RANGE_FAILURE: {\n      return {\n        ...state,\n        loadingGetSubjectSummariesByRange: false,\n      };\n    }\n    case GET_EXAMINATION_SUMMARY_REQUEST: {\n      return {\n        ...state,\n        loadingGetExaminationSummary: true,\n      };\n    }\n    case GET_EXAMINATION_SUMMARY_SUCCESS: {\n      return {\n        ...state,\n        loadingGetExaminationSummary: false,\n        examinationSummary: action.payload,\n      };\n    }\n    case GET_EXAMINATION_SUMMARY_FAILURE: {\n      return {\n        ...state,\n        loadingGetExaminationSummary: false,\n      };\n    }\n    case GET_EXAMINATION_SUMMARY_BY_RANGE_REQUEST: {\n      return {\n        ...state,\n        loadingGetExaminationSummaryByRange: true,\n      };\n    }\n    case GET_EXAMINATION_SUMMARY_BY_RANGE_SUCCESS: {\n      return {\n        ...state,\n        loadingGetExaminationSummaryByRange: false,\n        examinationSummaryByRange: action.payload,\n      };\n    }\n    case GET_EXAMINATION_SUMMARY_BY_RANGE_FAILURE: {\n      return {\n        ...state,\n        loadingGetExaminationSummaryByRange: false,\n      };\n    }\n    case SELECT_SUBJECT_SUMMARIES_LIST: {\n      return {\n        ...state,\n        selectedSubjectSummariesList: action.payload,\n      };\n    }\n    case SELECT_SUBJECT_TYPE: {\n      return {\n        ...state,\n        selectedSubjectType: action.payload,\n      };\n    }\n    case SELECT_LOCATION_TYPE: {\n      return {\n        ...state,\n        selectedLocationType: action.payload,\n      };\n    }\n    case SELECT_SUBJECT_LOCATION: {\n      return {\n        ...state,\n        isSubject: action.payload,\n      };\n    }\n    case types.EXAMINATION_GET_TAKEN_EXAMINATION_COUNT_BY_DATE_REQUEST: {\n      return {\n        ...state,\n        getTakenExaminationCountLoading: true,\n      };\n    }\n    case types.EXAMINATION_GET_TAKEN_EXAMINATION_COUNT_BY_DATE_SUCCESS: {\n      return {\n        ...state,\n        getTakenExaminationCountLoading: false,\n        takenExaminationCountList: action.payload,\n      };\n    }\n    case types.EXAMINATION_GET_TAKEN_EXAMINATION_COUNT_BY_DATE_FAILURE: {\n      return {\n        ...state,\n        getTakenExaminationCountLoading: false,\n      };\n    }\n    case types.EXAMINATION_GET_RESULT_EXAMINATION_COUNT_REQUEST: {\n      return {\n        ...state,\n        getResultExaminationCountLoading: true,\n      };\n    }\n    case types.EXAMINATION_GET_RESULT_EXAMINATION_COUNT_SUCCESS: {\n      return {\n        ...state,\n        getResultExaminationCountLoading: false,\n        resultExaminationCountList: action.payload,\n      };\n    }\n    case types.EXAMINATION_GET_RESULT_EXAMINATION_COUNT_FAILURE: {\n      return {\n        ...state,\n        getResultExaminationCountLoading: false,\n      };\n    }\n    case types.EXAMINATION_GET_PEOPLE_ASSIGNED_COUNT_REQUEST: {\n      return {\n        ...state,\n        getPeopleAssignedCountLoading: true,\n      };\n    }\n    case types.EXAMINATION_GET_PEOPLE_ASSIGNED_COUNT_SUCCESS: {\n      return {\n        ...state,\n        getPeopleAssignedCountLoading: false,\n        peopleAssignedCountList: action.payload,\n      };\n    }\n    case types.EXAMINATION_GET_PEOPLE_ASSIGNED_COUNT_FAILURE: {\n      return {\n        ...state,\n        getPeopleAssignedCountLoading: false,\n      };\n    }\n    case types.EXAMINATION_GET_PEOPLE_TAKEN_EXAM_COUNT_REQUEST: {\n      return {\n        ...state,\n        getPeopleTakenExamCountLoading: true,\n      };\n    }\n    case types.EXAMINATION_GET_PEOPLE_TAKEN_EXAM_COUNT_SUCCESS: {\n      return {\n        ...state,\n        getPeopleTakenExamCountLoading: false,\n        peopleTakenExamCountList: action.payload,\n      };\n    }\n    case types.EXAMINATION_GET_PEOPLE_TAKEN_EXAM_COUNT_FAILURE: {\n      return {\n        ...state,\n        getPeopleTakenExamCountLoading: false,\n      };\n    }\n    case types.EXAMINATION_GET_PEOPLE_HAS_RESULT_EXAM_COUNT_REQUEST: {\n      return {\n        ...state,\n        getPeopleHasResultExamCountLoading: true,\n      };\n    }\n    case types.EXAMINATION_GET_PEOPLE_HAS_RESULT_EXAM_COUNT_SUCCESS: {\n      return {\n        ...state,\n        getPeopleHasResultExamCountLoading: false,\n        peopleHasResultExamList: action.payload,\n      };\n    }\n    case types.EXAMINATION_GET_PEOPLE_HAS_RESULT_EXAM_COUNT_FAILURE: {\n      return {\n        ...state,\n        getPeopleHasResultExamCountLoading: false,\n      };\n    }\n    case types.EXAMINATION_GET_EXAM_WAITING_RESULT_COUNT_REQUEST: {\n      return {\n        ...state,\n        getExamWaitingResultCountLoading: true,\n      };\n    }\n    case types.EXAMINATION_GET_EXAM_WAITING_RESULT_COUNT_SUCCESS: {\n      return {\n        ...state,\n        getExamWaitingResultCountLoading: false,\n        examWaitingResultCountList: action.payload,\n      };\n    }\n    case types.EXAMINATION_GET_EXAM_WAITING_RESULT_COUNT_FAILURE: {\n      return {\n        ...state,\n        getExamWaitingResultCountLoading: false,\n      };\n    }\n    case types.GET_PEOPLE_EXAMINATION_STATISTIC_REQUEST: {\n      return {\n        ...state,\n        getPeopleExaminationStatisticLoading: true,\n      };\n    }\n    case types.GET_PEOPLE_EXAMINATION_STATISTIC_SUCCESS: {\n      return {\n        ...state,\n        getPeopleExaminationStatisticLoading: false,\n        peopleExaminationStatistic: action.payload,\n      };\n    }\n    case types.GET_PEOPLE_EXAMINATION_STATISTIC_FAILURE: {\n      return {\n        ...state,\n        getPeopleExaminationStatisticLoading: false,\n      };\n    }\n    case types.GET_EXAMINATION_DETAIL_STATISTIC_REQUEST: {\n      return {\n        ...state,\n        getExaminationDetailStatisticLoading: true,\n      };\n    }\n    case types.GET_EXAMINATION_DETAIL_STATISTIC_SUCCESS: {\n      return {\n        ...state,\n        getExaminationDetailStatisticLoading: false,\n        examinationDetailStatistic: action.payload,\n      };\n    }\n    case types.GET_EXAMINATION_DETAIL_STATISTIC_FAILURE: {\n      return {\n        ...state,\n        getExaminationDetailStatisticLoading: false,\n      };\n    }\n    case types.GET_GROUPED_EXAM_DETAIL_STATISTIC_REQUEST: {\n      return {\n        ...state,\n        getGroupedExamDetailLoading: true,\n      };\n    }\n    case types.GET_GROUPED_EXAM_DETAIL_STATISTIC_SUCCESS: {\n      return {\n        ...state,\n        getGroupedExamDetailLoading: false,\n        groupedExamDetail: action.payload,\n      };\n    }\n    case types.GET_GROUPED_EXAM_DETAIL_STATISTIC_FAILURE: {\n      return {\n        ...state,\n        getGroupedExamDetailLoading: false,\n      };\n    }\n    case types.GET_DASHBOARD_BY_DATE_REQUEST: {\n      return {\n        ...state,\n        getDashboardByDateLoading: true,\n      };\n    }\n    case types.GET_DASHBOARD_BY_DATE_SUCCESS: {\n      return {\n        ...state,\n        getDashboardByDateLoading: false,\n        dashboardByDate: action.payload,\n      };\n    }\n    case types.GET_DASHBOARD_BY_DATE_FAILURE: {\n      return {\n        ...state,\n        getDashboardByDateLoading: false,\n      };\n    }\n    case types.GET_CHAINS_SUMMARIES_REQUEST: {\n      const { isRange } = action.payload;\n      return {\n        ...state,\n        getChainsSummariesLoading: !isRange\n          ? true\n          : state.getChainsSummariesLoading,\n        getChainsSummariesByRangeLoading: isRange\n          ? true\n          : state.getChainsSummariesByRangeLoading,\n      };\n    }\n    case types.GET_CHAINS_SUMMARIES_SUCCESS: {\n      const { response, isRange } = action.payload;\n      return {\n        ...state,\n        chainsSummariesData: !isRange\n          ? response.find(\n              (res) =>\n                res.diseaseTypeId === 'b597cc8f-74b6-434d-8b9d-52b74595a1de',\n            ) || state.chainsSummariesData\n          : state.chainsSummariesData,\n        chainsSummariesByRangeData: isRange\n          ? [\n              ...response\n                .map((res) => ({\n                  ...res,\n                  date: moment(res.summaryDate).format('DD-MM-YYYY'),\n                }))\n                .sort((a, b) =>\n                  moment(a.date, 'DD-MM-YYYY').diff(\n                    moment(b.date, 'DD-MM-YYYY'),\n                  ),\n                ),\n            ].sort((a, b) =>\n              moment(a.date, 'DD-MM-YYYY').diff(moment(b.date, 'DD-MM-YYYY')),\n            )\n          : state.chainsSummariesByRangeData,\n        getChainsSummariesLoading: !isRange\n          ? false\n          : state.getChainsSummariesLoading,\n        getChainsSummariesByRangeLoading: isRange\n          ? false\n          : state.getChainsSummariesByRangeLoading,\n      };\n    }\n    case types.GET_CHAINS_SUMMARIES_FAILURE: {\n      const { isRange } = action.payload;\n      return {\n        ...state,\n        getChainsSummariesLoading: !isRange\n          ? false\n          : state.getChainsSummariesLoading,\n        getChainsSummariesByRangeLoading: isRange\n          ? false\n          : state.getChainsSummariesByRangeLoading,\n      };\n    }\n    case types.RELOAD_SUMMARIES_REQUEST: {\n      return {\n        ...state,\n        reloadSummariesLoading: true,\n      };\n    }\n    case types.RELOAD_SUMMARIES_SUCCESS: {\n      return {\n        ...state,\n        reloadSummariesLoading: false,\n        chainsSummariesData: {\n          ...state.chainsSummariesData,\n          summaryDetails: state.chainsSummariesData.summaryDetails.map((s) => ({\n            ...s,\n            total: action.payload.summaryDetails.find(\n              (reloadSummary) =>\n                reloadSummary.infectionTypeId === s.infectionTypeId,\n            ).total,\n            diff:\n              s.total -\n              action.payload.summaryDetails.find(\n                (reloadSummary) =>\n                  reloadSummary.infectionTypeId === s.infectionTypeId,\n              ).total,\n          })),\n        },\n      };\n    }\n    case types.RELOAD_SUMMARIES_FAILURE: {\n      return {\n        ...state,\n        reloadSummariesLoading: false,\n      };\n    }\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}