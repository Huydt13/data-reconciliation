{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\treatment\\\\components\\\\hospital\\\\AddHospitalModal.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Modal, Button } from 'semantic-ui-react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addHospitalsToFacility, getHospitals } from 'treatment/actions/hospital';\nconst AddHospitalModal = _ref => {\n  let {\n    open,\n    onClose,\n    data,\n    getData\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    control,\n    handleSubmit,\n    reset\n  } = useForm({\n    defaultValues: data\n  });\n  useEffect(() => reset(data), [reset, data]);\n  useEffect(() => {\n    if (open) {\n      dispatch(getHospitals({\n        pageSize: 1000,\n        pageIndex: 0\n      }));\n    }\n  }, [dispatch, open, data]);\n  const {\n    data: hospitalOptions\n  } = useSelector(s => s.treatment.hospital.hospitalData);\n  const getLoading = useSelector(s => s.treatment.hospital.getHospitalsLoading);\n  const addLoading = useSelector(s => s.treatment.hospital.addHospitalsLoading);\n  const onSubmit = async d => {\n    await dispatch(addHospitalsToFacility({\n      facilityId: data.id,\n      hospitalIds: d.hospitalIds\n    }));\n    onClose();\n    getData();\n  };\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Th\\xEAm b\\u1EC7nh vi\\u1EC7n \\u0111i\\u1EC1u ph\\u1ED1i\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Controller, {\n    control: control,\n    defaultValue: [],\n    name: \"hospitalIds\",\n    render: _ref2 => {\n      let {\n        onChange,\n        onBlur,\n        value\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(Form.Select, {\n        fluid: true,\n        search: true,\n        deburr: true,\n        required: true,\n        multiple: true,\n        clearable: true,\n        loading: getLoading,\n        label: \"B\\u1EC7nh vi\\u1EC7n tuy\\u1EBFn tr\\xEAn\",\n        value: value,\n        options: hospitalOptions.map(h => ({\n          text: h.description,\n          value: h.id\n        })),\n        onChange: (_, _ref3) => {\n          let {\n            value: v\n          } = _ref3;\n          return onChange(v);\n        },\n        onBlur: onBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    positive: true,\n    labelPosition: \"right\",\n    icon: \"checkmark\",\n    content: \"X\\xE1c nh\\u1EADn\",\n    loading: addLoading,\n    disabled: addLoading,\n    onClick: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })));\n};\nAddHospitalModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  getData: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    id: PropTypes.string\n  }).isRequired\n};\nexport default AddHospitalModal;","map":{"version":3,"names":["React","useEffect","PropTypes","Form","Modal","Button","useForm","Controller","useDispatch","useSelector","addHospitalsToFacility","getHospitals","AddHospitalModal","_ref","open","onClose","data","getData","dispatch","control","handleSubmit","reset","defaultValues","pageSize","pageIndex","hospitalOptions","s","treatment","hospital","hospitalData","getLoading","getHospitalsLoading","addLoading","addHospitalsLoading","onSubmit","d","facilityId","id","hospitalIds","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Header","Content","Group","widths","defaultValue","name","render","_ref2","onChange","onBlur","value","Select","fluid","search","deburr","required","multiple","clearable","loading","label","options","map","h","text","description","_","_ref3","v","Actions","positive","labelPosition","icon","content","disabled","onClick","propTypes","bool","isRequired","func","shape","string"],"sources":["H:/BAKCO/pj/data reconciliation/src/treatment/components/hospital/AddHospitalModal.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form, Modal, Button } from 'semantic-ui-react';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addHospitalsToFacility,\n  getHospitals,\n} from 'treatment/actions/hospital';\n\nconst AddHospitalModal = ({ open, onClose, data, getData }) => {\n  const dispatch = useDispatch();\n  const { control, handleSubmit, reset } = useForm({ defaultValues: data });\n  useEffect(() => reset(data), [reset, data]);\n\n  useEffect(() => {\n    if (open) {\n      dispatch(getHospitals({ pageSize: 1000, pageIndex: 0 }));\n    }\n  }, [dispatch, open, data]);\n\n  const { data: hospitalOptions } = useSelector(\n    (s) => s.treatment.hospital.hospitalData,\n  );\n  const getLoading = useSelector(\n    (s) => s.treatment.hospital.getHospitalsLoading,\n  );\n  const addLoading = useSelector(\n    (s) => s.treatment.hospital.addHospitalsLoading,\n  );\n  const onSubmit = async (d) => {\n    await dispatch(\n      addHospitalsToFacility({\n        facilityId: data.id,\n        hospitalIds: d.hospitalIds,\n      }),\n    );\n    onClose();\n    getData();\n  };\n\n  return (\n    <Modal open={open} onClose={onClose}>\n      <Modal.Header>Thêm bệnh viện điều phối</Modal.Header>\n      <Modal.Content>\n        <Form>\n          <Form.Group widths=\"equal\">\n            <Controller\n              control={control}\n              defaultValue={[]}\n              name=\"hospitalIds\"\n              render={({ onChange, onBlur, value }) => (\n                <Form.Select\n                  fluid\n                  search\n                  deburr\n                  required\n                  multiple\n                  clearable\n                  loading={getLoading}\n                  label=\"Bệnh viện tuyến trên\"\n                  value={value}\n                  options={hospitalOptions.map((h) => ({\n                    text: h.description,\n                    value: h.id,\n                  }))}\n                  onChange={(_, { value: v }) => onChange(v)}\n                  onBlur={onBlur}\n                />\n              )}\n            />\n          </Form.Group>\n        </Form>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button\n          positive\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          content=\"Xác nhận\"\n          loading={addLoading}\n          disabled={addLoading}\n          onClick={handleSubmit(onSubmit)}\n        />\n      </Modal.Actions>\n    </Modal>\n  );\n};\n\nAddHospitalModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  getData: PropTypes.func.isRequired,\n  data: PropTypes.shape({\n    id: PropTypes.string,\n  }).isRequired,\n};\n\nexport default AddHospitalModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}