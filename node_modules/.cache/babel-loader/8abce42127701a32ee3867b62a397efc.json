{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\medical-test\\\\components\\\\examinations\\\\ExportExamByTakenModal.js\";\nimport React, { useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport { Button, Form, Modal, Select } from 'semantic-ui-react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAvailableDatesForTakenExamList } from 'medical-test/actions/medical-test';\nimport { KeyboardDatePicker } from 'app/components/shared';\nimport FeeTypeSelect from './FeeTypeSelect';\nconst ExportExaminationResultModal = props => {\n  const {\n    open,\n    onClose,\n    onSubmit,\n    isAdmin\n  } = props;\n  const {\n    watch,\n    register,\n    handleSubmit,\n    setValue,\n    errors,\n    setError,\n    clearErrors\n  } = useForm();\n  const {\n    unitId,\n    feeType,\n    takenDate\n  } = watch();\n  const dispatch = useDispatch();\n  const unitInfo = useSelector(state => state.medicalTest.unitInfo);\n  useEffect(() => {\n    register({\n      name: 'unitId'\n    });\n    register({\n      name: 'takenDate'\n    });\n    register({\n      name: 'feeType'\n    });\n    if (!isAdmin && (unitInfo === null || unitInfo === void 0 ? void 0 : unitInfo.id)) {\n      setValue('unitId', unitInfo === null || unitInfo === void 0 ? void 0 : unitInfo.id);\n    }\n    // eslint-disable-next-line\n  }, [register, dispatch, isAdmin, setValue, unitInfo]);\n  const {\n    availableDayForExport,\n    loadingAvailableDayForExport,\n    prefixList,\n    exportExaminationExcelLoading\n  } = useSelector(s => s.medicalTest);\n  const disabled = useMemo(() => {\n    if (isAdmin) {\n      return !takenDate;\n    }\n    return !(unitId && takenDate);\n  }, [isAdmin, unitId, takenDate]);\n  useEffect(() => {\n    if (open && unitId) {\n      dispatch(getAvailableDatesForTakenExamList(unitId, feeType));\n    }\n    // eslint-disable-next-line\n  }, [dispatch, open, unitId]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Xu\\u1EA5t danh s\\xE1ch k\\u1EBFt qu\\u1EA3 theo ng\\xE0y l\\u1EA5y m\\u1EABu\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    loading: loadingAvailableDayForExport,\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, isAdmin && /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    search: true,\n    deburr: true,\n    label: \"C\\u01A1 s\\u1EDF l\\u1EA5y m\\u1EABu\",\n    control: Select,\n    options: prefixList.map(z => ({\n      key: z.id,\n      text: z.name,\n      value: z.id\n    })),\n    onChange: (e, _ref) => {\n      let {\n        value\n      } = _ref;\n      setValue('unitId', value);\n      setValue('takenDate', undefined);\n      if (takenDate) {\n        toast.info('Chọn lại ngày');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FeeTypeSelect, {\n    clearable: true,\n    value: watch('feeType'),\n    onChange: v => {\n      setValue('feeType', v);\n      setValue('takenDate', undefined);\n      if (unitId) {\n        dispatch(getAvailableDatesForTakenExamList(unitId, v));\n        if (takenDate) {\n          toast.info('Chọn lại ngày');\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    label: \"Ng\\xE0y l\\u1EA5y m\\u1EABu\",\n    control: KeyboardDatePicker,\n    disabledDays: d => !(availableDayForExport.length === 0 ? [] : availableDayForExport).map(ad => moment(ad).format('YYYY-MM-DD')).includes(moment(d).format('YYYY-MM-DD')),\n    onChange: date => {\n      clearErrors('takenDate');\n      setValue('takenDate', date);\n    },\n    onError: e => setError('takenDate', e),\n    error: Boolean(errors.takenDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    content: \"X\\xE1c nh\\u1EADn\",\n    loading: exportExaminationExcelLoading,\n    disabled: disabled || exportExaminationExcelLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }))));\n};\nExportExaminationResultModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired\n};\nexport default ExportExaminationResultModal;","map":{"version":3,"names":["React","useEffect","useMemo","PropTypes","moment","toast","Button","Form","Modal","Select","useForm","useDispatch","useSelector","getAvailableDatesForTakenExamList","KeyboardDatePicker","FeeTypeSelect","ExportExaminationResultModal","props","open","onClose","onSubmit","isAdmin","watch","register","handleSubmit","setValue","errors","setError","clearErrors","unitId","feeType","takenDate","dispatch","unitInfo","state","medicalTest","name","id","availableDayForExport","loadingAvailableDayForExport","prefixList","exportExaminationExcelLoading","s","disabled","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Header","Content","loading","Group","widths","Field","required","search","deburr","label","control","options","map","z","key","text","value","onChange","e","_ref","undefined","info","clearable","v","disabledDays","d","length","ad","format","includes","date","onError","error","Boolean","primary","content","propTypes","bool","isRequired","func"],"sources":["H:/BAKCO/pj/data reconciliation/src/medical-test/components/examinations/ExportExamByTakenModal.js"],"sourcesContent":["import React, { useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\n\nimport { Button, Form, Modal, Select } from 'semantic-ui-react';\n\nimport { useForm } from 'react-hook-form';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAvailableDatesForTakenExamList } from 'medical-test/actions/medical-test';\n\nimport { KeyboardDatePicker } from 'app/components/shared';\nimport FeeTypeSelect from './FeeTypeSelect';\n\nconst ExportExaminationResultModal = (props) => {\n  const { open, onClose, onSubmit, isAdmin } = props;\n  const {\n    watch,\n    register,\n    handleSubmit,\n    setValue,\n    errors,\n    setError,\n    clearErrors,\n  } = useForm();\n  const { unitId, feeType, takenDate } = watch();\n\n  const dispatch = useDispatch();\n\n  const unitInfo = useSelector((state) => state.medicalTest.unitInfo);\n  useEffect(() => {\n    register({ name: 'unitId' });\n    register({ name: 'takenDate' });\n    register({ name: 'feeType' });\n    if (!isAdmin && unitInfo?.id) {\n      setValue('unitId', unitInfo?.id);\n    }\n    // eslint-disable-next-line\n  }, [register, dispatch, isAdmin, setValue, unitInfo]);\n  const {\n    availableDayForExport,\n    loadingAvailableDayForExport,\n    prefixList,\n    exportExaminationExcelLoading,\n  } = useSelector((s) => s.medicalTest);\n\n  const disabled = useMemo(() => {\n    if (isAdmin) {\n      return !takenDate;\n    }\n    return !(unitId && takenDate);\n  }, [isAdmin, unitId, takenDate]);\n\n  useEffect(() => {\n    if (open && unitId) {\n      dispatch(getAvailableDatesForTakenExamList(unitId, feeType));\n    }\n    // eslint-disable-next-line\n  }, [dispatch, open, unitId]);\n\n  return (\n    <Modal open={open} onClose={onClose}>\n      <Modal.Header>Xuất danh sách kết quả theo ngày lấy mẫu</Modal.Header>\n      <Modal.Content>\n        <Form\n          loading={loadingAvailableDayForExport}\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <Form.Group widths=\"equal\">\n            {isAdmin && (\n              <Form.Field\n                required\n                search\n                deburr\n                label=\"Cơ sở lấy mẫu\"\n                control={Select}\n                options={prefixList.map((z) => ({\n                  key: z.id,\n                  text: z.name,\n                  value: z.id,\n                }))}\n                onChange={(e, { value }) => {\n                  setValue('unitId', value);\n                  setValue('takenDate', undefined);\n                  if (takenDate) {\n                    toast.info('Chọn lại ngày');\n                  }\n                }}\n              />\n            )}\n\n            <FeeTypeSelect\n              clearable\n              value={watch('feeType')}\n              onChange={(v) => {\n                setValue('feeType', v);\n                setValue('takenDate', undefined);\n                if (unitId) {\n                  dispatch(getAvailableDatesForTakenExamList(unitId, v));\n                  if (takenDate) {\n                    toast.info('Chọn lại ngày');\n                  }\n                }\n              }}\n            />\n\n            <Form.Field\n              required\n              label=\"Ngày lấy mẫu\"\n              control={KeyboardDatePicker}\n              disabledDays={(d) =>\n                !(\n                  availableDayForExport.length === 0\n                    ? []\n                    : availableDayForExport\n                )\n                  .map((ad) => moment(ad).format('YYYY-MM-DD'))\n                  .includes(moment(d).format('YYYY-MM-DD'))\n              }\n              onChange={(date) => {\n                clearErrors('takenDate');\n                setValue('takenDate', date);\n              }}\n              onError={(e) => setError('takenDate', e)}\n              error={Boolean(errors.takenDate)}\n            />\n          </Form.Group>\n          <Button\n            primary\n            content=\"Xác nhận\"\n            loading={exportExaminationExcelLoading}\n            disabled={disabled || exportExaminationExcelLoading}\n          />\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nExportExaminationResultModal.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n};\n\nexport default ExportExaminationResultModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}