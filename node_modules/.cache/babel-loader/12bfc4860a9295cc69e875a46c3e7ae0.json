{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\profile\\\\pages\\\\ProfileDetailPage.js\";\nimport React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { FiDownload, FiGitMerge } from \"react-icons/fi\";\nimport { Loader, Tab, Button } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { createProfile, getProfile, updateProfile, verifyProfile } from \"profile/actions/profile\";\nimport { mergeProfile } from \"medical-test/actions/medical-test\";\nimport { showConfirmModal } from \"app/actions/global\";\nimport { CreateFromType, SubjectDetailsTab, SubjectInfectionType } from \"infection-chain/utils/constants\";\nimport InfectionChainInformation from \"infection-chain/components/subject/information/InfectionChainInformation\";\nimport ProfileInformation from \"infection-chain/components/subject/information/SubjectForm\";\n// import QuarantineTable from 'infection-chain/components/subject/quarantine/QuarantineTable';\nimport CreateProfileModal from \"profile/components/CreateProfileModal\";\n// import QuarantineHistoryTable from 'infection-chain/components/subject/quarantine/QuarantineHistoryTable';\nimport SubjectInfectionChainModal from \"infection-chain/components/subject/information/SubjectInfectionChainModal\";\nimport PersonalExamHistory from \"infection-chain/components/subject/medical-test/PersonalExamHistory\";\nimport PersonalQuickTestHistoryTable from \"medical-test/components/quick-test/PersonalQuickTestHistoryTable\";\nimport DiseaseHistoryTable from \"infection-chain/components/subject/information/DiseaseHistoryTable\";\nconst StyledWrapper = styled.div`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  position: relative;\n`;\nconst ProfileDetailPage = () => {\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const {\n    profile,\n    getProfileLoading,\n    createProfileLoading,\n    updateProfileLoading,\n    verifyProfileLoading\n  } = useSelector(state => state.profile);\n  const {\n    relatedProfileId,\n    subjectRelated,\n    fromContactData,\n    toContactData\n  } = useSelector(state => state.subject);\n  const {\n    mergeProfileLoading,\n    createProfileFromExaminationLoading\n  } = useSelector(state => state.medicalTest);\n  const handleRefresh = useCallback(() => {\n    if (id.indexOf(\"-\") === -1) {\n      dispatch(getProfile(id));\n      window.scrollTo(0, 0);\n    }\n  }, [dispatch, id]);\n  useEffect(() => {\n    handleRefresh();\n  }, [handleRefresh]);\n  useEffect(() => {\n    var _profile$fullName;\n    document.title = (_profile$fullName = profile === null || profile === void 0 ? void 0 : profile.fullName) !== null && _profile$fullName !== void 0 ? _profile$fullName : \"CDS\";\n    return () => {\n      document.title = \"CDS\";\n    };\n    // eslint-disable-next-line\n  }, [profile]);\n  const handleSubmit = async (data, isVerified) => {\n    const {\n      dateOfBirth,\n      profileCreationReason: {\n        isFromDomesticInfectedZone,\n        countryValue,\n        domesticInfectedProvinceValue,\n        reason,\n        reasonType,\n        reasonAttribute,\n        realtedPositiveProfileId\n      }\n    } = data || {\n      dateOfBirth: \"\",\n      profileCreationReason: {\n        isFromDomesticInfectedZone: false,\n        countryValue: \"\",\n        domesticInfectedProvinceValue: \"\",\n        reason: \"\",\n        reasonType: \"\",\n        reasonAttribute: \"\",\n        realtedPositiveProfileId: 0\n      }\n    };\n    let formattedDOB = \"\";\n    if ((dateOfBirth === null || dateOfBirth === void 0 ? void 0 : dateOfBirth.length) === 4) {\n      formattedDOB = moment(dateOfBirth, \"YYYY\").startOf(\"year\").format(\"YYYY-MM-DD\");\n    }\n    const profileData = {\n      ...data,\n      id,\n      dateOfBirth: formattedDOB || dateOfBirth,\n      profileCreationReason: {\n        isFromDomesticInfectedZone,\n        countryValue,\n        domesticInfectedProvinceValue,\n        reason,\n        reasonType,\n        reasonAttribute,\n        realtedPositiveProfileId: relatedProfileId || realtedPositiveProfileId || undefined\n      }\n    };\n    if (isVerified) {\n      dispatch(showConfirmModal(\"Xác minh thông tin đối tượng?\", () => {\n        dispatch(verifyProfile(profileData)).then(() => {\n          dispatch(getProfile(id));\n        });\n      }));\n    } else {\n      dispatch(id ? updateProfile(profileData) : createProfile(profileData)).then(() => {\n        dispatch(getProfile(id));\n      });\n    }\n  };\n  const [createProfileModal, setCreateProfileModal] = useState(false);\n  const handleFillProfileInformation = async data => {\n    const {\n      dateOfBirth\n    } = data;\n    let formattedDOB = \"\";\n    if ((dateOfBirth === null || dateOfBirth === void 0 ? void 0 : dateOfBirth.length) === 4) {\n      formattedDOB = moment(dateOfBirth, \"YYYY\").startOf(\"year\").format(\"YYYY-MM-DD\");\n    }\n    const profileData = {\n      ...data,\n      dateOfBirth: formattedDOB || dateOfBirth || \"\",\n      createFromType: CreateFromType.EXAMINATION\n    };\n    const {\n      profileId\n    } = await dispatch(createProfile(profileData));\n    await dispatch(mergeProfile(id, profileId));\n    setCreateProfileModal(false);\n    history.push(`/profile/${profileId}`);\n  };\n  const [defaultActiveIndex, setDefaultActiveIndex] = useState(window.location.href.includes(\"chain\") ? 1 : 0);\n  const {\n    tab\n  } = useParams();\n  useEffect(() => {\n    switch (tab) {\n      case SubjectDetailsTab.INFOMATION:\n        setDefaultActiveIndex(0);\n        break;\n      case SubjectDetailsTab.INFECTION_CHAIN:\n        setDefaultActiveIndex(1);\n        break;\n      case SubjectDetailsTab.MEDICAL_TEST:\n        setDefaultActiveIndex(2);\n        break;\n      case SubjectDetailsTab.QUARANTINE:\n        setDefaultActiveIndex(3);\n        break;\n      case SubjectDetailsTab.TREATMENT:\n        setDefaultActiveIndex(4);\n        break;\n      default:\n        break;\n    }\n  }, [tab]);\n  const profileInformation = useMemo(() => /*#__PURE__*/React.createElement(ProfileInformation, {\n    initialData: profile,\n    loading: getProfileLoading || createProfileLoading || updateProfileLoading || verifyProfileLoading || mergeProfileLoading || createProfileFromExaminationLoading,\n    onSubmit: handleSubmit,\n    onReload: () => {\n      dispatch(getProfile(id));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }),\n  // eslint-disable-next-line\n  [profile, getProfileLoading, updateProfileLoading, verifyProfileLoading]);\n  const medicalTestTable = useMemo(() => /*#__PURE__*/React.createElement(PersonalExamHistory, {\n    profile: profile,\n    loading: getProfileLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 11\n    }\n  }),\n  // eslint-disable-next-line\n  [profile, getProfileLoading]);\n\n  // const quarantineTable = useMemo(\n  //   () => (\n  //     <QuarantineHistoryTable\n  //       profile={profile}\n  //       loading={getProfileLoading}\n  //       onRefresh={handleRefresh}\n  //     />\n  //   ),\n  //   // eslint-disable-next-line\n  //   [profile, getProfileLoading],\n  // );\n\n  // const treatmentTable = useMemo(\n  //   () => <TreatmentTable profile={profile} loading={getProfileLoading} />,\n  //   [profile, getProfileLoading],\n  // );\n\n  const diseaseHistoryTable = useMemo(() => /*#__PURE__*/React.createElement(DiseaseHistoryTable, {\n    profile: profile,\n    loading: getProfileLoading,\n    onRefresh: handleRefresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }),\n  // eslint-disable-next-line\n  [profile, getProfileLoading]);\n  const quickTestTable = useMemo(() => /*#__PURE__*/React.createElement(PersonalQuickTestHistoryTable, {\n    profile: profile,\n    loading: getProfileLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }), [profile, getProfileLoading]);\n  const panes = [{\n    title: \"Thông tin đối tượng\",\n    component: profileInformation\n  }, {\n    title: \"Chuỗi\",\n    component: /*#__PURE__*/React.createElement(InfectionChainInformation, {\n      profileId: profile === null || profile === void 0 ? void 0 : profile.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 18\n      }\n    })\n  }, {\n    title: \"Xét nghiệm PCR\",\n    component: medicalTestTable\n  }, {\n    title: \"Test nhanh\",\n    component: quickTestTable\n  }, {\n    title: \"Ca bệnh\",\n    component: diseaseHistoryTable\n  }\n  // { title: 'Cách ly', component: quarantineTable },\n  // { title: 'Điều trị', component: treatmentTable },\n  ];\n\n  const [openGraph, setOpenGraph] = useState(false);\n  const {\n    pageCount: pageCountFrom\n  } = fromContactData || {\n    pageCount: 0\n  };\n  const {\n    pageCount: pageCountTo\n  } = toContactData || {\n    pageCount: 0\n  };\n  return /*#__PURE__*/React.createElement(StyledWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    active: getProfileLoading,\n    inline: \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }), (subjectRelated === null || subjectRelated === void 0 ? void 0 : subjectRelated.isVerified) && pageCountFrom + pageCountTo > 0 && defaultActiveIndex === 1 && /*#__PURE__*/React.createElement(Button, {\n    animated: true,\n    color: \"teal\",\n    onClick: () => {\n      setOpenGraph(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button.Content, {\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, \"S\\u01A1 \\u0111\\u1ED3 chu\\u1ED7i l\\xE2y truy\\u1EC1n\"), /*#__PURE__*/React.createElement(Button.Content, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiGitMerge, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 15\n    }\n  }))), (subjectRelated === null || subjectRelated === void 0 ? void 0 : subjectRelated.type) === SubjectInfectionType.F0 && pageCountFrom + pageCountTo > 0 && /*#__PURE__*/React.createElement(Button, {\n    animated: true,\n    color: \"yellow\",\n    onClick: () => {\n      window.open(`/pdf/${subjectRelated.id}`, \"_blank\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button.Content, {\n    visible: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  }, \"T\\u1EA3i PDF b\\xE1o c\\xE1o chu\\u1ED7i\"), /*#__PURE__*/React.createElement(Button.Content, {\n    hidden: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiDownload, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 15\n    }\n  }))), profile && /*#__PURE__*/React.createElement(Tab, {\n    defaultActiveIndex: defaultActiveIndex,\n    renderActiveOnly: true,\n    panes: panes.map((p, i) => ({\n      menuItem: {\n        key: p.title,\n        content: p.title,\n        // disable treatment\n        disabled: i === 5\n      },\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 27\n        }\n      }, p.component)\n    })),\n    menu: {\n      secondary: true,\n      pointing: true\n    },\n    onTabChange: (e, _ref) => {\n      let {\n        activeIndex\n      } = _ref;\n      return setDefaultActiveIndex(activeIndex);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }\n  }), !profile && !getProfileLoading && /*#__PURE__*/React.createElement(Tab, {\n    className: \"anonymous-examination-tab\",\n    defaultActiveIndex: 1,\n    panes: [{\n      menuItem: {\n        key: \"Hồ sơ\",\n        content: \"Hồ sơ (thiếu)\",\n        icon: \"warning circle\",\n        color: \"red\"\n      },\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        primary: true,\n        content: \"B\\u1ED5 sung h\\u1ED3 s\\u01A1\",\n        onClick: () => setCreateProfileModal(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(CreateProfileModal, {\n        key: createProfileModal ? \"OpenCreateProfileModal\" : \"CloseCreateProfileModal\",\n        open: createProfileModal,\n        onClose: () => setCreateProfileModal(false),\n        onSubmit: handleFillProfileInformation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 19\n        }\n      }))\n    }, {\n      menuItem: \"Xét nghiệm\",\n      render: () => /*#__PURE__*/React.createElement(Tab.Pane, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 29\n        }\n      }, medicalTestTable)\n    }],\n    menu: {\n      secondary: true,\n      pointing: true\n    },\n    onTabChange: (e, _ref2) => {\n      let {\n        activeIndex\n      } = _ref2;\n      if (activeIndex === 0) {\n        setCreateProfileModal(true);\n      }\n      setDefaultActiveIndex(activeIndex);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SubjectInfectionChainModal, {\n    key: openGraph ? \"SubjectInfectionModalOpen\" : \"SubjectInfectionModalClose\",\n    open: openGraph,\n    subjectId: subjectRelated === null || subjectRelated === void 0 ? void 0 : subjectRelated.id,\n    onClose: () => setOpenGraph(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }\n  }));\n};\nexport default ProfileDetailPage;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","useParams","useHistory","moment","styled","FiDownload","FiGitMerge","Loader","Tab","Button","useSelector","useDispatch","createProfile","getProfile","updateProfile","verifyProfile","mergeProfile","showConfirmModal","CreateFromType","SubjectDetailsTab","SubjectInfectionType","InfectionChainInformation","ProfileInformation","CreateProfileModal","SubjectInfectionChainModal","PersonalExamHistory","PersonalQuickTestHistoryTable","DiseaseHistoryTable","StyledWrapper","div","ProfileDetailPage","id","history","dispatch","profile","getProfileLoading","createProfileLoading","updateProfileLoading","verifyProfileLoading","state","relatedProfileId","subjectRelated","fromContactData","toContactData","subject","mergeProfileLoading","createProfileFromExaminationLoading","medicalTest","handleRefresh","indexOf","window","scrollTo","_profile$fullName","document","title","fullName","handleSubmit","data","isVerified","dateOfBirth","profileCreationReason","isFromDomesticInfectedZone","countryValue","domesticInfectedProvinceValue","reason","reasonType","reasonAttribute","realtedPositiveProfileId","formattedDOB","length","startOf","format","profileData","undefined","then","createProfileModal","setCreateProfileModal","handleFillProfileInformation","createFromType","EXAMINATION","profileId","push","defaultActiveIndex","setDefaultActiveIndex","location","href","includes","tab","INFOMATION","INFECTION_CHAIN","MEDICAL_TEST","QUARANTINE","TREATMENT","profileInformation","createElement","initialData","loading","onSubmit","onReload","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","medicalTestTable","diseaseHistoryTable","onRefresh","quickTestTable","panes","component","openGraph","setOpenGraph","pageCount","pageCountFrom","pageCountTo","active","inline","animated","color","onClick","Content","visible","hidden","type","F0","open","renderActiveOnly","map","p","i","menuItem","key","content","disabled","render","Pane","menu","secondary","pointing","onTabChange","e","_ref","activeIndex","className","icon","primary","onClose","_ref2","subjectId"],"sources":["H:/BAKCO/pj/data reconciliation/src/profile/pages/ProfileDetailPage.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\n\nimport { FiDownload, FiGitMerge } from \"react-icons/fi\";\nimport { Loader, Tab, Button } from \"semantic-ui-react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  createProfile,\n  getProfile,\n  updateProfile,\n  verifyProfile,\n} from \"profile/actions/profile\";\nimport { mergeProfile } from \"medical-test/actions/medical-test\";\n\nimport { showConfirmModal } from \"app/actions/global\";\nimport {\n  CreateFromType,\n  SubjectDetailsTab,\n  SubjectInfectionType,\n} from \"infection-chain/utils/constants\";\n\nimport InfectionChainInformation from \"infection-chain/components/subject/information/InfectionChainInformation\";\nimport ProfileInformation from \"infection-chain/components/subject/information/SubjectForm\";\n// import QuarantineTable from 'infection-chain/components/subject/quarantine/QuarantineTable';\nimport CreateProfileModal from \"profile/components/CreateProfileModal\";\n// import QuarantineHistoryTable from 'infection-chain/components/subject/quarantine/QuarantineHistoryTable';\nimport SubjectInfectionChainModal from \"infection-chain/components/subject/information/SubjectInfectionChainModal\";\nimport PersonalExamHistory from \"infection-chain/components/subject/medical-test/PersonalExamHistory\";\nimport PersonalQuickTestHistoryTable from \"medical-test/components/quick-test/PersonalQuickTestHistoryTable\";\nimport DiseaseHistoryTable from \"infection-chain/components/subject/information/DiseaseHistoryTable\";\n\nconst StyledWrapper = styled.div`\n  padding-top: 10px;\n  padding-bottom: 10px;\n  position: relative;\n`;\n\nconst ProfileDetailPage = () => {\n  const { id } = useParams();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const {\n    profile,\n    getProfileLoading,\n    createProfileLoading,\n    updateProfileLoading,\n    verifyProfileLoading,\n  } = useSelector((state) => state.profile);\n  const { relatedProfileId, subjectRelated, fromContactData, toContactData } =\n    useSelector((state) => state.subject);\n  const { mergeProfileLoading, createProfileFromExaminationLoading } =\n    useSelector((state) => state.medicalTest);\n\n  const handleRefresh = useCallback(() => {\n    if (id.indexOf(\"-\") === -1) {\n      dispatch(getProfile(id));\n      window.scrollTo(0, 0);\n    }\n  }, [dispatch, id]);\n\n  useEffect(() => {\n    handleRefresh();\n  }, [handleRefresh]);\n\n  useEffect(() => {\n    document.title = profile?.fullName ?? \"CDS\";\n    return () => {\n      document.title = \"CDS\";\n    };\n    // eslint-disable-next-line\n  }, [profile]);\n\n  const handleSubmit = async (data, isVerified) => {\n    const {\n      dateOfBirth,\n      profileCreationReason: {\n        isFromDomesticInfectedZone,\n        countryValue,\n        domesticInfectedProvinceValue,\n        reason,\n        reasonType,\n        reasonAttribute,\n        realtedPositiveProfileId,\n      },\n    } = data || {\n      dateOfBirth: \"\",\n      profileCreationReason: {\n        isFromDomesticInfectedZone: false,\n        countryValue: \"\",\n        domesticInfectedProvinceValue: \"\",\n        reason: \"\",\n        reasonType: \"\",\n        reasonAttribute: \"\",\n        realtedPositiveProfileId: 0,\n      },\n    };\n    let formattedDOB = \"\";\n    if (dateOfBirth?.length === 4) {\n      formattedDOB = moment(dateOfBirth, \"YYYY\")\n        .startOf(\"year\")\n        .format(\"YYYY-MM-DD\");\n    }\n\n    const profileData = {\n      ...data,\n      id,\n      dateOfBirth: formattedDOB || dateOfBirth,\n      profileCreationReason: {\n        isFromDomesticInfectedZone,\n        countryValue,\n        domesticInfectedProvinceValue,\n        reason,\n        reasonType,\n        reasonAttribute,\n        realtedPositiveProfileId:\n          relatedProfileId || realtedPositiveProfileId || undefined,\n      },\n    };\n\n    if (isVerified) {\n      dispatch(\n        showConfirmModal(\"Xác minh thông tin đối tượng?\", () => {\n          dispatch(verifyProfile(profileData)).then(() => {\n            dispatch(getProfile(id));\n          });\n        })\n      );\n    } else {\n      dispatch(\n        id ? updateProfile(profileData) : createProfile(profileData)\n      ).then(() => {\n        dispatch(getProfile(id));\n      });\n    }\n  };\n\n  const [createProfileModal, setCreateProfileModal] = useState(false);\n  const handleFillProfileInformation = async (data) => {\n    const { dateOfBirth } = data;\n    let formattedDOB = \"\";\n    if (dateOfBirth?.length === 4) {\n      formattedDOB = moment(dateOfBirth, \"YYYY\")\n        .startOf(\"year\")\n        .format(\"YYYY-MM-DD\");\n    }\n    const profileData = {\n      ...data,\n      dateOfBirth: formattedDOB || dateOfBirth || \"\",\n      createFromType: CreateFromType.EXAMINATION,\n    };\n    const { profileId } = await dispatch(createProfile(profileData));\n    await dispatch(mergeProfile(id, profileId));\n    setCreateProfileModal(false);\n    history.push(`/profile/${profileId}`);\n  };\n\n  const [defaultActiveIndex, setDefaultActiveIndex] = useState(\n    window.location.href.includes(\"chain\") ? 1 : 0\n  );\n  const { tab } = useParams();\n  useEffect(() => {\n    switch (tab) {\n      case SubjectDetailsTab.INFOMATION:\n        setDefaultActiveIndex(0);\n        break;\n      case SubjectDetailsTab.INFECTION_CHAIN:\n        setDefaultActiveIndex(1);\n        break;\n      case SubjectDetailsTab.MEDICAL_TEST:\n        setDefaultActiveIndex(2);\n        break;\n      case SubjectDetailsTab.QUARANTINE:\n        setDefaultActiveIndex(3);\n        break;\n      case SubjectDetailsTab.TREATMENT:\n        setDefaultActiveIndex(4);\n        break;\n      default:\n        break;\n    }\n  }, [tab]);\n\n  const profileInformation = useMemo(\n    () => (\n      <ProfileInformation\n        initialData={profile}\n        loading={\n          getProfileLoading ||\n          createProfileLoading ||\n          updateProfileLoading ||\n          verifyProfileLoading ||\n          mergeProfileLoading ||\n          createProfileFromExaminationLoading\n        }\n        onSubmit={handleSubmit}\n        onReload={() => {\n          dispatch(getProfile(id));\n        }}\n      />\n    ),\n    // eslint-disable-next-line\n    [profile, getProfileLoading, updateProfileLoading, verifyProfileLoading]\n  );\n\n  const medicalTestTable = useMemo(\n    () => <PersonalExamHistory profile={profile} loading={getProfileLoading} />,\n    // eslint-disable-next-line\n    [profile, getProfileLoading]\n  );\n\n  // const quarantineTable = useMemo(\n  //   () => (\n  //     <QuarantineHistoryTable\n  //       profile={profile}\n  //       loading={getProfileLoading}\n  //       onRefresh={handleRefresh}\n  //     />\n  //   ),\n  //   // eslint-disable-next-line\n  //   [profile, getProfileLoading],\n  // );\n\n  // const treatmentTable = useMemo(\n  //   () => <TreatmentTable profile={profile} loading={getProfileLoading} />,\n  //   [profile, getProfileLoading],\n  // );\n\n  const diseaseHistoryTable = useMemo(\n    () => (\n      <DiseaseHistoryTable\n        profile={profile}\n        loading={getProfileLoading}\n        onRefresh={handleRefresh}\n      />\n    ),\n    // eslint-disable-next-line\n    [profile, getProfileLoading]\n  );\n  const quickTestTable = useMemo(\n    () => (\n      <PersonalQuickTestHistoryTable\n        profile={profile}\n        loading={getProfileLoading}\n      />\n    ),\n    [profile, getProfileLoading]\n  );\n\n  const panes = [\n    { title: \"Thông tin đối tượng\", component: profileInformation },\n    {\n      title: \"Chuỗi\",\n      component: <InfectionChainInformation profileId={profile?.id} />,\n    },\n    { title: \"Xét nghiệm PCR\", component: medicalTestTable },\n    { title: \"Test nhanh\", component: quickTestTable },\n    { title: \"Ca bệnh\", component: diseaseHistoryTable },\n    // { title: 'Cách ly', component: quarantineTable },\n    // { title: 'Điều trị', component: treatmentTable },\n  ];\n\n  const [openGraph, setOpenGraph] = useState(false);\n  const { pageCount: pageCountFrom } = fromContactData || { pageCount: 0 };\n  const { pageCount: pageCountTo } = toContactData || { pageCount: 0 };\n  return (\n    <StyledWrapper>\n      <Loader active={getProfileLoading} inline=\"centered\" />\n      {subjectRelated?.isVerified &&\n        pageCountFrom + pageCountTo > 0 &&\n        defaultActiveIndex === 1 && (\n          <Button\n            animated\n            color=\"teal\"\n            onClick={() => {\n              setOpenGraph(true);\n            }}\n          >\n            <Button.Content visible>Sơ đồ chuỗi lây truyền</Button.Content>\n            <Button.Content hidden>\n              <FiGitMerge />\n            </Button.Content>\n          </Button>\n        )}\n\n      {subjectRelated?.type === SubjectInfectionType.F0 &&\n        pageCountFrom + pageCountTo > 0 && (\n          <Button\n            animated\n            color=\"yellow\"\n            onClick={() => {\n              window.open(`/pdf/${subjectRelated.id}`, \"_blank\");\n            }}\n          >\n            <Button.Content visible>Tải PDF báo cáo chuỗi</Button.Content>\n            <Button.Content hidden>\n              <FiDownload />\n            </Button.Content>\n          </Button>\n        )}\n      {profile && (\n        <Tab\n          defaultActiveIndex={defaultActiveIndex}\n          renderActiveOnly\n          panes={panes.map((p, i) => ({\n            menuItem: {\n              key: p.title,\n              content: p.title,\n              // disable treatment\n              disabled: i === 5,\n            },\n            render: () => <Tab.Pane>{p.component}</Tab.Pane>,\n          }))}\n          menu={{ secondary: true, pointing: true }}\n          onTabChange={(e, { activeIndex }) =>\n            setDefaultActiveIndex(activeIndex)\n          }\n        />\n      )}\n      {!profile && !getProfileLoading && (\n        <Tab\n          className=\"anonymous-examination-tab\"\n          defaultActiveIndex={1}\n          panes={[\n            {\n              menuItem: {\n                key: \"Hồ sơ\",\n                content: \"Hồ sơ (thiếu)\",\n                icon: \"warning circle\",\n                color: \"red\",\n              },\n              render: () => (\n                <Tab.Pane>\n                  <Button\n                    primary\n                    content=\"Bổ sung hồ sơ\"\n                    onClick={() => setCreateProfileModal(true)}\n                  />\n                  <CreateProfileModal\n                    key={\n                      createProfileModal\n                        ? \"OpenCreateProfileModal\"\n                        : \"CloseCreateProfileModal\"\n                    }\n                    open={createProfileModal}\n                    onClose={() => setCreateProfileModal(false)}\n                    onSubmit={handleFillProfileInformation}\n                  />\n                </Tab.Pane>\n              ),\n            },\n            {\n              menuItem: \"Xét nghiệm\",\n              render: () => <Tab.Pane>{medicalTestTable}</Tab.Pane>,\n            },\n          ]}\n          menu={{ secondary: true, pointing: true }}\n          onTabChange={(e, { activeIndex }) => {\n            if (activeIndex === 0) {\n              setCreateProfileModal(true);\n            }\n            setDefaultActiveIndex(activeIndex);\n          }}\n        />\n      )}\n\n      <SubjectInfectionChainModal\n        key={\n          openGraph ? \"SubjectInfectionModalOpen\" : \"SubjectInfectionModalClose\"\n        }\n        open={openGraph}\n        subjectId={subjectRelated?.id}\n        onClose={() => setOpenGraph(false)}\n      />\n    </StyledWrapper>\n  );\n};\n\nexport default ProfileDetailPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}