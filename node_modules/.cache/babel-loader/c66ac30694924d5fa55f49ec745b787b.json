{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\infection-chain\\\\components\\\\subject\\\\SubjectChainsTable.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from 'semantic-ui-react';\nimport { DataTable } from 'app/components/shared';\nimport { FiFileText, FiGitMerge } from 'react-icons/fi';\nimport SubjectInfectionChainModal from './information/SubjectInfectionChainModal';\nconst columns = [{\n  Header: '#',\n  accessor: 'index'\n}, {\n  Header: 'Loại',\n  formatter: row => {\n    var _row$infectionType$co, _row$infectionType, _row$infectionType$na, _row$infectionType2;\n    return /*#__PURE__*/React.createElement(Label, {\n      basic: true,\n      color: (_row$infectionType$co = row === null || row === void 0 ? void 0 : (_row$infectionType = row.infectionType) === null || _row$infectionType === void 0 ? void 0 : _row$infectionType.colorCode) !== null && _row$infectionType$co !== void 0 ? _row$infectionType$co : 'black',\n      content: (_row$infectionType$na = row === null || row === void 0 ? void 0 : (_row$infectionType2 = row.infectionType) === null || _row$infectionType2 === void 0 ? void 0 : _row$infectionType2.name) !== null && _row$infectionType$na !== void 0 ? _row$infectionType$na : 'F?',\n      className: \"type-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    });\n  }\n}, {\n  Header: 'Tên chuỗi',\n  accessor: 'chainName'\n}];\nconst SubjectChainsTable = _ref => {\n  let {\n    profileId,\n    profileName,\n    data\n  } = _ref;\n  const [selectingId, setSelectingId] = useState('');\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataTable, {\n    title: `Danh sách chuỗi của ${profileName}`,\n    columns: columns,\n    data: (data || []).map((r, i) => ({\n      ...r,\n      index: i + 1\n    })),\n    actions: [{\n      icon: /*#__PURE__*/React.createElement(FiGitMerge, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }\n      }),\n      title: 'Xem sơ đồ chuỗi lây nhiễm',\n      color: 'teal',\n      onClick: _ref2 => {\n        let {\n          chainId\n        } = _ref2;\n        return setSelectingId(chainId);\n      }\n    }, {\n      icon: /*#__PURE__*/React.createElement(FiFileText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }),\n      title: 'Hồ sơ',\n      color: 'blue',\n      onClick: _ref3 => {\n        let {\n          chainId\n        } = _ref3;\n        return window.open(`/profile/${profileId}/infection-chain/${chainId}`, '_blank');\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SubjectInfectionChainModal, {\n    open: Boolean(selectingId),\n    chainId: selectingId,\n    onClose: () => setSelectingId(undefined),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\nSubjectChainsTable.propTypes = {\n  profileId: PropTypes.number.isRequired,\n  profileName: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired\n};\nexport default SubjectChainsTable;","map":{"version":3,"names":["React","useState","PropTypes","Label","DataTable","FiFileText","FiGitMerge","SubjectInfectionChainModal","columns","Header","accessor","formatter","row","_row$infectionType$co","_row$infectionType","_row$infectionType$na","_row$infectionType2","createElement","basic","color","infectionType","colorCode","content","name","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","SubjectChainsTable","_ref","profileId","profileName","data","selectingId","setSelectingId","Fragment","title","map","r","i","index","actions","icon","onClick","_ref2","chainId","_ref3","window","open","Boolean","onClose","undefined","propTypes","number","isRequired","string","arrayOf","shape"],"sources":["H:/BAKCO/pj/cds/src/infection-chain/components/subject/SubjectChainsTable.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from 'semantic-ui-react';\nimport { DataTable } from 'app/components/shared';\nimport { FiFileText, FiGitMerge } from 'react-icons/fi';\nimport SubjectInfectionChainModal from './information/SubjectInfectionChainModal';\n\nconst columns = [\n  { Header: '#', accessor: 'index' },\n  {\n    Header: 'Loại',\n    formatter: (row) => (\n      <Label\n        basic\n        color={row?.infectionType?.colorCode ?? 'black'}\n        content={row?.infectionType?.name ?? 'F?'}\n        className=\"type-label\"\n      />\n    ),\n  },\n  { Header: 'Tên chuỗi', accessor: 'chainName' },\n];\nconst SubjectChainsTable = ({ profileId, profileName, data }) => {\n  const [selectingId, setSelectingId] = useState('');\n  return (\n    <>\n      <DataTable\n        title={`Danh sách chuỗi của ${profileName}`}\n        columns={columns}\n        data={(data || []).map((r, i) => ({ ...r, index: i + 1 }))}\n        actions={[\n          {\n            icon: <FiGitMerge />,\n            title: 'Xem sơ đồ chuỗi lây nhiễm',\n            color: 'teal',\n            onClick: ({ chainId }) => setSelectingId(chainId),\n          },\n          {\n            icon: <FiFileText />,\n            title: 'Hồ sơ',\n            color: 'blue',\n            onClick: ({ chainId }) =>\n              window.open(\n                `/profile/${profileId}/infection-chain/${chainId}`,\n                '_blank',\n              ),\n          },\n        ]}\n      />\n      <SubjectInfectionChainModal\n        open={Boolean(selectingId)}\n        chainId={selectingId}\n        onClose={() => setSelectingId(undefined)}\n      />\n    </>\n  );\n};\n\nSubjectChainsTable.propTypes = {\n  profileId: PropTypes.number.isRequired,\n  profileName: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\nexport default SubjectChainsTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}