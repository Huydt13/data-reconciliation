{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\infection-chain\\\\components\\\\subject\\\\information\\\\form-sections\\\\GeneralInformationSection.js\";\n/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment';\nimport { Form, Grid, Icon, Input, Select } from 'semantic-ui-react';\nimport { FiCalendar } from 'react-icons/fi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { InfoRow, KeyboardDatePicker } from 'app/components/shared';\nimport nations from 'app/assets/mock/nations.json';\nimport { useAuth } from 'app/hooks';\nimport { SubjectKeyType } from 'infection-chain/utils/constants';\nimport { getRelated } from 'profile/actions/profile';\nimport { mergeProfile } from 'medical-test/actions/medical-test';\nimport { showForwardModal, showInfoModal } from 'app/actions/global';\nimport { useHistory, useParams } from 'react-router-dom';\nimport httpClient from 'app/utils/http-client';\nimport apiLinks from 'app/utils/api-links';\nimport EvaluateModal from 'chain/components/EvaluateModal';\nimport MinimizeGeneralInformation from './MinimizeGeneralInformation';\nconst nationOptions = nations.map(n => ({\n  key: n.countryCode,\n  text: n.name,\n  value: n.countryCode,\n  flag: n.countryCode\n}));\nconst genderOptions = [{\n  key: 'm',\n  text: 'Nam',\n  value: 1\n}, {\n  key: 'f',\n  text: 'Nữ',\n  value: 0\n}];\nconst religionOptions = [{\n  key: 'Không',\n  text: 'Không',\n  value: 'Không'\n}, {\n  key: 'Phật giáo',\n  text: 'Phật giáo',\n  value: 'Phật giáo'\n}, {\n  key: 'Công giáo',\n  text: 'Công giáo',\n  value: 'Công giáo'\n}, {\n  key: 'Cao Đài',\n  text: 'Cao Đài',\n  value: 'Cao Đài'\n}, {\n  key: 'Hòa Hảo',\n  text: 'Hòa Hảo',\n  value: 'Hòa Hảo'\n}, {\n  key: 'Tin Lành',\n  text: 'Tin Lành',\n  value: 'Tin Lành'\n}, {\n  key: 'Hồi giáo',\n  text: 'Hồi giáo',\n  value: 'Hồi giáo'\n}, {\n  key: 'Ấn Độ giáo',\n  text: 'Ấn Độ giáo',\n  value: 'Ấn Độ giáo'\n}];\nconst fields = ['id', 'guid', 'fullName', 'gender', 'nationality', 'religion', 'dateOfBirth', 'hasYearOfBirthOnly', 'createdFrom', 'description', 'isVerified', 'symptoms', 'underlyingDiseases', 'nationality', 'workAddresses', 'addressesInVietnam', 'facilityId', 'addresses', 'additionalInformation', 'homeAddress'];\nconst StyledWrapper = styled.label`\n  display: inline-block;\n  & svg {\n    vertical-align: text-bottom;\n    font-size: 20px;\n    margin-left: 8px;\n  }\n`;\nconst GeneralInformationSection = props => {\n  const {\n    subject,\n    loading,\n    minimize,\n    initialData,\n    onChange,\n    onRefresh,\n    onDisabled,\n    readOnly,\n    isCreateNewSubject,\n    isCreateFromAnonymous,\n    isCreateFromQuarantine,\n    isPartTimeQuarantine,\n    isFullTimeQuarantine\n  } = props;\n  const {\n    reset,\n    watch,\n    register,\n    setValue,\n    setError,\n    getValues,\n    clearErrors,\n    trigger\n  } = useForm({\n    defaultValues: {\n      ...initialData\n    }\n  });\n  useEffect(() => {\n    reset(initialData);\n    // eslint-disable-next-line\n  }, [reset, initialData.id]);\n  const hasYearOfBirthOnly = watch('hasYearOfBirthOnly');\n  const {\n    isUsername\n  } = useAuth();\n  useEffect(() => {\n    fields.forEach(name => {\n      register({\n        name\n      });\n    });\n    // hcdc.dvu.xng default is full date\n    if (isUsername('hcdc.dvu.xng')) {\n      setValue('hasYearOfBirthOnly', false);\n    } else {\n      setValue('hasYearOfBirthOnly', hasYearOfBirthOnly || true);\n    }\n    // eslint-disable-next-line\n  }, [register]);\n  const [minimizeYear, setMinimizeYear] = useState(isUsername('hcdc.dvu.xng') ? false : hasYearOfBirthOnly);\n  const [modal, setModal] = useState(false);\n  const toggleDOB = (isMin, setMin) => /*#__PURE__*/React.createElement(StyledWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, isMin ? /*#__PURE__*/React.createElement(React.Fragment, null, \"N\\u0103m sinh\") : /*#__PURE__*/React.createElement(React.Fragment, null, \"Ng\\xE0y sinh\"), /*#__PURE__*/React.createElement(FiCalendar, {\n    size: 16,\n    onClick: () => {\n      setMin(!minimizeYear);\n      const dob = watch('dateOfBirth');\n      if (dob && (dob === null || dob === void 0 ? void 0 : dob.length) === 4 && minimizeYear) {\n        setValue('dateOfBirth', moment(dob, 'YYYY').startOf('year'));\n      } else if (dob && dob.length === 10 && moment(dob, 'YYYY-DD-MM').isValid) {\n        setValue('dateOfBirth', moment(dob).format('YYYY'));\n      } else {\n        setValue('dateOfBirth', '');\n      }\n      setValue('hasYearOfBirthOnly', !minimizeYear);\n      onChange(getValues());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }));\n  const {\n    fromContactData\n  } = useSelector(state => state.subject);\n  const {\n    data\n  } = fromContactData || {\n    data: [{\n      id: ''\n    }]\n  };\n  const evaluateModal = useMemo(() => {\n    var _data$id, _data;\n    return /*#__PURE__*/React.createElement(EvaluateModal, {\n      key: modal ? 'OpenEvaluateModal' : 'CloseEvaluateModal',\n      open: modal,\n      subjectId: subject.id,\n      contactId: (_data$id = (_data = data[data.length - 1]) === null || _data === void 0 ? void 0 : _data.id) !== null && _data$id !== void 0 ? _data$id : '',\n      isVerified: subject.isVerified,\n      verifiedType: subject.type,\n      onClose: () => setModal(false),\n      onRefresh: onRefresh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    });\n  }, [modal, subject, data, onRefresh]);\n  const fullName = watch('fullName');\n  const dateOfBirth = watch('dateOfBirth');\n  const cccd = (watch('cccd') || '').length >= 12 ? watch('cccd') : '';\n  const cmnd = (watch('cmnd') || '').length >= 9 ? watch('cmnd') : '';\n  const passportNumber = watch('passportNumber');\n  const healthInsuranceNumber = (watch('healthInsuranceNumber') || '').length >= 15 ? watch('healthInsuranceNumber') : '';\n  const key = cccd || cmnd || passportNumber || healthInsuranceNumber;\n  const dispatch = useDispatch();\n  const handleProfileChecking = useCallback(() => {\n    if (fullName && dateOfBirth && isCreateNewSubject) {\n      let keyType = 0;\n      switch (key) {\n        case cccd:\n          keyType = SubjectKeyType.CCCD;\n          break;\n        case cmnd:\n          keyType = SubjectKeyType.CMND;\n          break;\n        case passportNumber:\n          keyType = SubjectKeyType.PASSPORT;\n          break;\n        case healthInsuranceNumber:\n          keyType = SubjectKeyType.HEALTHINSURANCE;\n          break;\n        default:\n          break;\n      }\n      if (key) {\n        dispatch(getRelated({\n          fullName,\n          dateOfBirth: moment(dateOfBirth).toJSON(),\n          hasYearOfBirthOnly,\n          key,\n          keyType\n        }));\n      }\n    }\n  }, [isCreateNewSubject, hasYearOfBirthOnly, cccd, cmnd, passportNumber, healthInsuranceNumber, fullName, dateOfBirth, key, dispatch]);\n  const {\n    relatedId\n  } = useSelector(s => s.profile);\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    if (relatedId && isCreateNewSubject) {\n      if (isCreateFromAnonymous) {\n        httpClient.callApi({\n          method: 'GET',\n          url: `${apiLinks.profiles.get}/${relatedId}`\n        }).then(_ref => {\n          var _moment$format, _nations$find$name, _nations$find;\n          let {\n            data: {\n              fullName: name,\n              dateOfBirth: dob,\n              gender,\n              cccd: cc,\n              cmnd: cm,\n              healthInsuranceNumber: health,\n              passportNumber: pass,\n              nationality,\n              phoneNumber,\n              religion,\n              job,\n              email\n            }\n          } = _ref;\n          dispatch(showInfoModal('Hồ sơ đã tồn tại, thêm thông tin xét nghiệm cho hồ sơ?', /*#__PURE__*/React.createElement(Grid, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(Grid.Row, {\n            columns: 2,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Grid.Column, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"H\\u1ECD v\\xE0 t\\xEAn\",\n            content: name !== null && name !== void 0 ? name : '...',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"N\\u0103m sinh\",\n            content: (_moment$format = moment(dob).format('YYYY')) !== null && _moment$format !== void 0 ? _moment$format : '...',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"C\\u0103n c\\u01B0\\u1EDBc c\\xF4ng d\\xE2n\",\n            content: cc !== null && cc !== void 0 ? cc : '...',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"Ch\\u1EE9ng minh nh\\xE2n d\\xE2n\",\n            content: cm !== null && cm !== void 0 ? cm : '...',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"H\\u1ED9 chi\\u1EBFu\",\n            content: pass !== null && pass !== void 0 ? pass : '...',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"B\\u1EA3o hi\\u1EC3m y t\\u1EBF\",\n            content: health !== null && health !== void 0 ? health : '...',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 25\n            }\n          })), /*#__PURE__*/React.createElement(Grid.Column, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"Gi\\u1EDBi t\\xEDnh\",\n            content: gender === 1 ? 'Nam' : 'Nữ',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"Qu\\u1ED1c t\\u1ECBch\",\n            content: (_nations$find$name = (_nations$find = nations.find(n => n.countryCode === nationality)) === null || _nations$find === void 0 ? void 0 : _nations$find.name) !== null && _nations$find$name !== void 0 ? _nations$find$name : '...',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"T\\xF4n gi\\xE1o\",\n            content: religion !== null && religion !== void 0 ? religion : '...',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"Ngh\\u1EC1 nghi\\u1EC7p\",\n            content: job !== null && job !== void 0 ? job : '...',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n            content: phoneNumber !== null && phoneNumber !== void 0 ? phoneNumber : '...',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(InfoRow, {\n            label: \"Email\",\n            content: email !== null && email !== void 0 ? email : '...',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 25\n            }\n          })))), () => {\n            dispatch(mergeProfile(id, relatedId)).then(() => {\n              history.push(`/profile/${relatedId}`);\n            });\n          }));\n        });\n      } else {\n        dispatch(showForwardModal('Hồ sơ đã tồn tại, chuyển đến hồ sơ sau: ', () => {\n          history.push(`/profile/${relatedId}`);\n        }));\n      }\n    }\n    // eslint-disable-next-line\n  }, [dispatch, relatedId, isCreateNewSubject]);\n  const cccdError = watch('cccd') && watch('cccd').length < 12;\n  const cmndError = watch('cmnd') && watch('cmnd').length < 9;\n  const insuranceError = watch('healthInsuranceNumber') && watch('healthInsuranceNumber').length < 15;\n  const enableError = !(watch('cccd') || watch('cmnd') || watch('passportNumber') || watch('healthInsuranceNumber'));\n  useEffect(() => {\n    const facilityId = watch('facilityId');\n    const homeAddress = watch('homeAddress');\n    const gender = watch('gender');\n    onDisabled(Boolean(enableError || cccdError || cmndError || insuranceError || !fullName || gender === null || !dateOfBirth || (isFullTimeQuarantine || isPartTimeQuarantine) && !facilityId || (isPartTimeQuarantine || isCreateFromQuarantine) && !homeAddress));\n    // eslint-disable-next-line\n  }, [isFullTimeQuarantine, isPartTimeQuarantine, isCreateFromQuarantine, onDisabled, watch]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !(readOnly || minimize) && /*#__PURE__*/React.createElement(Form, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    control: Input,\n    label: \"H\\u1ECD v\\xE0 t\\xEAn\",\n    name: \"fullName\",\n    value: watch('fullName') || '',\n    onChange: (e, _ref2) => {\n      let {\n        value\n      } = _ref2;\n      setValue('fullName', value);\n      onChange(getValues());\n    },\n    onBlur: () => {\n      setValue('fullName', (watch('fullName') || '').toUpperCase());\n      handleProfileChecking();\n    },\n    error: !watch('fullName'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }), minimizeYear ? /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    disabled: false,\n    type: \"number\",\n    readOnly: readOnly,\n    label: toggleDOB(minimizeYear, setMinimizeYear),\n    placeholder: watch('dateOfBirth') && moment(watch('dateOfBirth')).isValid() ? moment(watch('dateOfBirth')).format('YYYY') : 'YYYY',\n    control: Input,\n    onChange: (e, _ref3) => {\n      let {\n        value\n      } = _ref3;\n      setValue('dateOfBirth', value);\n      onChange(getValues());\n    },\n    onBlur: handleProfileChecking,\n    error: !watch('dateOfBirth'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    disabled: false,\n    label: toggleDOB(minimizeYear, setMinimizeYear),\n    readOnly: readOnly,\n    value: watch('dateOfBirth') || '',\n    control: KeyboardDatePicker,\n    disabledDays: [{\n      after: new Date()\n    }],\n    onChange: date => {\n      trigger('dateOfBirth');\n      clearErrors('dateOfBirth');\n      setValue('dateOfBirth', date);\n      onChange(getValues());\n    },\n    onError: e => setError('dateOfBirth', e),\n    onBlur: handleProfileChecking,\n    error: !watch('dateOfBirth'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    // disabled={!isCreateFromContact && Boolean(initialData?.id)}\n    label: \"C\\u0103n c\\u01B0\\u1EDBc c\\xF4ng d\\xE2n\",\n    control: Input,\n    name: \"cccd\",\n    readOnly: readOnly,\n    input: {\n      ref: register\n    },\n    onChange: () => onChange(getValues()),\n    onBlur: handleProfileChecking,\n    error: cccdError ? {\n      content: 'Căn cước công dân phải đủ 12 ký tự',\n      pointing: 'above'\n    } : enableError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    // disabled={!isCreateFromContact && Boolean(initialData?.id)}\n    icon: /*#__PURE__*/React.createElement(Icon, {\n      name: \"pencil alternate\",\n      link: true,\n      onClick: () => {\n        setValue('cmnd', uuidv4());\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }\n    }),\n    label: \"Ch\\u1EE9ng minh nh\\xE2n d\\xE2n\",\n    control: Input,\n    name: \"cmnd\",\n    readOnly: readOnly,\n    input: {\n      ref: register\n    },\n    onChange: () => onChange(getValues()),\n    onBlur: handleProfileChecking,\n    error: cmndError ? {\n      content: 'Chứng minh nhân dân phải đủ 9 ký tự',\n      pointing: 'above'\n    } : enableError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"H\\u1ED9 chi\\u1EBFu\"\n    // disabled={!isCreateFromContact && Boolean(initialData?.id)}\n    ,\n    control: Input,\n    name: \"passportNumber\",\n    readOnly: readOnly,\n    input: {\n      ref: register\n    },\n    onChange: () => onChange(getValues()),\n    onBlur: handleProfileChecking,\n    error: enableError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"B\\u1EA3o hi\\u1EC3m y t\\u1EBF\"\n    // disabled={!isCreateFromContact && Boolean(initialData?.id)}\n    ,\n    control: Input,\n    name: \"healthInsuranceNumber\",\n    readOnly: readOnly,\n    input: {\n      ref: register\n    },\n    onChange: () => onChange(getValues()),\n    onBlur: handleProfileChecking,\n    error: insuranceError ? {\n      content: 'Bảo hiểm y tế phải đủ 15 ký tự',\n      pointing: 'above'\n    } : enableError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    clearable: true,\n    disabled: false,\n    label: \"Gi\\u1EDBi t\\xEDnh\",\n    control: Select,\n    onBlur: () => {\n      onChange(getValues());\n    },\n    value: watch('gender') // dơ vl huhu\n    ,\n    onChange: (e, _ref4) => {\n      let {\n        value\n      } = _ref4;\n      setValue('gender', value);\n    },\n    options: genderOptions.filter(g => g.value === watch('gender') || !readOnly),\n    error: watch('gender') === null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    clearable: true,\n    disabled: false,\n    search: !readOnly,\n    deburr: true,\n    label: \"Qu\\u1ED1c t\\u1ECBch\",\n    control: Select,\n    value: watch('nationality') || '',\n    onBlur: () => {\n      onChange(getValues());\n    },\n    onChange: (e, _ref5) => {\n      let {\n        value\n      } = _ref5;\n      setValue('nationality', value);\n    },\n    options: nationOptions.filter(n => n.value === watch('nationality') || !readOnly),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    clearable: true,\n    disabled: false,\n    search: !readOnly,\n    deburr: true,\n    label: \"T\\xF4n gi\\xE1o\",\n    control: Select,\n    value: watch('religion') || '',\n    onBlur: () => {\n      onChange(getValues());\n    },\n    onChange: (e, _ref6) => {\n      let {\n        value\n      } = _ref6;\n      setValue('religion', value);\n    },\n    options: religionOptions.filter(r => r.value === watch('religion') || !readOnly),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    widths: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    control: Input,\n    disabled: false,\n    label: \"Ngh\\u1EC1 nghi\\u1EC7p\",\n    name: \"job\",\n    readOnly: readOnly,\n    input: {\n      ref: register\n    },\n    onBlur: () => {\n      onChange(getValues());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"S\\u1ED1 \\u0111i\\u1EC7n tho\\u1EA1i\",\n    disabled: false,\n    control: Input,\n    name: \"phoneNumber\",\n    readOnly: readOnly,\n    input: {\n      ref: register\n    },\n    onBlur: () => {\n      onChange(getValues());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    label: \"Email\",\n    disabled: false,\n    control: Input,\n    name: \"email\",\n    readOnly: readOnly,\n    input: {\n      ref: register\n    },\n    onBlur: () => {\n      onChange(getValues());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 13\n    }\n  }))), (readOnly || minimize) && /*#__PURE__*/React.createElement(MinimizeGeneralInformation, {\n    data: initialData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 606,\n      columnNumber: 9\n    }\n  }), evaluateModal);\n};\nGeneralInformationSection.propTypes = {\n  subject: PropTypes.shape({\n    id: PropTypes.number,\n    type: PropTypes.number,\n    isVerified: PropTypes.bool\n  }),\n  loading: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  minimize: PropTypes.bool,\n  initialData: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    fullName: PropTypes.string,\n    sKey: PropTypes.string,\n    type: PropTypes.number,\n    stage: PropTypes.number,\n    addressesInVietnam: PropTypes.arrayOf(PropTypes.shape({})),\n    workAddresses: PropTypes.arrayOf(PropTypes.shape({}))\n  }),\n  onChange: PropTypes.func,\n  onRefresh: PropTypes.func,\n  onDisabled: PropTypes.func,\n  isCreateNewSubject: PropTypes.bool,\n  isCreateFromAnonymous: PropTypes.bool,\n  isCreateFromQuarantine: PropTypes.bool,\n  isFullTimeQuarantine: PropTypes.bool,\n  isPartTimeQuarantine: PropTypes.bool,\n  fromSubject: PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.number\n  })\n};\nGeneralInformationSection.defaultProps = {\n  subject: {\n    id: 0,\n    isVerified: false,\n    type: 0\n  },\n  loading: false,\n  readOnly: false,\n  minimize: false,\n  initialData: {\n    id: 0,\n    fullName: '',\n    sKey: '',\n    type: -1,\n    stage: -1,\n    nationality: '',\n    email: '',\n    dateOfBirth: '',\n    cmnd: '',\n    phoneNumber: '',\n    gender: 1,\n    addressesInVietnam: [],\n    workAddresses: []\n  },\n  onChange: () => {},\n  onRefresh: () => {},\n  onDisabled: () => {},\n  isCreateNewSubject: false,\n  isCreateFromAnonymous: false,\n  isCreateFromQuarantine: false,\n  isFullTimeQuarantine: false,\n  isPartTimeQuarantine: false,\n  fromSubject: {}\n};\nexport default GeneralInformationSection;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","styled","PropTypes","v4","uuidv4","moment","Form","Grid","Icon","Input","Select","FiCalendar","useDispatch","useSelector","useForm","InfoRow","KeyboardDatePicker","nations","useAuth","SubjectKeyType","getRelated","mergeProfile","showForwardModal","showInfoModal","useHistory","useParams","httpClient","apiLinks","EvaluateModal","MinimizeGeneralInformation","nationOptions","map","n","key","countryCode","text","name","value","flag","genderOptions","religionOptions","fields","StyledWrapper","label","GeneralInformationSection","props","subject","loading","minimize","initialData","onChange","onRefresh","onDisabled","readOnly","isCreateNewSubject","isCreateFromAnonymous","isCreateFromQuarantine","isPartTimeQuarantine","isFullTimeQuarantine","reset","watch","register","setValue","setError","getValues","clearErrors","trigger","defaultValues","id","hasYearOfBirthOnly","isUsername","forEach","minimizeYear","setMinimizeYear","modal","setModal","toggleDOB","isMin","setMin","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","size","onClick","dob","length","startOf","isValid","format","fromContactData","state","data","evaluateModal","_data$id","_data","open","subjectId","contactId","isVerified","verifiedType","type","onClose","fullName","dateOfBirth","cccd","cmnd","passportNumber","healthInsuranceNumber","dispatch","handleProfileChecking","keyType","CCCD","CMND","PASSPORT","HEALTHINSURANCE","toJSON","relatedId","s","profile","history","callApi","method","url","profiles","get","then","_ref","_moment$format","_nations$find$name","_nations$find","gender","cc","cm","health","pass","nationality","phoneNumber","religion","job","email","Row","columns","Column","content","find","push","cccdError","cmndError","insuranceError","enableError","facilityId","homeAddress","Boolean","Group","widths","Field","required","control","e","_ref2","onBlur","toUpperCase","error","disabled","placeholder","_ref3","disabledDays","after","Date","date","onError","input","ref","pointing","icon","link","clearable","_ref4","options","filter","g","search","deburr","_ref5","_ref6","r","propTypes","shape","number","bool","oneOfType","string","sKey","stage","addressesInVietnam","arrayOf","workAddresses","func","fromSubject","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/infection-chain/components/subject/information/form-sections/GeneralInformationSection.js"],"sourcesContent":["/* eslint-disable no-nested-ternary */\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment';\nimport { Form, Grid, Icon, Input, Select } from 'semantic-ui-react';\nimport { FiCalendar } from 'react-icons/fi';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\n\nimport { InfoRow, KeyboardDatePicker } from 'app/components/shared';\nimport nations from 'app/assets/mock/nations.json';\n\nimport { useAuth } from 'app/hooks';\nimport { SubjectKeyType } from 'infection-chain/utils/constants';\nimport { getRelated } from 'profile/actions/profile';\nimport { mergeProfile } from 'medical-test/actions/medical-test';\nimport { showForwardModal, showInfoModal } from 'app/actions/global';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport httpClient from 'app/utils/http-client';\nimport apiLinks from 'app/utils/api-links';\nimport EvaluateModal from 'chain/components/EvaluateModal';\nimport MinimizeGeneralInformation from './MinimizeGeneralInformation';\n\nconst nationOptions = nations.map((n) => ({\n  key: n.countryCode,\n  text: n.name,\n  value: n.countryCode,\n  flag: n.countryCode,\n}));\n\nconst genderOptions = [\n  { key: 'm', text: 'Nam', value: 1 },\n  { key: 'f', text: 'Nữ', value: 0 },\n];\n\nconst religionOptions = [\n  { key: 'Không', text: 'Không', value: 'Không' },\n  { key: 'Phật giáo', text: 'Phật giáo', value: 'Phật giáo' },\n  { key: 'Công giáo', text: 'Công giáo', value: 'Công giáo' },\n  { key: 'Cao Đài', text: 'Cao Đài', value: 'Cao Đài' },\n  { key: 'Hòa Hảo', text: 'Hòa Hảo', value: 'Hòa Hảo' },\n  { key: 'Tin Lành', text: 'Tin Lành', value: 'Tin Lành' },\n  { key: 'Hồi giáo', text: 'Hồi giáo', value: 'Hồi giáo' },\n  { key: 'Ấn Độ giáo', text: 'Ấn Độ giáo', value: 'Ấn Độ giáo' },\n];\n\nconst fields = [\n  'id',\n  'guid',\n  'fullName',\n  'gender',\n  'nationality',\n  'religion',\n  'dateOfBirth',\n  'hasYearOfBirthOnly',\n  'createdFrom',\n  'description',\n  'isVerified',\n  'symptoms',\n  'underlyingDiseases',\n  'nationality',\n  'workAddresses',\n  'addressesInVietnam',\n  'facilityId',\n  'addresses',\n  'additionalInformation',\n  'homeAddress',\n];\n\nconst StyledWrapper = styled.label`\n  display: inline-block;\n  & svg {\n    vertical-align: text-bottom;\n    font-size: 20px;\n    margin-left: 8px;\n  }\n`;\n\nconst GeneralInformationSection = (props) => {\n  const {\n    subject,\n    loading,\n    minimize,\n    initialData,\n    onChange,\n    onRefresh,\n    onDisabled,\n    readOnly,\n    isCreateNewSubject,\n    isCreateFromAnonymous,\n    isCreateFromQuarantine,\n    isPartTimeQuarantine,\n    isFullTimeQuarantine,\n  } = props;\n\n  const {\n    reset,\n    watch,\n    register,\n    setValue,\n    setError,\n    getValues,\n    clearErrors,\n    trigger,\n  } = useForm({\n    defaultValues: { ...initialData },\n  });\n\n  useEffect(() => {\n    reset(initialData);\n    // eslint-disable-next-line\n  }, [reset, initialData.id]);\n\n  const hasYearOfBirthOnly = watch('hasYearOfBirthOnly');\n  const { isUsername } = useAuth();\n  useEffect(() => {\n    fields.forEach((name) => {\n      register({ name });\n    });\n    // hcdc.dvu.xng default is full date\n    if (isUsername('hcdc.dvu.xng')) {\n      setValue('hasYearOfBirthOnly', false);\n    } else {\n      setValue('hasYearOfBirthOnly', hasYearOfBirthOnly || true);\n    }\n    // eslint-disable-next-line\n  }, [register]);\n\n  const [minimizeYear, setMinimizeYear] = useState(\n    isUsername('hcdc.dvu.xng') ? false : hasYearOfBirthOnly,\n  );\n  const [modal, setModal] = useState(false);\n\n  const toggleDOB = (isMin, setMin) => (\n    <StyledWrapper>\n      {isMin ? <>Năm sinh</> : <>Ngày sinh</>}\n      <FiCalendar\n        size={16}\n        onClick={() => {\n          setMin(!minimizeYear);\n          const dob = watch('dateOfBirth');\n          if (dob && dob?.length === 4 && minimizeYear) {\n            setValue('dateOfBirth', moment(dob, 'YYYY').startOf('year'));\n          } else if (\n            dob &&\n            dob.length === 10 &&\n            moment(dob, 'YYYY-DD-MM').isValid\n          ) {\n            setValue('dateOfBirth', moment(dob).format('YYYY'));\n          } else {\n            setValue('dateOfBirth', '');\n          }\n          setValue('hasYearOfBirthOnly', !minimizeYear);\n          onChange(getValues());\n        }}\n      />\n    </StyledWrapper>\n  );\n\n  const { fromContactData } = useSelector((state) => state.subject);\n  const { data } = fromContactData || { data: [{ id: '' }] };\n\n  const evaluateModal = useMemo(\n    () => (\n      <EvaluateModal\n        key={modal ? 'OpenEvaluateModal' : 'CloseEvaluateModal'}\n        open={modal}\n        subjectId={subject.id}\n        contactId={data[data.length - 1]?.id ?? ''}\n        isVerified={subject.isVerified}\n        verifiedType={subject.type}\n        onClose={() => setModal(false)}\n        onRefresh={onRefresh}\n      />\n    ),\n    [modal, subject, data, onRefresh],\n  );\n\n  const fullName = watch('fullName');\n  const dateOfBirth = watch('dateOfBirth');\n  const cccd = (watch('cccd') || '').length >= 12 ? watch('cccd') : '';\n  const cmnd = (watch('cmnd') || '').length >= 9 ? watch('cmnd') : '';\n  const passportNumber = watch('passportNumber');\n  const healthInsuranceNumber =\n    (watch('healthInsuranceNumber') || '').length >= 15\n      ? watch('healthInsuranceNumber')\n      : '';\n  const key = cccd || cmnd || passportNumber || healthInsuranceNumber;\n\n  const dispatch = useDispatch();\n  const handleProfileChecking = useCallback(() => {\n    if (fullName && dateOfBirth && isCreateNewSubject) {\n      let keyType = 0;\n      switch (key) {\n        case cccd:\n          keyType = SubjectKeyType.CCCD;\n          break;\n        case cmnd:\n          keyType = SubjectKeyType.CMND;\n          break;\n        case passportNumber:\n          keyType = SubjectKeyType.PASSPORT;\n          break;\n        case healthInsuranceNumber:\n          keyType = SubjectKeyType.HEALTHINSURANCE;\n          break;\n        default:\n          break;\n      }\n      if (key) {\n        dispatch(\n          getRelated({\n            fullName,\n            dateOfBirth: moment(dateOfBirth).toJSON(),\n            hasYearOfBirthOnly,\n            key,\n            keyType,\n          }),\n        );\n      }\n    }\n  }, [\n    isCreateNewSubject,\n    hasYearOfBirthOnly,\n    cccd,\n    cmnd,\n    passportNumber,\n    healthInsuranceNumber,\n    fullName,\n    dateOfBirth,\n    key,\n    dispatch,\n  ]);\n\n  const { relatedId } = useSelector((s) => s.profile);\n  const { id } = useParams();\n  const history = useHistory();\n  useEffect(() => {\n    if (relatedId && isCreateNewSubject) {\n      if (isCreateFromAnonymous) {\n        httpClient\n          .callApi({\n            method: 'GET',\n            url: `${apiLinks.profiles.get}/${relatedId}`,\n          })\n          .then(\n            ({\n              data: {\n                fullName: name,\n                dateOfBirth: dob,\n                gender,\n                cccd: cc,\n                cmnd: cm,\n                healthInsuranceNumber: health,\n                passportNumber: pass,\n                nationality,\n                phoneNumber,\n                religion,\n                job,\n                email,\n              },\n            }) => {\n              dispatch(\n                showInfoModal(\n                  'Hồ sơ đã tồn tại, thêm thông tin xét nghiệm cho hồ sơ?',\n                  <Grid>\n                    <Grid.Row columns={2}>\n                      <Grid.Column>\n                        <InfoRow label=\"Họ và tên\" content={name ?? '...'} />\n                        <InfoRow\n                          label=\"Năm sinh\"\n                          content={moment(dob).format('YYYY') ?? '...'}\n                        />\n                        <InfoRow\n                          label=\"Căn cước công dân\"\n                          content={cc ?? '...'}\n                        />\n                        <InfoRow\n                          label=\"Chứng minh nhân dân\"\n                          content={cm ?? '...'}\n                        />\n                        <InfoRow label=\"Hộ chiếu\" content={pass ?? '...'} />\n                        <InfoRow\n                          label=\"Bảo hiểm y tế\"\n                          content={health ?? '...'}\n                        />\n                      </Grid.Column>\n                      <Grid.Column>\n                        <InfoRow\n                          label=\"Giới tính\"\n                          content={gender === 1 ? 'Nam' : 'Nữ'}\n                        />\n                        <InfoRow\n                          label=\"Quốc tịch\"\n                          content={\n                            nations.find((n) => n.countryCode === nationality)\n                              ?.name ?? '...'\n                          }\n                        />\n                        <InfoRow label=\"Tôn giáo\" content={religion ?? '...'} />\n                        <InfoRow label=\"Nghề nghiệp\" content={job ?? '...'} />\n                        <InfoRow\n                          label=\"Số điện thoại\"\n                          content={phoneNumber ?? '...'}\n                        />\n                        <InfoRow label=\"Email\" content={email ?? '...'} />\n                      </Grid.Column>\n                    </Grid.Row>\n                  </Grid>,\n                  () => {\n                    dispatch(mergeProfile(id, relatedId)).then(() => {\n                      history.push(`/profile/${relatedId}`);\n                    });\n                  },\n                ),\n              );\n            },\n          );\n      } else {\n        dispatch(\n          showForwardModal('Hồ sơ đã tồn tại, chuyển đến hồ sơ sau: ', () => {\n            history.push(`/profile/${relatedId}`);\n          }),\n        );\n      }\n    }\n    // eslint-disable-next-line\n  }, [dispatch, relatedId, isCreateNewSubject]);\n\n  const cccdError = watch('cccd') && watch('cccd').length < 12;\n  const cmndError = watch('cmnd') && watch('cmnd').length < 9;\n  const insuranceError =\n    watch('healthInsuranceNumber') &&\n    watch('healthInsuranceNumber').length < 15;\n\n  const enableError = !(\n    watch('cccd') ||\n    watch('cmnd') ||\n    watch('passportNumber') ||\n    watch('healthInsuranceNumber')\n  );\n\n  useEffect(() => {\n    const facilityId = watch('facilityId');\n    const homeAddress = watch('homeAddress');\n    const gender = watch('gender');\n    onDisabled(\n      Boolean(\n        enableError ||\n          cccdError ||\n          cmndError ||\n          insuranceError ||\n          !fullName ||\n          gender === null ||\n          !dateOfBirth ||\n          ((isFullTimeQuarantine || isPartTimeQuarantine) && !facilityId) ||\n          ((isPartTimeQuarantine || isCreateFromQuarantine) && !homeAddress),\n      ),\n    );\n    // eslint-disable-next-line\n  }, [\n    isFullTimeQuarantine,\n    isPartTimeQuarantine,\n    isCreateFromQuarantine,\n    onDisabled,\n    watch,\n  ]);\n\n  return (\n    <>\n      {!(readOnly || minimize) && (\n        <Form loading={loading}>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              required\n              control={Input}\n              label=\"Họ và tên\"\n              name=\"fullName\"\n              value={watch('fullName') || ''}\n              onChange={(e, { value }) => {\n                setValue('fullName', value);\n                onChange(getValues());\n              }}\n              onBlur={() => {\n                setValue('fullName', (watch('fullName') || '').toUpperCase());\n                handleProfileChecking();\n              }}\n              error={!watch('fullName')}\n            />\n            {minimizeYear ? (\n              <Form.Field\n                required\n                disabled={false}\n                type=\"number\"\n                readOnly={readOnly}\n                label={toggleDOB(minimizeYear, setMinimizeYear)}\n                placeholder={\n                  watch('dateOfBirth') && moment(watch('dateOfBirth')).isValid()\n                    ? moment(watch('dateOfBirth')).format('YYYY')\n                    : 'YYYY'\n                }\n                control={Input}\n                onChange={(e, { value }) => {\n                  setValue('dateOfBirth', value);\n                  onChange(getValues());\n                }}\n                onBlur={handleProfileChecking}\n                error={!watch('dateOfBirth')}\n              />\n            ) : (\n              <Form.Field\n                required\n                disabled={false}\n                label={toggleDOB(minimizeYear, setMinimizeYear)}\n                readOnly={readOnly}\n                value={watch('dateOfBirth') || ''}\n                control={KeyboardDatePicker}\n                disabledDays={[{ after: new Date() }]}\n                onChange={(date) => {\n                  trigger('dateOfBirth');\n                  clearErrors('dateOfBirth');\n                  setValue('dateOfBirth', date);\n                  onChange(getValues());\n                }}\n                onError={(e) => setError('dateOfBirth', e)}\n                onBlur={handleProfileChecking}\n                error={!watch('dateOfBirth')}\n              />\n            )}\n            <Form.Field\n              // disabled={!isCreateFromContact && Boolean(initialData?.id)}\n              label=\"Căn cước công dân\"\n              control={Input}\n              name=\"cccd\"\n              readOnly={readOnly}\n              input={{ ref: register }}\n              onChange={() => onChange(getValues())}\n              onBlur={handleProfileChecking}\n              error={\n                cccdError\n                  ? {\n                      content: 'Căn cước công dân phải đủ 12 ký tự',\n                      pointing: 'above',\n                    }\n                  : enableError\n              }\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              // disabled={!isCreateFromContact && Boolean(initialData?.id)}\n              icon={\n                <Icon\n                  name=\"pencil alternate\"\n                  link\n                  onClick={() => {\n                    setValue('cmnd', uuidv4());\n                  }}\n                />\n              }\n              label=\"Chứng minh nhân dân\"\n              control={Input}\n              name=\"cmnd\"\n              readOnly={readOnly}\n              input={{ ref: register }}\n              onChange={() => onChange(getValues())}\n              onBlur={handleProfileChecking}\n              error={\n                cmndError\n                  ? {\n                      content: 'Chứng minh nhân dân phải đủ 9 ký tự',\n                      pointing: 'above',\n                    }\n                  : enableError\n              }\n            />\n            <Form.Field\n              label=\"Hộ chiếu\"\n              // disabled={!isCreateFromContact && Boolean(initialData?.id)}\n              control={Input}\n              name=\"passportNumber\"\n              readOnly={readOnly}\n              input={{ ref: register }}\n              onChange={() => onChange(getValues())}\n              onBlur={handleProfileChecking}\n              error={enableError}\n            />\n            <Form.Field\n              label=\"Bảo hiểm y tế\"\n              // disabled={!isCreateFromContact && Boolean(initialData?.id)}\n              control={Input}\n              name=\"healthInsuranceNumber\"\n              readOnly={readOnly}\n              input={{ ref: register }}\n              onChange={() => onChange(getValues())}\n              onBlur={handleProfileChecking}\n              error={\n                insuranceError\n                  ? {\n                      content: 'Bảo hiểm y tế phải đủ 15 ký tự',\n                      pointing: 'above',\n                    }\n                  : enableError\n              }\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              required\n              clearable\n              disabled={false}\n              label=\"Giới tính\"\n              control={Select}\n              onBlur={() => {\n                onChange(getValues());\n              }}\n              value={watch('gender')} // dơ vl huhu\n              onChange={(e, { value }) => {\n                setValue('gender', value);\n              }}\n              options={genderOptions.filter(\n                (g) => g.value === watch('gender') || !readOnly,\n              )}\n              error={watch('gender') === null}\n            />\n            <Form.Field\n              clearable\n              disabled={false}\n              search={!readOnly}\n              deburr\n              label=\"Quốc tịch\"\n              control={Select}\n              value={watch('nationality') || ''}\n              onBlur={() => {\n                onChange(getValues());\n              }}\n              onChange={(e, { value }) => {\n                setValue('nationality', value);\n              }}\n              options={nationOptions.filter(\n                (n) => n.value === watch('nationality') || !readOnly,\n              )}\n            />\n            <Form.Field\n              clearable\n              disabled={false}\n              search={!readOnly}\n              deburr\n              label=\"Tôn giáo\"\n              control={Select}\n              value={watch('religion') || ''}\n              onBlur={() => {\n                onChange(getValues());\n              }}\n              onChange={(e, { value }) => {\n                setValue('religion', value);\n              }}\n              options={religionOptions.filter(\n                (r) => r.value === watch('religion') || !readOnly,\n              )}\n            />\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              control={Input}\n              disabled={false}\n              label=\"Nghề nghiệp\"\n              name=\"job\"\n              readOnly={readOnly}\n              input={{ ref: register }}\n              onBlur={() => {\n                onChange(getValues());\n              }}\n            />\n            <Form.Field\n              label=\"Số điện thoại\"\n              disabled={false}\n              control={Input}\n              name=\"phoneNumber\"\n              readOnly={readOnly}\n              input={{ ref: register }}\n              onBlur={() => {\n                onChange(getValues());\n              }}\n            />\n            <Form.Field\n              label=\"Email\"\n              disabled={false}\n              control={Input}\n              name=\"email\"\n              readOnly={readOnly}\n              input={{ ref: register }}\n              onBlur={() => {\n                onChange(getValues());\n              }}\n            />\n          </Form.Group>\n        </Form>\n      )}\n      {(readOnly || minimize) && (\n        <MinimizeGeneralInformation data={initialData} />\n      )}\n      {evaluateModal}\n    </>\n  );\n};\n\nGeneralInformationSection.propTypes = {\n  subject: PropTypes.shape({\n    id: PropTypes.number,\n    type: PropTypes.number,\n    isVerified: PropTypes.bool,\n  }),\n  loading: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  minimize: PropTypes.bool,\n  initialData: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    fullName: PropTypes.string,\n    sKey: PropTypes.string,\n    type: PropTypes.number,\n    stage: PropTypes.number,\n    addressesInVietnam: PropTypes.arrayOf(PropTypes.shape({})),\n    workAddresses: PropTypes.arrayOf(PropTypes.shape({})),\n  }),\n  onChange: PropTypes.func,\n  onRefresh: PropTypes.func,\n  onDisabled: PropTypes.func,\n  isCreateNewSubject: PropTypes.bool,\n  isCreateFromAnonymous: PropTypes.bool,\n  isCreateFromQuarantine: PropTypes.bool,\n  isFullTimeQuarantine: PropTypes.bool,\n  isPartTimeQuarantine: PropTypes.bool,\n  fromSubject: PropTypes.shape({\n    id: PropTypes.string,\n    type: PropTypes.number,\n  }),\n};\n\nGeneralInformationSection.defaultProps = {\n  subject: {\n    id: 0,\n    isVerified: false,\n    type: 0,\n  },\n  loading: false,\n  readOnly: false,\n  minimize: false,\n  initialData: {\n    id: 0,\n    fullName: '',\n    sKey: '',\n    type: -1,\n    stage: -1,\n    nationality: '',\n    email: '',\n    dateOfBirth: '',\n    cmnd: '',\n    phoneNumber: '',\n    gender: 1,\n    addressesInVietnam: [],\n    workAddresses: [],\n  },\n  onChange: () => {},\n  onRefresh: () => {},\n  onDisabled: () => {},\n  isCreateNewSubject: false,\n  isCreateFromAnonymous: false,\n  isCreateFromQuarantine: false,\n  isFullTimeQuarantine: false,\n  isPartTimeQuarantine: false,\n  fromSubject: {},\n};\n\nexport default GeneralInformationSection;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}