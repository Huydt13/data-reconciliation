{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\dashboard\\\\components\\\\BarCharts.js\";\n/* eslint-disable react/no-array-index-key */\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport { Card, Dimmer, Loader } from 'semantic-ui-react';\nimport { ResponsiveContainer, BarChart, CartesianGrid, Bar, XAxis, YAxis, Tooltip, Cell } from 'recharts';\nimport { colors } from 'general/utils/constants';\nimport _ from 'lodash';\nconst StyledCard = styled(Card)`\n  width: auto !important;\n  padding-top: 8px;\n  padding-bottom: 60px !important;\n`;\nconst RelativeDiv = styled.div`\n  min-height: 530px;\n  position: relative;\n`;\nconst BarCharts = () => {\n  const {\n    chainsSummariesData,\n    getChainsSummariesLoading\n  } = useSelector(state => state.dashboard);\n  const [data, setData] = useState([]);\n  const domain = [0, Math.floor(Math.max(...chainsSummariesData.summaryDetails.map(d => d.total)) / 10 + 1) * 10];\n  useEffect(() => {\n    if (chainsSummariesData.summaryDetails.length) {\n      setData(_.orderBy(chainsSummariesData.summaryDetails, [item => item.infectionType.level, item => item.infectionType.value], ['asc', 'asc']).map((d, index) => {\n        var _colors$find;\n        return {\n          key: index,\n          name: d.infectionType.name,\n          color: (_colors$find = colors.find(c => c.en === d.infectionType.colorCode)) === null || _colors$find === void 0 ? void 0 : _colors$find.hex,\n          value: d.total\n        };\n      }));\n    }\n  }, [chainsSummariesData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, !getChainsSummariesLoading ? /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    aspect: 5.0 / 3.0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: data,\n    margin: {\n      top: 40,\n      right: 20,\n      left: -20,\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CartesianGrid, {\n    strokeDasharray: \"3 3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    domain: domain,\n    tickCount: 11,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    name: \"S\\u1ED1 ca\",\n    dataKey: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, data.map((e, i) => /*#__PURE__*/React.createElement(Cell, {\n    key: i,\n    fill: e.color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }))))) : /*#__PURE__*/React.createElement(RelativeDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dimmer, {\n    inverted: true,\n    active: getChainsSummariesLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  })))));\n};\nexport default BarCharts;","map":{"version":3,"names":["React","useState","useEffect","useSelector","styled","Card","Dimmer","Loader","ResponsiveContainer","BarChart","CartesianGrid","Bar","XAxis","YAxis","Tooltip","Cell","colors","_","StyledCard","RelativeDiv","div","BarCharts","chainsSummariesData","getChainsSummariesLoading","state","dashboard","data","setData","domain","Math","floor","max","summaryDetails","map","d","total","length","orderBy","item","infectionType","level","value","index","_colors$find","key","name","color","find","c","en","colorCode","hex","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","width","aspect","margin","top","right","left","bottom","strokeDasharray","dataKey","tickCount","e","i","fill","inverted","active"],"sources":["H:/BAKCO/pj/data reconciliation/src/dashboard/components/BarCharts.js"],"sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\n\nimport { Card, Dimmer, Loader } from 'semantic-ui-react';\nimport {\n  ResponsiveContainer,\n  BarChart,\n  CartesianGrid,\n  Bar,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Cell,\n} from 'recharts';\n\nimport { colors } from 'general/utils/constants';\nimport _ from 'lodash';\n\nconst StyledCard = styled(Card)`\n  width: auto !important;\n  padding-top: 8px;\n  padding-bottom: 60px !important;\n`;\n\nconst RelativeDiv = styled.div`\n  min-height: 530px;\n  position: relative;\n`;\n\nconst BarCharts = () => {\n  const { chainsSummariesData, getChainsSummariesLoading } = useSelector(\n    (state) => state.dashboard,\n  );\n  const [data, setData] = useState([]);\n  const domain = [\n    0,\n    Math.floor(\n      Math.max(...chainsSummariesData.summaryDetails.map((d) => d.total)) / 10 +\n        1,\n    ) * 10,\n  ];\n\n  useEffect(() => {\n    if (chainsSummariesData.summaryDetails.length) {\n      setData(\n        _.orderBy(\n          chainsSummariesData.summaryDetails,\n          [\n            (item) => item.infectionType.level,\n            (item) => item.infectionType.value,\n          ],\n          ['asc', 'asc'],\n        ).map((d, index) => ({\n          key: index,\n          name: d.infectionType.name,\n          color: colors.find((c) => c.en === d.infectionType.colorCode)?.hex,\n          value: d.total,\n        })),\n      );\n    }\n  }, [chainsSummariesData]);\n\n  return (\n    <>\n      <StyledCard>\n        {!getChainsSummariesLoading ? (\n          <ResponsiveContainer width=\"100%\" aspect={5.0 / 3.0}>\n            <BarChart\n              data={data}\n              margin={{\n                top: 40,\n                right: 20,\n                left: -20,\n                bottom: 0,\n              }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"name\" />\n              <YAxis domain={domain} tickCount={11} />\n              <Tooltip />\n              <Bar name=\"Số ca\" dataKey=\"value\">\n                {data.map((e, i) => (\n                  <Cell key={i} fill={e.color} />\n                ))}\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        ) : (\n          <RelativeDiv>\n            <Dimmer inverted active={getChainsSummariesLoading}>\n              <Loader />\n            </Dimmer>\n          </RelativeDiv>\n        )}\n        {/* <StyledDiv>\n          {subjectTypeList.map((e, i) => {\n            if (i <= 3) {\n              return (\n                <FlexDiv key={e.hex}>\n                  <div\n                    style={{\n                      color: e.hex,\n                      paddingRight: '5px',\n                      paddingTop: '3px',\n                    }}\n                  >\n                    <FiBarChart2 />\n                  </div>\n                  <span>{`Số ca ${e.label}`}</span>\n                </FlexDiv>\n              );\n            }\n            return '';\n          })}\n        </StyledDiv> */}\n      </StyledCard>\n    </>\n  );\n};\n\nexport default BarCharts;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAASC,IAAI,EAAEC,MAAM,EAAEC,MAAM,QAAQ,mBAAmB;AACxD,SACEC,mBAAmB,EACnBC,QAAQ,EACRC,aAAa,EACbC,GAAG,EACHC,KAAK,EACLC,KAAK,EACLC,OAAO,EACPC,IAAI,QACC,UAAU;AAEjB,SAASC,MAAM,QAAQ,yBAAyB;AAChD,OAAOC,CAAC,MAAM,QAAQ;AAEtB,MAAMC,UAAU,GAAGd,MAAM,CAACC,IAAI,CAAE;AAChC;AACA;AACA;AACA,CAAC;AAED,MAAMc,WAAW,GAAGf,MAAM,CAACgB,GAAI;AAC/B;AACA;AACA,CAAC;AAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAM;IAAEC,mBAAmB;IAAEC;EAA0B,CAAC,GAAGpB,WAAW,CACnEqB,KAAK,IAAKA,KAAK,CAACC,SAAS,CAC3B;EACD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM2B,MAAM,GAAG,CACb,CAAC,EACDC,IAAI,CAACC,KAAK,CACRD,IAAI,CAACE,GAAG,CAAC,GAAGT,mBAAmB,CAACU,cAAc,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK,CAAC,CAAC,GAAG,EAAE,GACtE,CAAC,CACJ,GAAG,EAAE,CACP;EAEDjC,SAAS,CAAC,MAAM;IACd,IAAIoB,mBAAmB,CAACU,cAAc,CAACI,MAAM,EAAE;MAC7CT,OAAO,CACLV,CAAC,CAACoB,OAAO,CACPf,mBAAmB,CAACU,cAAc,EAClC,CACGM,IAAI,IAAKA,IAAI,CAACC,aAAa,CAACC,KAAK,EACjCF,IAAI,IAAKA,IAAI,CAACC,aAAa,CAACE,KAAK,CACnC,EACD,CAAC,KAAK,EAAE,KAAK,CAAC,CACf,CAACR,GAAG,CAAC,CAACC,CAAC,EAAEQ,KAAK;QAAA,IAAAC,YAAA;QAAA,OAAM;UACnBC,GAAG,EAAEF,KAAK;UACVG,IAAI,EAAEX,CAAC,CAACK,aAAa,CAACM,IAAI;UAC1BC,KAAK,GAAAH,YAAA,GAAE3B,MAAM,CAAC+B,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKf,CAAC,CAACK,aAAa,CAACW,SAAS,CAAC,cAAAP,YAAA,uBAAtDA,YAAA,CAAwDQ,GAAG;UAClEV,KAAK,EAAEP,CAAC,CAACC;QACX,CAAC;MAAA,CAAC,CAAC,CACJ;IACH;EACF,CAAC,EAAE,CAACb,mBAAmB,CAAC,CAAC;EAEzB,oBACEtB,KAAA,CAAAoD,aAAA,CAAApD,KAAA,CAAAqD,QAAA,qBACErD,KAAA,CAAAoD,aAAA,CAAClC,UAAU;IAAAoC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACR,CAACpC,yBAAyB,gBACzBvB,KAAA,CAAAoD,aAAA,CAAC5C,mBAAmB;IAACoD,KAAK,EAAC,MAAM;IAACC,MAAM,EAAE,GAAG,GAAG,GAAI;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClD3D,KAAA,CAAAoD,aAAA,CAAC3C,QAAQ;IACPiB,IAAI,EAAEA,IAAK;IACXoC,MAAM,EAAE;MACNC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,CAAC,EAAE;MACTC,MAAM,EAAE;IACV,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEF3D,KAAA,CAAAoD,aAAA,CAAC1C,aAAa;IAACyD,eAAe,EAAC,KAAK;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACvC3D,KAAA,CAAAoD,aAAA,CAACxC,KAAK;IAACwD,OAAO,EAAC,MAAM;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACxB3D,KAAA,CAAAoD,aAAA,CAACvC,KAAK;IAACe,MAAM,EAAEA,MAAO;IAACyC,SAAS,EAAE,EAAG;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACxC3D,KAAA,CAAAoD,aAAA,CAACtC,OAAO;IAAAwC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACX3D,KAAA,CAAAoD,aAAA,CAACzC,GAAG;IAACkC,IAAI,EAAC,YAAO;IAACuB,OAAO,EAAC,OAAO;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9BjC,IAAI,CAACO,GAAG,CAAC,CAACqC,CAAC,EAAEC,CAAC,kBACbvE,KAAA,CAAAoD,aAAA,CAACrC,IAAI;IAAC6B,GAAG,EAAE2B,CAAE;IAACC,IAAI,EAAEF,CAAC,CAACxB,KAAM;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAC7B,CAAC,CACE,CACG,CACS,gBAEtB3D,KAAA,CAAAoD,aAAA,CAACjC,WAAW;IAAAmC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACV3D,KAAA,CAAAoD,aAAA,CAAC9C,MAAM;IAACmE,QAAQ;IAACC,MAAM,EAAEnD,yBAA0B;IAAA+B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjD3D,KAAA,CAAAoD,aAAA,CAAC7C,MAAM;IAAA+C,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,CACH,CAEZ,CAsBU,CACZ;AAEP,CAAC;AAED,eAAetC,SAAS"},"metadata":{},"sourceType":"module"}