{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\medical-test\\\\components\\\\subjects\\\\MedicalTestFilter.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Checkbox } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { InstantSearchBar } from 'app/components/shared';\nimport { subjectTypeList } from 'infection-chain/utils/helpers';\nconst Wrapper = styled.div`\n  padding: 8px;\n`;\nconst ButtonWrapper = styled.div`\n  margin-bottom: 16px;\n`;\nconst MedicalTestFilter = props => {\n  const {\n    onChange\n  } = props;\n  const [searchValue, setSearchValue] = useState('');\n  const [typeFilterList, setTypeFilterList] = useState([]);\n  const [takeUnExaminedSubjects, setTakeUnExaminedSubjects] = useState(null);\n  const [takeOnlyPositiveSubjects, setTakeOnlyPositiveSubjects] = useState(false);\n  useEffect(() => {\n    onChange({\n      subjectName: searchValue,\n      subjectTypes: typeFilterList,\n      takeUnExaminedSubjects,\n      takeOnlyPositiveSubjects\n    });\n    // eslint-disable-next-line\n  }, [searchValue, typeFilterList, takeUnExaminedSubjects, takeOnlyPositiveSubjects]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InstantSearchBar, {\n    onChange: v => setSearchValue(v),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, subjectTypeList.map((t, index) => {\n    if (index !== subjectTypeList.length - 1) {\n      return /*#__PURE__*/React.createElement(Button, {\n        key: t.value,\n        color: t.color,\n        content: t.label,\n        basic: !typeFilterList.includes(t.value),\n        onClick: () => {\n          if (typeFilterList.includes(t.value)) {\n            setTypeFilterList(typeFilterList.filter(tp => tp !== t.value));\n          } else {\n            setTypeFilterList([...typeFilterList, t.value]);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      });\n    }\n    return '';\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ui form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    control: Checkbox,\n    label: \"\\u0110\\xE3 x\\xE9t nghi\\u1EC7m\",\n    indeterminate: takeUnExaminedSubjects === null,\n    checked: !takeUnExaminedSubjects || false,\n    onClick: () => {\n      switch (takeUnExaminedSubjects) {\n        case null:\n          setTakeUnExaminedSubjects(true);\n          break;\n        case true:\n          setTakeUnExaminedSubjects(false);\n          break;\n        case false:\n          setTakeUnExaminedSubjects(null);\n          break;\n        default:\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    control: Checkbox,\n    label: \"D\\u01B0\\u01A1ng t\\xEDnh\",\n    checked: takeOnlyPositiveSubjects,\n    onClick: () => setTakeOnlyPositiveSubjects(!takeOnlyPositiveSubjects),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }))))));\n};\nMedicalTestFilter.propTypes = {\n  onChange: PropTypes.func\n};\nMedicalTestFilter.defaultProps = {\n  onChange: () => {}\n};\nexport default MedicalTestFilter;","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Button","Form","Checkbox","styled","InstantSearchBar","subjectTypeList","Wrapper","div","ButtonWrapper","MedicalTestFilter","props","onChange","searchValue","setSearchValue","typeFilterList","setTypeFilterList","takeUnExaminedSubjects","setTakeUnExaminedSubjects","takeOnlyPositiveSubjects","setTakeOnlyPositiveSubjects","subjectName","subjectTypes","createElement","Fragment","v","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Group","map","t","index","length","key","value","color","content","label","basic","includes","onClick","filter","tp","className","Field","control","indeterminate","checked","propTypes","func","defaultProps"],"sources":["H:/BAKCO/pj/data reconciliation/src/medical-test/components/subjects/MedicalTestFilter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Checkbox } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nimport { InstantSearchBar } from 'app/components/shared';\n\nimport { subjectTypeList } from 'infection-chain/utils/helpers';\n\nconst Wrapper = styled.div`\n  padding: 8px;\n`;\nconst ButtonWrapper = styled.div`\n  margin-bottom: 16px;\n`;\n\nconst MedicalTestFilter = (props) => {\n  const { onChange } = props;\n\n  const [searchValue, setSearchValue] = useState('');\n  const [typeFilterList, setTypeFilterList] = useState([]);\n  const [takeUnExaminedSubjects, setTakeUnExaminedSubjects] = useState(null);\n  const [takeOnlyPositiveSubjects, setTakeOnlyPositiveSubjects] =\n    useState(false);\n\n  useEffect(() => {\n    onChange({\n      subjectName: searchValue,\n      subjectTypes: typeFilterList,\n      takeUnExaminedSubjects,\n      takeOnlyPositiveSubjects,\n    });\n    // eslint-disable-next-line\n  }, [\n    searchValue,\n    typeFilterList,\n    takeUnExaminedSubjects,\n    takeOnlyPositiveSubjects,\n  ]);\n\n  return (\n    <>\n      <InstantSearchBar onChange={(v) => setSearchValue(v)}>\n        <Wrapper>\n          <ButtonWrapper>\n            <Button.Group>\n              {subjectTypeList.map((t, index) => {\n                if (index !== subjectTypeList.length - 1) {\n                  return (\n                    <Button\n                      key={t.value}\n                      color={t.color}\n                      content={t.label}\n                      basic={!typeFilterList.includes(t.value)}\n                      onClick={() => {\n                        if (typeFilterList.includes(t.value)) {\n                          setTypeFilterList(\n                            typeFilterList.filter((tp) => tp !== t.value),\n                          );\n                        } else {\n                          setTypeFilterList([...typeFilterList, t.value]);\n                        }\n                      }}\n                    />\n                  );\n                }\n                return '';\n              })}\n            </Button.Group>\n          </ButtonWrapper>\n\n          <div className=\"ui form\">\n            <Form.Group>\n              <Form.Field\n                control={Checkbox}\n                label=\"Đã xét nghiệm\"\n                indeterminate={takeUnExaminedSubjects === null}\n                checked={!takeUnExaminedSubjects || false}\n                onClick={() => {\n                  switch (takeUnExaminedSubjects) {\n                    case null:\n                      setTakeUnExaminedSubjects(true);\n                      break;\n                    case true:\n                      setTakeUnExaminedSubjects(false);\n                      break;\n                    case false:\n                      setTakeUnExaminedSubjects(null);\n                      break;\n                    default:\n                  }\n                }}\n              />\n              <Form.Field\n                control={Checkbox}\n                label=\"Dương tính\"\n                checked={takeOnlyPositiveSubjects}\n                onClick={() =>\n                  setTakeOnlyPositiveSubjects(!takeOnlyPositiveSubjects)\n                }\n              />\n            </Form.Group>\n          </div>\n        </Wrapper>\n      </InstantSearchBar>\n    </>\n  );\n};\n\nMedicalTestFilter.propTypes = {\n  onChange: PropTypes.func,\n};\n\nMedicalTestFilter.defaultProps = {\n  onChange: () => {},\n};\n\nexport default MedicalTestFilter;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,QAAQ,mBAAmB;AAC1D,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,SAASC,gBAAgB,QAAQ,uBAAuB;AAExD,SAASC,eAAe,QAAQ,+BAA+B;AAE/D,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA,CAAC;AACD,MAAMC,aAAa,GAAGL,MAAM,CAACI,GAAI;AACjC;AACA,CAAC;AAED,MAAME,iBAAiB,GAAIC,KAAK,IAAK;EACnC,MAAM;IAAEC;EAAS,CAAC,GAAGD,KAAK;EAE1B,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmB,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC1E,MAAM,CAACqB,wBAAwB,EAAEC,2BAA2B,CAAC,GAC3DtB,QAAQ,CAAC,KAAK,CAAC;EAEjBC,SAAS,CAAC,MAAM;IACda,QAAQ,CAAC;MACPS,WAAW,EAAER,WAAW;MACxBS,YAAY,EAAEP,cAAc;MAC5BE,sBAAsB;MACtBE;IACF,CAAC,CAAC;IACF;EACF,CAAC,EAAE,CACDN,WAAW,EACXE,cAAc,EACdE,sBAAsB,EACtBE,wBAAwB,CACzB,CAAC;EAEF,oBACEtB,KAAA,CAAA0B,aAAA,CAAA1B,KAAA,CAAA2B,QAAA,qBACE3B,KAAA,CAAA0B,aAAA,CAAClB,gBAAgB;IAACO,QAAQ,EAAGa,CAAC,IAAKX,cAAc,CAACW,CAAC,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnDlC,KAAA,CAAA0B,aAAA,CAAChB,OAAO;IAAAmB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACNlC,KAAA,CAAA0B,aAAA,CAACd,aAAa;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACZlC,KAAA,CAAA0B,aAAA,CAACtB,MAAM,CAAC+B,KAAK;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACVzB,eAAe,CAAC2B,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;IACjC,IAAIA,KAAK,KAAK7B,eAAe,CAAC8B,MAAM,GAAG,CAAC,EAAE;MACxC,oBACEvC,KAAA,CAAA0B,aAAA,CAACtB,MAAM;QACLoC,GAAG,EAAEH,CAAC,CAACI,KAAM;QACbC,KAAK,EAAEL,CAAC,CAACK,KAAM;QACfC,OAAO,EAAEN,CAAC,CAACO,KAAM;QACjBC,KAAK,EAAE,CAAC3B,cAAc,CAAC4B,QAAQ,CAACT,CAAC,CAACI,KAAK,CAAE;QACzCM,OAAO,EAAEA,CAAA,KAAM;UACb,IAAI7B,cAAc,CAAC4B,QAAQ,CAACT,CAAC,CAACI,KAAK,CAAC,EAAE;YACpCtB,iBAAiB,CACfD,cAAc,CAAC8B,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKZ,CAAC,CAACI,KAAK,CAAC,CAC9C;UACH,CAAC,MAAM;YACLtB,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEmB,CAAC,CAACI,KAAK,CAAC,CAAC;UACjD;QACF,CAAE;QAAAZ,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,EACF;IAEN;IACA,OAAO,EAAE;EACX,CAAC,CAAC,CACW,CACD,eAEhBlC,KAAA,CAAA0B,aAAA;IAAKwB,SAAS,EAAC,SAAS;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtBlC,KAAA,CAAA0B,aAAA,CAACrB,IAAI,CAAC8B,KAAK;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACTlC,KAAA,CAAA0B,aAAA,CAACrB,IAAI,CAAC8C,KAAK;IACTC,OAAO,EAAE9C,QAAS;IAClBsC,KAAK,EAAC,+BAAe;IACrBS,aAAa,EAAEjC,sBAAsB,KAAK,IAAK;IAC/CkC,OAAO,EAAE,CAAClC,sBAAsB,IAAI,KAAM;IAC1C2B,OAAO,EAAEA,CAAA,KAAM;MACb,QAAQ3B,sBAAsB;QAC5B,KAAK,IAAI;UACPC,yBAAyB,CAAC,IAAI,CAAC;UAC/B;QACF,KAAK,IAAI;UACPA,yBAAyB,CAAC,KAAK,CAAC;UAChC;QACF,KAAK,KAAK;UACRA,yBAAyB,CAAC,IAAI,CAAC;UAC/B;QACF;MAAQ;IAEZ,CAAE;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACF,eACFlC,KAAA,CAAA0B,aAAA,CAACrB,IAAI,CAAC8C,KAAK;IACTC,OAAO,EAAE9C,QAAS;IAClBsC,KAAK,EAAC,yBAAY;IAClBU,OAAO,EAAEhC,wBAAyB;IAClCyB,OAAO,EAAEA,CAAA,KACPxB,2BAA2B,CAAC,CAACD,wBAAwB,CACtD;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EACD,CACS,CACT,CACE,CACO,CAClB;AAEP,CAAC;AAEDrB,iBAAiB,CAAC0C,SAAS,GAAG;EAC5BxC,QAAQ,EAAEZ,SAAS,CAACqD;AACtB,CAAC;AAED3C,iBAAiB,CAAC4C,YAAY,GAAG;EAC/B1C,QAAQ,EAAEA,CAAA,KAAM,CAAC;AACnB,CAAC;AAED,eAAeF,iBAAiB"},"metadata":{},"sourceType":"module"}