{"ast":null,"code":"import { toast } from 'react-toastify';\nimport httpClient from 'app/utils/http-client';\nimport apiLinks from 'app/utils/api-links';\nimport { announceTreatmentError } from 'treatment/utils/helpers';\nimport types from './types';\nconst getVisitsRequest = () => ({\n  type: types.GET_VISITS_REQUEST\n});\nconst getVisitsSuccess = response => ({\n  type: types.GET_VISITS_SUCCESS,\n  payload: response\n});\nconst getVisitsFailure = error => ({\n  type: types.GET_VISITS_FAILURE,\n  payload: error\n});\nconst getVisits = _ref => {\n  let {\n    facilityId,\n    profileId,\n    pageSize,\n    pageIndex\n  } = _ref;\n  return dispatch => new Promise((resolve, reject) => {\n    dispatch(getVisitsRequest());\n    httpClient.callApi({\n      url: apiLinks.treatment.visit.get + profileId,\n      params: {\n        facilityId,\n        pageSize,\n        pageIndex\n      }\n    }).then(response => {\n      dispatch(getVisitsSuccess(response.data));\n      resolve(response.data);\n    }).catch(error => {\n      dispatch(getVisitsFailure(error));\n      reject();\n    });\n  });\n};\nconst createVisitRequest = () => ({\n  type: types.CREATE_VISIT_REQUEST\n});\nconst createVisitSuccess = response => ({\n  type: types.CREATE_VISIT_SUCCESS,\n  payload: response\n});\nconst createVisitFailure = error => ({\n  type: types.CREATE_VISIT_FAILURE,\n  payload: error\n});\nconst createVisit = data => dispatch => new Promise((resolve, reject) => {\n  dispatch(createVisitRequest());\n  httpClient.callApi({\n    method: 'POST',\n    url: apiLinks.treatment.visit.create,\n    data\n  }).then(response => {\n    dispatch(createVisitSuccess(response));\n    toast.success('Thành công');\n    resolve();\n  }).catch(error => {\n    announceTreatmentError(error);\n    dispatch(createVisitFailure(error));\n    reject();\n  });\n});\nconst updateVisitRequest = () => ({\n  type: types.UPDATE_VISIT_REQUEST\n});\nconst updateVisitSuccess = response => ({\n  type: types.UPDATE_VISIT_SUCCESS,\n  payload: response\n});\nconst updateVisitFailure = error => ({\n  type: types.UPDATE_VISIT_FAILURE,\n  payload: error\n});\nconst updateVisit = data => dispatch => new Promise((resolve, reject) => {\n  dispatch(updateVisitRequest());\n  httpClient.callApi({\n    method: 'PUT',\n    url: apiLinks.treatment.visit.update,\n    data\n  }).then(response => {\n    dispatch(updateVisitSuccess(response));\n    toast.success('Thành công');\n    resolve();\n  }).catch(error => {\n    announceTreatmentError(error);\n    dispatch(updateVisitFailure(error));\n    reject();\n  });\n});\nconst completeVisitRequest = () => ({\n  type: types.COMPLETE_VISIT_REQUEST\n});\nconst completeVisitSuccess = response => ({\n  type: types.COMPLETE_VISIT_SUCCESS,\n  payload: response\n});\nconst completeVisitFailure = error => ({\n  type: types.COMPLETE_VISIT_FAILURE,\n  payload: error\n});\nconst completeVisit = data => dispatch => new Promise((resolve, reject) => {\n  dispatch(completeVisitRequest());\n  httpClient.callApi({\n    method: 'PUT',\n    url: apiLinks.treatment.visit.complete,\n    data\n  }).then(response => {\n    dispatch(completeVisitSuccess(response));\n    toast.success('Thành công');\n    resolve();\n  }).catch(error => {\n    announceTreatmentError(error);\n    dispatch(completeVisitFailure(error));\n    reject();\n  });\n});\nexport { getVisits, createVisit, updateVisit, completeVisit };","map":{"version":3,"names":["toast","httpClient","apiLinks","announceTreatmentError","types","getVisitsRequest","type","GET_VISITS_REQUEST","getVisitsSuccess","response","GET_VISITS_SUCCESS","payload","getVisitsFailure","error","GET_VISITS_FAILURE","getVisits","_ref","facilityId","profileId","pageSize","pageIndex","dispatch","Promise","resolve","reject","callApi","url","treatment","visit","get","params","then","data","catch","createVisitRequest","CREATE_VISIT_REQUEST","createVisitSuccess","CREATE_VISIT_SUCCESS","createVisitFailure","CREATE_VISIT_FAILURE","createVisit","method","create","success","updateVisitRequest","UPDATE_VISIT_REQUEST","updateVisitSuccess","UPDATE_VISIT_SUCCESS","updateVisitFailure","UPDATE_VISIT_FAILURE","updateVisit","update","completeVisitRequest","COMPLETE_VISIT_REQUEST","completeVisitSuccess","COMPLETE_VISIT_SUCCESS","completeVisitFailure","COMPLETE_VISIT_FAILURE","completeVisit","complete"],"sources":["H:/BAKCO/pj/cds/src/treatment/actions/visit.js"],"sourcesContent":["import { toast } from 'react-toastify';\n\nimport httpClient from 'app/utils/http-client';\nimport apiLinks from 'app/utils/api-links';\n\nimport { announceTreatmentError } from 'treatment/utils/helpers';\n\nimport types from './types';\n\nconst getVisitsRequest = () => ({\n  type: types.GET_VISITS_REQUEST,\n});\nconst getVisitsSuccess = (response) => ({\n  type: types.GET_VISITS_SUCCESS,\n  payload: response,\n});\nconst getVisitsFailure = (error) => ({\n  type: types.GET_VISITS_FAILURE,\n  payload: error,\n});\n\nconst getVisits =\n  ({ facilityId, profileId, pageSize, pageIndex }) =>\n  (dispatch) =>\n    new Promise((resolve, reject) => {\n      dispatch(getVisitsRequest());\n      httpClient\n        .callApi({\n          url: apiLinks.treatment.visit.get + profileId,\n          params: { facilityId, pageSize, pageIndex },\n        })\n        .then((response) => {\n          dispatch(getVisitsSuccess(response.data));\n          resolve(response.data);\n        })\n        .catch((error) => {\n          dispatch(getVisitsFailure(error));\n          reject();\n        });\n    });\n\nconst createVisitRequest = () => ({\n  type: types.CREATE_VISIT_REQUEST,\n});\nconst createVisitSuccess = (response) => ({\n  type: types.CREATE_VISIT_SUCCESS,\n  payload: response,\n});\nconst createVisitFailure = (error) => ({\n  type: types.CREATE_VISIT_FAILURE,\n  payload: error,\n});\n\nconst createVisit = (data) => (dispatch) =>\n  new Promise((resolve, reject) => {\n    dispatch(createVisitRequest());\n    httpClient\n      .callApi({\n        method: 'POST',\n        url: apiLinks.treatment.visit.create,\n        data,\n      })\n      .then((response) => {\n        dispatch(createVisitSuccess(response));\n        toast.success('Thành công');\n        resolve();\n      })\n      .catch((error) => {\n        announceTreatmentError(error);\n        dispatch(createVisitFailure(error));\n        reject();\n      });\n  });\n\nconst updateVisitRequest = () => ({\n  type: types.UPDATE_VISIT_REQUEST,\n});\nconst updateVisitSuccess = (response) => ({\n  type: types.UPDATE_VISIT_SUCCESS,\n  payload: response,\n});\nconst updateVisitFailure = (error) => ({\n  type: types.UPDATE_VISIT_FAILURE,\n  payload: error,\n});\n\nconst updateVisit = (data) => (dispatch) =>\n  new Promise((resolve, reject) => {\n    dispatch(updateVisitRequest());\n    httpClient\n      .callApi({\n        method: 'PUT',\n        url: apiLinks.treatment.visit.update,\n        data,\n      })\n      .then((response) => {\n        dispatch(updateVisitSuccess(response));\n        toast.success('Thành công');\n        resolve();\n      })\n      .catch((error) => {\n        announceTreatmentError(error);\n        dispatch(updateVisitFailure(error));\n        reject();\n      });\n  });\n\nconst completeVisitRequest = () => ({\n  type: types.COMPLETE_VISIT_REQUEST,\n});\nconst completeVisitSuccess = (response) => ({\n  type: types.COMPLETE_VISIT_SUCCESS,\n  payload: response,\n});\nconst completeVisitFailure = (error) => ({\n  type: types.COMPLETE_VISIT_FAILURE,\n  payload: error,\n});\n\nconst completeVisit = (data) => (dispatch) =>\n  new Promise((resolve, reject) => {\n    dispatch(completeVisitRequest());\n    httpClient\n      .callApi({\n        method: 'PUT',\n        url: apiLinks.treatment.visit.complete,\n        data,\n      })\n      .then((response) => {\n        dispatch(completeVisitSuccess(response));\n        toast.success('Thành công');\n        resolve();\n      })\n      .catch((error) => {\n        announceTreatmentError(error);\n        dispatch(completeVisitFailure(error));\n        reject();\n      });\n  });\n\nexport { getVisits, createVisit, updateVisit, completeVisit };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}