{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\dashboard\\\\components\\\\HeatMapChart.js\";\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Card, Select } from 'semantic-ui-react';\nimport styled from 'styled-components';\nimport { GoogleMap, HeatmapLayer, useLoadScript } from '@react-google-maps/api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getOutbreakLocation, searchLocation } from 'contact/actions/contact';\nconst locationOptions = [{\n  text: 'Địa điểm tiếp xúc',\n  value: 1\n}, {\n  text: 'Địa điểm phát bệnh',\n  value: 2\n}];\nconst mapContainerStyle = {\n  height: '500px',\n  width: '100%'\n};\nconst center = {\n  lat: 10.8231,\n  lng: 106.6297\n};\nconst StyledCard = styled(Card)`\n  width: auto !important;\n`;\nconst RightAlign = styled.div`\n  text-align: right !important;\n`;\nconst libraries = ['visualization'];\n\n// const gradient = [\n//   'rgba(0, 255, 255, 0)',\n//   'rgba(0, 255, 255, 1)',\n//   'rgba(0, 191, 255, 1)',\n//   'rgba(0, 127, 255, 1)',\n//   'rgba(0, 63, 255, 1)',\n//   'rgba(0, 0, 255, 1)',\n//   'rgba(0, 0, 223, 1)',\n//   'rgba(0, 0, 191, 1)',\n//   'rgba(0, 0, 159, 1)',\n//   'rgba(0, 0, 127, 1)',\n//   'rgba(63, 0, 91, 1)',\n//   'rgba(127, 0, 63, 1)',\n//   'rgba(191, 0, 31, 1)',\n//   'rgba(255, 0, 0, 1)',\n// ];\n\nconst HeatMapChart = () => {\n  const [map, setMap] = useState(null);\n  const onLoad = useCallback(m => setMap(m), []);\n  const {\n    isLoaded\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries\n  });\n  const dispatch = useDispatch();\n  const [locationType, setLocationType] = useState(1);\n  useEffect(() => {\n    dispatch(searchLocation({\n      pageIndex: 0,\n      pageSize: 0,\n      name: ''\n    }));\n    dispatch(getOutbreakLocation());\n  }, [dispatch]);\n  const {\n    searchContactLocationList: {\n      data: contactLocationList\n    },\n    outbreakLocationList\n  } = useSelector(state => state.contact);\n  const heatmapLayer = useMemo(() => {\n    if (map) {\n      var _ref, _ref$filter;\n      return /*#__PURE__*/React.createElement(HeatmapLayer, {\n        data: (_ref = locationType === 1 ? contactLocationList || [] : outbreakLocationList) === null || _ref === void 0 ? void 0 : (_ref$filter = _ref.filter(d => d.lat && d.lng)) === null || _ref$filter === void 0 ? void 0 : _ref$filter.map(d => {\n          var _window$google;\n          return ((_window$google = window.google) === null || _window$google === void 0 ? void 0 : _window$google.maps) ? new window.google.maps.LatLng(d.lat, d.lng) : [];\n        }),\n        options: {\n          radius: 20,\n          gradient: null\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      });\n    }\n    return null;\n  }, [contactLocationList, outbreakLocationList, locationType, map]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(RightAlign, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    text: locationOptions.find(e => e.value === locationType).text,\n    options: locationOptions,\n    onChange: (_, _ref2) => {\n      let {\n        value: v\n      } = _ref2;\n      return setLocationType(v);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  })), isLoaded && /*#__PURE__*/React.createElement(StyledCard, {\n    className: \"heatmap-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    id: \"heatmap-example\",\n    mapContainerStyle: mapContainerStyle,\n    zoom: 11,\n    center: center,\n    onLoad: onLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, heatmapLayer)));\n};\nexport default HeatMapChart;","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","Card","Select","styled","GoogleMap","HeatmapLayer","useLoadScript","useDispatch","useSelector","getOutbreakLocation","searchLocation","locationOptions","text","value","mapContainerStyle","height","width","center","lat","lng","StyledCard","RightAlign","div","libraries","HeatMapChart","map","setMap","onLoad","m","isLoaded","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","dispatch","locationType","setLocationType","pageIndex","pageSize","name","searchContactLocationList","data","contactLocationList","outbreakLocationList","state","contact","heatmapLayer","_ref","_ref$filter","createElement","filter","d","_window$google","window","google","maps","LatLng","options","radius","gradient","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","find","e","onChange","_","_ref2","v","className","id","zoom"],"sources":["H:/BAKCO/pj/cds/src/dashboard/components/HeatMapChart.js"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { Card, Select } from 'semantic-ui-react';\nimport styled from 'styled-components';\n\nimport { GoogleMap, HeatmapLayer, useLoadScript } from '@react-google-maps/api';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getOutbreakLocation, searchLocation } from 'contact/actions/contact';\n\nconst locationOptions = [\n  { text: 'Địa điểm tiếp xúc', value: 1 },\n  { text: 'Địa điểm phát bệnh', value: 2 },\n];\n\nconst mapContainerStyle = {\n  height: '500px',\n  width: '100%',\n};\n\nconst center = {\n  lat: 10.8231,\n  lng: 106.6297,\n};\n\nconst StyledCard = styled(Card)`\n  width: auto !important;\n`;\nconst RightAlign = styled.div`\n  text-align: right !important;\n`;\n\nconst libraries = ['visualization'];\n\n// const gradient = [\n//   'rgba(0, 255, 255, 0)',\n//   'rgba(0, 255, 255, 1)',\n//   'rgba(0, 191, 255, 1)',\n//   'rgba(0, 127, 255, 1)',\n//   'rgba(0, 63, 255, 1)',\n//   'rgba(0, 0, 255, 1)',\n//   'rgba(0, 0, 223, 1)',\n//   'rgba(0, 0, 191, 1)',\n//   'rgba(0, 0, 159, 1)',\n//   'rgba(0, 0, 127, 1)',\n//   'rgba(63, 0, 91, 1)',\n//   'rgba(127, 0, 63, 1)',\n//   'rgba(191, 0, 31, 1)',\n//   'rgba(255, 0, 0, 1)',\n// ];\n\nconst HeatMapChart = () => {\n  const [map, setMap] = useState(null);\n  const onLoad = useCallback((m) => setMap(m), []);\n  const { isLoaded } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    libraries,\n  });\n\n  const dispatch = useDispatch();\n  const [locationType, setLocationType] = useState(1);\n  useEffect(() => {\n    dispatch(searchLocation({ pageIndex: 0, pageSize: 0, name: '' }));\n    dispatch(getOutbreakLocation());\n  }, [dispatch]);\n\n  const {\n    searchContactLocationList: { data: contactLocationList },\n    outbreakLocationList,\n  } = useSelector((state) => state.contact);\n\n  const heatmapLayer = useMemo(() => {\n    if (map) {\n      return (\n        <HeatmapLayer\n          data={(locationType === 1\n            ? contactLocationList || []\n            : outbreakLocationList\n          )\n            ?.filter((d) => d.lat && d.lng)\n            ?.map((d) =>\n              window.google?.maps\n                ? new window.google.maps.LatLng(d.lat, d.lng)\n                : [],\n            )}\n          options={{\n            radius: 20,\n            gradient: null,\n          }}\n        />\n      );\n    }\n    return null;\n  }, [contactLocationList, outbreakLocationList, locationType, map]);\n\n  return (\n    <>\n      <RightAlign>\n        <Select\n          text={locationOptions.find((e) => e.value === locationType).text}\n          options={locationOptions}\n          onChange={(_, { value: v }) => setLocationType(v)}\n        />\n      </RightAlign>\n      {isLoaded && (\n        <StyledCard className=\"heatmap-chart\">\n          <GoogleMap\n            id=\"heatmap-example\"\n            mapContainerStyle={mapContainerStyle}\n            zoom={11}\n            center={center}\n            onLoad={onLoad}\n          >\n            {heatmapLayer}\n          </GoogleMap>\n        </StyledCard>\n      )}\n    </>\n  );\n};\n\nexport default HeatMapChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}