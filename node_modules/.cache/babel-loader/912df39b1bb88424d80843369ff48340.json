{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\cds\\\\src\\\\patient-management\\\\components\\\\infected-patient\\\\QuickTestHistoryTable.js\";\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { FiChevronRight, FiCommand } from 'react-icons/fi';\nimport { Breadcrumb } from 'semantic-ui-react';\nimport { DataTable } from 'app/components/shared';\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuth } from 'app/hooks';\nimport { createAssignQuickTest, getPersonalQuickTestHistory } from 'medical-test/actions/medical-test';\nimport { getAssignQuickTestStatus } from 'medical-test/utils/helpers';\nimport QuickTestHistoryDetailTable from './QuickTestHistoryDetailTable';\nconst BreadcrumbWrapper = styled.div`\n  margin-bottom: 8px;\n`;\nconst StyledChevronRight = styled(FiChevronRight)`\n  vertical-align: bottom !important;\n`;\nconst columns = [{\n  Header: '#',\n  accessor: 'index'\n}, {\n  Header: 'Tên cơ sở',\n  accessor: 'unit'\n}, {\n  Header: 'Trạng thái',\n  formatter: () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 45\n    }\n  }, \"\\u0110\\xE3 x\\xE9t nghi\\u1EC7m\")\n}];\nconst QuickTestHistoryTable = _ref => {\n  let {\n    initialData: {\n      profileHealthDeclarations,\n      profileInformation\n    },\n    profile,\n    loading,\n    onRefresh\n  } = _ref;\n  const [selected, setSelected] = useState(undefined);\n  const {\n    id\n  } = useParams();\n  const {\n    isUsername\n  } = useAuth();\n  const dispatch = useDispatch();\n  const handleCreateAssignQuickTest = async () => {\n    try {\n      var _profile$id;\n      await dispatch(createAssignQuickTest([{\n        profileId: (_profile$id = profile === null || profile === void 0 ? void 0 : profile.id) !== null && _profile$id !== void 0 ? _profile$id : id\n      }]));\n      onRefresh();\n      // eslint-disable-next-line no-empty\n    } catch (error) {}\n  };\n  const dataTable = useMemo(() => /*#__PURE__*/React.createElement(DataTable, {\n    title: \"L\\u1ECBch s\\u1EED test nhanh\",\n    columns: columns,\n    loading: loading,\n    data: profileHealthDeclarations.map((h, i) => ({\n      ...h,\n      index: i + 1,\n      immunization: {\n        vaccinationStatus: profileInformation === null || profileInformation === void 0 ? void 0 : profileInformation.immunizationStatus,\n        lastInjectionDate: profileInformation === null || profileInformation === void 0 ? void 0 : profileInformation.injectionDate\n      }\n    })),\n    onRowClick: d => {\n      if (d.guid) {\n        setSelected(d);\n      } else {\n        toast.info('Chưa có dữ liệu');\n      }\n    },\n    actions: [{\n      icon: /*#__PURE__*/React.createElement(FiCommand, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }),\n      title: 'Chỉ định xét nghiệm',\n      color: 'yellow',\n      globalAction: true,\n      onClick: () => handleCreateAssignQuickTest(),\n      disabled: !((profile === null || profile === void 0 ? void 0 : profile.cccd) || (profile === null || profile === void 0 ? void 0 : profile.cmnd) || (profile === null || profile === void 0 ? void 0 : profile.passportNumber) || (profile === null || profile === void 0 ? void 0 : profile.healthInsuranceNumber)),\n      hidden: isUsername('hcdc')\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  })\n  // eslint-disable-next-line\n  , [loading, profileHealthDeclarations, isUsername]);\n  const sections = useMemo(() => {\n    const bc = [{\n      key: 0,\n      content: selected && 'Lịch sử test nhanh',\n      active: !selected,\n      onClick: () => setSelected(undefined)\n    }];\n    return bc;\n  }, [selected]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, selected ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BreadcrumbWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    sections: sections,\n    icon: /*#__PURE__*/React.createElement(StyledChevronRight, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 51\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(QuickTestHistoryDetailTable, {\n    data: selected,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })) : dataTable);\n};\nQuickTestHistoryTable.propTypes = {\n  profile: PropTypes.shape({\n    id: PropTypes.number\n  }),\n  loading: PropTypes.bool\n};\nQuickTestHistoryTable.defaultProps = {\n  profile: {},\n  loading: false\n};\nexport default QuickTestHistoryTable;","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","styled","toast","PropTypes","FiChevronRight","FiCommand","Breadcrumb","DataTable","useParams","useDispatch","useSelector","useAuth","createAssignQuickTest","getPersonalQuickTestHistory","getAssignQuickTestStatus","QuickTestHistoryDetailTable","BreadcrumbWrapper","div","StyledChevronRight","columns","Header","accessor","formatter","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","QuickTestHistoryTable","_ref","initialData","profileHealthDeclarations","profileInformation","profile","loading","onRefresh","selected","setSelected","undefined","id","isUsername","dispatch","handleCreateAssignQuickTest","_profile$id","profileId","error","dataTable","title","data","map","h","i","index","immunization","vaccinationStatus","immunizationStatus","lastInjectionDate","injectionDate","onRowClick","d","guid","info","actions","icon","color","globalAction","onClick","disabled","cccd","cmnd","passportNumber","healthInsuranceNumber","hidden","sections","bc","key","content","active","Fragment","propTypes","shape","number","bool","defaultProps"],"sources":["H:/BAKCO/pj/cds/src/patient-management/components/infected-patient/QuickTestHistoryTable.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nimport { FiChevronRight, FiCommand } from 'react-icons/fi';\nimport { Breadcrumb } from 'semantic-ui-react';\nimport { DataTable } from 'app/components/shared';\n\nimport { useParams } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuth } from 'app/hooks';\nimport { createAssignQuickTest, getPersonalQuickTestHistory } from 'medical-test/actions/medical-test';\nimport { getAssignQuickTestStatus } from 'medical-test/utils/helpers';\nimport QuickTestHistoryDetailTable from './QuickTestHistoryDetailTable';\n\nconst BreadcrumbWrapper = styled.div`\n  margin-bottom: 8px;\n`;\nconst StyledChevronRight = styled(FiChevronRight)`\n  vertical-align: bottom !important;\n`;\n\nconst columns = [\n  { Header: '#', accessor: 'index' },\n  { Header: 'Tên cơ sở', accessor: 'unit' },\n  { Header: 'Trạng thái', formatter: () => (<div>Đã xét nghiệm</div>) },\n];\n\nconst QuickTestHistoryTable = ({ initialData: { profileHealthDeclarations, profileInformation }, profile, loading, onRefresh }) => {\n  const [selected, setSelected] = useState(undefined);\n\n  const { id } = useParams();\n  const { isUsername } = useAuth();\n  const dispatch = useDispatch();\n\n  const handleCreateAssignQuickTest = async () => {\n    try {\n      await dispatch(createAssignQuickTest([{ profileId: profile?.id ?? id }]));\n      onRefresh();\n      // eslint-disable-next-line no-empty\n    } catch (error) { }\n  };\n\n\n  const dataTable = useMemo(() => (\n    <DataTable\n      title=\"Lịch sử test nhanh\"\n      columns={columns}\n      loading={loading}\n      data={profileHealthDeclarations.map((h, i) => ({ ...h, index: i + 1, immunization: { vaccinationStatus: profileInformation?.immunizationStatus, lastInjectionDate: profileInformation?.injectionDate } }))}\n      onRowClick={(d) => {\n        if (d.guid) {\n          setSelected(d);\n        } else {\n          toast.info('Chưa có dữ liệu');\n        }\n      }}\n      actions={[\n        {\n          icon: <FiCommand />,\n          title: 'Chỉ định xét nghiệm',\n          color: 'yellow',\n          globalAction: true,\n          onClick: () => handleCreateAssignQuickTest(),\n          disabled: !(\n            profile?.cccd ||\n            profile?.cmnd ||\n            profile?.passportNumber ||\n            profile?.healthInsuranceNumber\n          ),\n          hidden: isUsername('hcdc'),\n        },\n      ]}\n    />\n    // eslint-disable-next-line\n  ), [loading, profileHealthDeclarations, isUsername]);\n\n  const sections = useMemo(() => {\n    const bc = [\n      {\n        key: 0,\n        content: selected && 'Lịch sử test nhanh',\n        active: !selected,\n        onClick: () => setSelected(undefined),\n      },\n    ];\n\n    return bc;\n  }, [selected]);\n\n  return (\n    <div>\n      {selected ? (\n        <>\n          <BreadcrumbWrapper>\n            <Breadcrumb sections={sections} icon={<StyledChevronRight />} />\n          </BreadcrumbWrapper>\n          <QuickTestHistoryDetailTable data={selected} />\n        </>\n      ) : (\n        dataTable\n      )}\n    </div>\n  );\n};\n\nQuickTestHistoryTable.propTypes = {\n  profile: PropTypes.shape({\n    id: PropTypes.number,\n  }),\n  loading: PropTypes.bool,\n};\n\nQuickTestHistoryTable.defaultProps = {\n  profile: {},\n  loading: false,\n};\n\nexport default QuickTestHistoryTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}