{"ast":null,"code":"var ClusterIcon = /*#__PURE__*/\nfunction () {\n  function ClusterIcon(cluster, styles) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView);\n    this.cluster = cluster;\n    this.className = this.cluster.getClusterer().getClusterClass();\n    this.styles = styles;\n    this.center = undefined;\n    this.div = null;\n    this.sums = null;\n    this.visible = false;\n    this.boundsChangedListener = null;\n    this.url = '';\n    this.height = 0;\n    this.width = 0;\n    this.anchorText = [0, 0];\n    this.anchorIcon = [0, 0];\n    this.textColor = 'black';\n    this.textSize = 11;\n    this.textDecoration = 'none';\n    this.fontWeight = 'bold';\n    this.fontStyle = 'normal';\n    this.fontFamily = 'Arial,sans-serif';\n    this.backgroundPosition = '0 0'; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.setMap(cluster.getMap()); // Note: this causes onAdd to be called\n  }\n\n  var _proto = ClusterIcon.prototype;\n  _proto.onAdd = function onAdd() {\n    var _this = this;\n    var cMouseDownInCluster;\n    var cDraggingMapByCluster;\n    this.div = document.createElement('div');\n    this.div.className = this.className;\n    if (this.visible) {\n      this.show();\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.getPanes().overlayMouseTarget.appendChild(this.div); // Fix for Issue 157\n\n    this.boundsChangedListener = google.maps.event.addListener(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'boundschanged', function boundsChanged() {\n      cDraggingMapByCluster = cMouseDownInCluster;\n    });\n    google.maps.event.addDomListener(this.div, 'mousedown', function onMouseDown() {\n      cMouseDownInCluster = true;\n      cDraggingMapByCluster = false;\n    }); // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n\n    google.maps.event.addDomListener(this.div, 'click',\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function (event) {\n      cMouseDownInCluster = false;\n      if (!cDraggingMapByCluster) {\n        var markerClusterer = _this.cluster.getClusterer();\n        /**\r\n         * This event is fired when a cluster marker is clicked.\r\n         * @name MarkerClusterer#click\r\n         * @param {Cluster} c The cluster that was clicked.\r\n         * @event\r\n         */\n\n        google.maps.event.trigger(markerClusterer, 'click', _this.cluster);\n        google.maps.event.trigger(markerClusterer, 'clusterclick', _this.cluster); // deprecated name\n        // The default click handler follows. Disable it by setting\n        // the zoomOnClick property to false.\n\n        if (markerClusterer.getZoomOnClick()) {\n          // Zoom into the cluster.\n          var maxZoom = markerClusterer.getMaxZoom();\n          var bounds = _this.cluster.getBounds(); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n          // @ts-ignore\n\n          markerClusterer.getMap().fitBounds(bounds); // There is a fix for Issue 170 here:\n\n          setTimeout(function timeout() {\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            markerClusterer.getMap().fitBounds(bounds); // Don't zoom beyond the max zoom level\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n\n            if (maxZoom !== null && markerClusterer.getMap().getZoom() > maxZoom) {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              markerClusterer.getMap().setZoom(maxZoom + 1);\n            }\n          }, 100);\n        } // Prevent event propagation to the map:\n\n        event.cancelBubble = true;\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        }\n      }\n    });\n    google.maps.event.addDomListener(this.div, 'mouseover',\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      /**\r\n       * This event is fired when the mouse moves over a cluster marker.\r\n       * @name MarkerClusterer#mouseover\r\n       * @param {Cluster} c The cluster that the mouse moved over.\r\n       * @event\r\n       */\n      google.maps.event.trigger(_this.cluster.getClusterer(), 'mouseover', _this.cluster);\n    }); // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n\n    google.maps.event.addDomListener(this.div, 'mouseout',\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      /**\r\n       * This event is fired when the mouse moves out of a cluster marker.\r\n       * @name MarkerClusterer#mouseout\r\n       * @param {Cluster} c The cluster that the mouse moved out of.\r\n       * @event\r\n       */\n      google.maps.event.trigger(_this.cluster.getClusterer(), 'mouseout', _this.cluster);\n    });\n  };\n  _proto.onRemove = function onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.hide();\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener);\n      }\n      google.maps.event.clearInstanceListeners(this.div);\n      this.div.parentNode.removeChild(this.div);\n      this.div = null;\n    }\n  };\n  _proto.draw = function draw() {\n    if (this.visible && this.div !== null && this.center) {\n      var _this$getPosFromLatLn = this.getPosFromLatLng(this.center),\n        x = _this$getPosFromLatLn.x,\n        y = _this$getPosFromLatLn.y;\n      this.div.style.top = y + 'px';\n      this.div.style.left = x + 'px';\n    }\n  };\n  _proto.hide = function hide() {\n    if (this.div) {\n      this.div.style.display = 'none';\n    }\n    this.visible = false;\n  };\n  _proto.show = function show() {\n    if (this.div && this.center) {\n      var img = '',\n        divTitle = ''; // NOTE: values must be specified in px units\n\n      var bp = this.backgroundPosition.split(' ');\n      var spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10);\n      var spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10);\n      var pos = this.getPosFromLatLng(this.center);\n      if (this.sums === null || typeof this.sums.title === 'undefined' || this.sums.title === '') {\n        divTitle = this.cluster.getClusterer().getTitle();\n      } else {\n        divTitle = this.sums.title;\n      }\n      this.div.style.cssText = this.createCss(pos);\n      img = \"<img alt='\" + divTitle + \"' src='\" + this.url + \"' style='position: absolute; top: \" + spriteV + 'px; left: ' + spriteH + 'px; '; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      //@ts-ignore\n\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img += 'clip: rect(' + -1 * spriteV + 'px, ' + (-1 * spriteH + this.width) + 'px, ' + (-1 * spriteV + this.height) + 'px, ' + -1 * spriteH + 'px);';\n      }\n      img += \"'>\";\n      this.div.innerHTML = img + \"<div style='\" + 'position: absolute;' + 'top: ' + this.anchorText[0] + 'px;' + 'left: ' + this.anchorText[1] + 'px;' + 'color: ' + this.textColor + ';' + 'font-size: ' + this.textSize + 'px;' + 'font-family: ' + this.fontFamily + ';' + 'font-weight: ' + this.fontWeight + ';' + 'font-style: ' + this.fontStyle + ';' + 'text-decoration: ' + this.textDecoration + ';' + 'text-align: center;' + 'width: ' + this.width + 'px;' + 'line-height:' + this.height + 'px;' + \"'>\" +\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.sums.text + '</div>';\n      this.div.title = divTitle;\n      this.div.style.display = '';\n    }\n    this.visible = true;\n  };\n  _proto.useStyle = function useStyle(sums) {\n    this.sums = sums;\n    var style = this.styles[Math.min(this.styles.length - 1, Math.max(0, sums.index - 1))];\n    this.url = style.url;\n    this.height = style.height;\n    this.width = style.width;\n    this.anchorText = style.anchorText || [0, 0];\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2];\n    this.textColor = style.textColor || 'black';\n    this.textSize = style.textSize || 11;\n    this.textDecoration = style.textDecoration || 'none';\n    this.fontWeight = style.fontWeight || 'bold';\n    this.fontStyle = style.fontStyle || 'normal';\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif';\n    this.backgroundPosition = style.backgroundPosition || '0 0';\n  };\n  _proto.setCenter = function setCenter(center) {\n    this.center = center;\n  };\n  _proto.createCss = function createCss(pos) {\n    var style = [];\n    style.push('cursor: pointer;');\n    style.push('position: absolute; top: ' + pos.y + 'px; left: ' + pos.x + 'px;');\n    style.push('width: ' + this.width + 'px; height: ' + this.height + 'px;');\n    return style.join('');\n  };\n  _proto.getPosFromLatLng = function getPosFromLatLng(latlng) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    var pos = this.getProjection().fromLatLngToDivPixel(latlng);\n    pos.x -= this.anchorIcon[1];\n    pos.y -= this.anchorIcon[0]; // pos.x = pos.x\n    // pos.y = pos.y\n\n    return pos;\n  };\n  return ClusterIcon;\n}();\nvar Cluster = /*#__PURE__*/\nfunction () {\n  function Cluster(markerClusterer) {\n    this.markerClusterer = markerClusterer; // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.map = this.markerClusterer.getMap();\n    this.gridSize = this.markerClusterer.getGridSize();\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize();\n    this.averageCenter = this.markerClusterer.getAverageCenter();\n    this.markers = [];\n    this.center = undefined;\n    this.bounds = null;\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles());\n  }\n  var _proto = Cluster.prototype;\n  _proto.getSize = function getSize() {\n    return this.markers.length;\n  };\n  _proto.getMarkers = function getMarkers() {\n    return this.markers;\n  };\n  _proto.getCenter = function getCenter() {\n    return this.center;\n  };\n  _proto.getMap = function getMap() {\n    return this.map;\n  };\n  _proto.getClusterer = function getClusterer() {\n    return this.markerClusterer;\n  };\n  _proto.getBounds = function getBounds() {\n    var bounds = new google.maps.LatLngBounds(this.center, this.center);\n    var markers = this.getMarkers();\n    for (var i = 0; i < markers.length; i++) {\n      var position = markers[i].getPosition();\n      if (position) {\n        bounds.extend(position);\n      }\n    }\n    return bounds;\n  };\n  _proto.remove = function remove() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.clusterIcon.setMap(null);\n    this.markers = [];\n    delete this.markers;\n  };\n  _proto.addMarker = function addMarker(marker) {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false;\n    }\n    if (!this.center) {\n      var position = marker.getPosition();\n      if (position) {\n        this.center = position;\n        this.calculateBounds();\n      }\n    } else {\n      if (this.averageCenter) {\n        var _position = marker.getPosition();\n        if (_position) {\n          var length = this.markers.length + 1;\n          this.center = new google.maps.LatLng((this.center.lat() * (length - 1) + _position.lat()) / length, (this.center.lng() * (length - 1) + _position.lng()) / length);\n          this.calculateBounds();\n        }\n      }\n    }\n    marker.isAdded = true;\n    this.markers.push(marker);\n    var mCount = this.markers.length;\n    var maxZoom = this.markerClusterer.getMaxZoom();\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map);\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map);\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (var i = 0; i < mCount; i++) {\n        this.markers[i].setMap(null);\n      }\n    } else {\n      marker.setMap(null);\n    }\n    return true;\n  };\n  _proto.isMarkerInClusterBounds = function isMarkerInClusterBounds(marker) {\n    if (this.bounds !== null) {\n      var position = marker.getPosition();\n      if (position) {\n        return this.bounds.contains(position);\n      }\n    }\n    return false;\n  };\n  _proto.calculateBounds = function calculateBounds() {\n    this.bounds = this.markerClusterer.getExtendedBounds(new google.maps.LatLngBounds(this.center, this.center));\n  };\n  _proto.updateIcon = function updateIcon() {\n    var mCount = this.markers.length;\n    var maxZoom = this.markerClusterer.getMaxZoom();\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      this.clusterIcon.hide();\n      return;\n    }\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide();\n      return;\n    }\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center);\n    }\n    this.clusterIcon.useStyle(this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length));\n    this.clusterIcon.show();\n  };\n  _proto.isMarkerAlreadyAdded = function isMarkerAlreadyAdded(marker) {\n    if (this.markers.includes) {\n      return this.markers.includes(marker);\n    } else {\n      for (var i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  return Cluster;\n}();\n\n/* global google */\n\nvar CALCULATOR = function CALCULATOR(markers, numStyles) {\n  var index = 0;\n  var title = '';\n  var count = markers.length.toString();\n  var dv = count;\n  while (dv !== 0) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    dv = parseInt(dv, 10) / 10;\n    index++;\n  }\n  index = Math.min(index, numStyles);\n  return {\n    text: count,\n    index: index,\n    title: title\n  };\n};\nvar BATCH_SIZE = 2000;\nvar BATCH_SIZE_IE = 500;\nvar IMAGE_PATH = 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m';\nvar IMAGE_EXTENSION = 'png';\nvar IMAGE_SIZES = [53, 56, 66, 78, 90];\nvar CLUSTERER_CLASS = 'cluster';\nvar Clusterer = /*#__PURE__*/\nfunction () {\n  function Clusterer(map, optMarkers, optOptions) {\n    if (optMarkers === void 0) {\n      optMarkers = [];\n    }\n    if (optOptions === void 0) {\n      optOptions = {};\n    }\n    this.extend(Clusterer, google.maps.OverlayView);\n    this.markers = [];\n    this.clusters = [];\n    this.listeners = [];\n    this.activeMap = null;\n    this.ready = false;\n    this.gridSize = optOptions.gridSize || 60;\n    this.minClusterSize = optOptions.minimumClusterSize || 2;\n    this.maxZoom = optOptions.maxZoom || null;\n    this.styles = optOptions.styles || [];\n    this.title = optOptions.title || '';\n    this.zoomOnClick = true;\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick;\n    }\n    this.averageCenter = false;\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter;\n    }\n    this.ignoreHidden = false;\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden;\n    }\n    this.enableRetinaIcons = false;\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons;\n    }\n    this.imagePath = optOptions.imagePath || IMAGE_PATH;\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION;\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES;\n    this.calculator = optOptions.calculator || CALCULATOR;\n    this.batchSize = optOptions.batchSize || BATCH_SIZE;\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE;\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS;\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE;\n    }\n    this.timerRefStatic = null;\n    this.setupStyles();\n    this.addMarkers(optMarkers, true); // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.setMap(map); // Note: this causes onAdd to be called\n  }\n\n  var _proto = Clusterer.prototype;\n  _proto.onAdd = function onAdd() {\n    var _this = this;\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.activeMap = this.getMap();\n    this.ready = true;\n    this.repaint(); // Add the map event listeners\n\n    this.listeners = [google.maps.event.addListener(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'zoom_changed',\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      _this.resetViewport(false); // Workaround for this Google bug: when map is at level 0 and \"-\" of\n      // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n      // the map doesn't zoom out any further. In this situation, no \"idle\"\n      // event is triggered so the cluster markers that have been removed\n      // do not get redrawn. Same goes for a zoom in at maxZoom.\n\n      if (\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      _this.getMap().getZoom() === (_this.get('minZoom') || 0) ||\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      _this.getMap().getZoom() === _this.get('maxZoom')) {\n        google.maps.event.trigger(_this, 'idle');\n      }\n    }), google.maps.event.addListener(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap(), 'idle',\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    function () {\n      _this.redraw();\n    })];\n  } // eslint-disable-next-line @getify/proper-arrows/this\n  ;\n\n  _proto.onRemove = function onRemove() {\n    // Put all the managed markers back on the map:\n    for (var i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].getMap() !== this.activeMap) {\n        this.markers[i].setMap(this.activeMap);\n      }\n    } // Remove all clusters:\n\n    for (var _i = 0; _i < this.clusters.length; _i++) {\n      this.clusters[_i].remove();\n    }\n    this.clusters = []; // Remove map event listeners:\n\n    for (var _i2 = 0; _i2 < this.listeners.length; _i2++) {\n      google.maps.event.removeListener(this.listeners[_i2]);\n    }\n    this.listeners = [];\n    this.activeMap = null;\n    this.ready = false;\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n  ;\n\n  _proto.draw = function draw() {};\n  _proto.setupStyles = function setupStyles() {\n    if (this.styles.length > 0) {\n      return;\n    }\n    for (var i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: this.imagePath + (i + 1) + '.' + this.imageExtension,\n        height: this.imageSizes[i],\n        width: this.imageSizes[i]\n      });\n    }\n  };\n  _proto.fitMapToMarkers = function fitMapToMarkers() {\n    var markers = this.getMarkers();\n    var bounds = new google.maps.LatLngBounds();\n    for (var i = 0; i < markers.length; i++) {\n      var position = markers[i].getPosition();\n      if (position) {\n        bounds.extend(position);\n      }\n    } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n\n    this.getMap().fitBounds(bounds);\n  };\n  _proto.getGridSize = function getGridSize() {\n    return this.gridSize;\n  };\n  _proto.setGridSize = function setGridSize(gridSize) {\n    this.gridSize = gridSize;\n  };\n  _proto.getMinimumClusterSize = function getMinimumClusterSize() {\n    return this.minClusterSize;\n  };\n  _proto.setMinimumClusterSize = function setMinimumClusterSize(minimumClusterSize) {\n    this.minClusterSize = minimumClusterSize;\n  };\n  _proto.getMaxZoom = function getMaxZoom() {\n    return this.maxZoom;\n  };\n  _proto.setMaxZoom = function setMaxZoom(maxZoom) {\n    this.maxZoom = maxZoom;\n  };\n  _proto.getStyles = function getStyles() {\n    return this.styles;\n  };\n  _proto.setStyles = function setStyles(styles) {\n    this.styles = styles;\n  };\n  _proto.getTitle = function getTitle() {\n    return this.title;\n  };\n  _proto.setTitle = function setTitle(title) {\n    this.title = title;\n  };\n  _proto.getZoomOnClick = function getZoomOnClick() {\n    return this.zoomOnClick;\n  };\n  _proto.setZoomOnClick = function setZoomOnClick(zoomOnClick) {\n    this.zoomOnClick = zoomOnClick;\n  };\n  _proto.getAverageCenter = function getAverageCenter() {\n    return this.averageCenter;\n  };\n  _proto.setAverageCenter = function setAverageCenter(averageCenter) {\n    this.averageCenter = averageCenter;\n  };\n  _proto.getIgnoreHidden = function getIgnoreHidden() {\n    return this.ignoreHidden;\n  };\n  _proto.setIgnoreHidden = function setIgnoreHidden(ignoreHidden) {\n    this.ignoreHidden = ignoreHidden;\n  };\n  _proto.getEnableRetinaIcons = function getEnableRetinaIcons() {\n    return this.enableRetinaIcons;\n  };\n  _proto.setEnableRetinaIcons = function setEnableRetinaIcons(enableRetinaIcons) {\n    this.enableRetinaIcons = enableRetinaIcons;\n  };\n  _proto.getImageExtension = function getImageExtension() {\n    return this.imageExtension;\n  };\n  _proto.setImageExtension = function setImageExtension(imageExtension) {\n    this.imageExtension = imageExtension;\n  };\n  _proto.getImagePath = function getImagePath() {\n    return this.imagePath;\n  };\n  _proto.setImagePath = function setImagePath(imagePath) {\n    this.imagePath = imagePath;\n  };\n  _proto.getImageSizes = function getImageSizes() {\n    return this.imageSizes;\n  };\n  _proto.setImageSizes = function setImageSizes(imageSizes) {\n    this.imageSizes = imageSizes;\n  };\n  _proto.getCalculator = function getCalculator() {\n    return this.calculator;\n  };\n  _proto.setCalculator = function setCalculator(calculator) {\n    this.calculator = calculator;\n  };\n  _proto.getBatchSizeIE = function getBatchSizeIE() {\n    return this.batchSizeIE;\n  };\n  _proto.setBatchSizeIE = function setBatchSizeIE(batchSizeIE) {\n    this.batchSizeIE = batchSizeIE;\n  };\n  _proto.getClusterClass = function getClusterClass() {\n    return this.clusterClass;\n  };\n  _proto.setClusterClass = function setClusterClass(clusterClass) {\n    this.clusterClass = clusterClass;\n  };\n  _proto.getMarkers = function getMarkers() {\n    return this.markers;\n  };\n  _proto.getTotalMarkers = function getTotalMarkers() {\n    return this.markers.length;\n  };\n  _proto.getClusters = function getClusters() {\n    return this.clusters;\n  };\n  _proto.getTotalClusters = function getTotalClusters() {\n    return this.clusters.length;\n  };\n  _proto.addMarker = function addMarker(marker, optNoDraw) {\n    this.pushMarkerTo(marker);\n    if (!optNoDraw) {\n      this.redraw();\n    }\n  };\n  _proto.addMarkers = function addMarkers(markers, optNoDraw) {\n    for (var key in markers) {\n      if (markers.hasOwnProperty(key)) {\n        this.pushMarkerTo(markers[key]);\n      }\n    }\n    if (!optNoDraw) {\n      this.redraw();\n    }\n  };\n  _proto.pushMarkerTo = function pushMarkerTo(marker) {\n    var _this2 = this;\n\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      // eslint-disable-next-line @getify/proper-arrows/name, @getify/proper-arrows/this\n      google.maps.event.addListener(marker, 'dragend', function () {\n        if (_this2.ready) {\n          marker.isAdded = false;\n          _this2.repaint();\n        }\n      });\n    }\n    marker.isAdded = false;\n    this.markers.push(marker);\n  };\n  _proto.removeMarker_ = function removeMarker_(marker) {\n    var index = -1;\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker);\n    } else {\n      for (var i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i;\n          break;\n        }\n      }\n    }\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false;\n    }\n    marker.setMap(null);\n    this.markers.splice(index, 1); // Remove the marker from the list of managed markers\n\n    return true;\n  };\n  _proto.removeMarker = function removeMarker(marker, optNoDraw) {\n    var removed = this.removeMarker_(marker);\n    if (!optNoDraw && removed) {\n      this.repaint();\n    }\n    return removed;\n  };\n  _proto.removeMarkers = function removeMarkers(markers, optNoDraw) {\n    var removed = false;\n    for (var i = 0; i < markers.length; i++) {\n      removed = removed || this.removeMarker_(markers[i]);\n    }\n    if (!optNoDraw && removed) {\n      this.repaint();\n    }\n    return removed;\n  };\n  _proto.clearMarkers = function clearMarkers() {\n    this.resetViewport(true);\n    this.markers = [];\n  };\n  _proto.repaint = function repaint() {\n    var oldClusters = this.clusters.slice();\n    this.clusters = [];\n    this.resetViewport(false);\n    this.redraw(); // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n\n    setTimeout(function timeout() {\n      for (var i = 0; i < oldClusters.length; i++) {\n        oldClusters[i].remove();\n      }\n    }, 0);\n  };\n  _proto.getExtendedBounds = function getExtendedBounds(bounds) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    var projection = this.getProjection(); // Convert the points to pixels and the extend out by the grid size.\n\n    var trPix = projection.fromLatLngToDivPixel(\n    // Turn the bounds into latlng.\n    new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng()));\n    trPix.x += this.gridSize;\n    trPix.y -= this.gridSize;\n    var blPix = projection.fromLatLngToDivPixel(\n    // Turn the bounds into latlng.\n    new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng()));\n    blPix.x -= this.gridSize;\n    blPix.y += this.gridSize; // Extend the bounds to contain the new bounds.\n\n    bounds.extend(\n    // Convert the pixel points back to LatLng nw\n    projection.fromDivPixelToLatLng(trPix));\n    bounds.extend(\n    // Convert the pixel points back to LatLng sw\n    projection.fromDivPixelToLatLng(blPix));\n    return bounds;\n  };\n  _proto.redraw = function redraw() {\n    // Redraws all the clusters.\n    this.createClusters(0);\n  };\n  _proto.resetViewport = function resetViewport(optHide) {\n    // Remove all the clusters\n    for (var i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove();\n    }\n    this.clusters = []; // Reset the markers to not be added and to be removed from the map.\n\n    for (var _i3 = 0; _i3 < this.markers.length; _i3++) {\n      var marker = this.markers[_i3];\n      marker.isAdded = false;\n      if (optHide) {\n        marker.setMap(null);\n      }\n    }\n  };\n  _proto.distanceBetweenPoints = function distanceBetweenPoints(p1, p2) {\n    var R = 6371; // Radius of the Earth in km\n\n    var dLat = (p2.lat() - p1.lat()) * Math.PI / 180;\n    var dLon = (p2.lng() - p1.lng()) * Math.PI / 180;\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(p1.lat() * Math.PI / 180) * Math.cos(p2.lat() * Math.PI / 180) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)));\n  };\n  _proto.isMarkerInBounds = function isMarkerInBounds(marker, bounds) {\n    var position = marker.getPosition();\n    if (position) {\n      return bounds.contains(position);\n    }\n    return false;\n  };\n  _proto.addToClosestCluster = function addToClosestCluster(marker) {\n    var cluster;\n    var distance = 40000; // Some large number\n\n    var clusterToAddTo = null;\n    for (var i = 0; i < this.clusters.length; i++) {\n      cluster = this.clusters[i];\n      var center = cluster.getCenter();\n      var position = marker.getPosition();\n      if (center && position) {\n        var d = this.distanceBetweenPoints(center, position);\n        if (d < distance) {\n          distance = d;\n          clusterToAddTo = cluster;\n        }\n      }\n    }\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker);\n    } else {\n      cluster = new Cluster(this);\n      cluster.addMarker(marker);\n      this.clusters.push(cluster);\n    }\n  };\n  _proto.createClusters = function createClusters(iFirst) {\n    var _this3 = this;\n    if (!this.ready) {\n      return;\n    } // Cancel previous batch processing if we're working on the first batch:\n\n    if (iFirst === 0) {\n      /**\r\n       * This event is fired when the <code>Clusterer</code> begins\r\n       *  clustering markers.\r\n       * @name Clusterer#clusteringbegin\r\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\r\n       * @event\r\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this);\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic);\n        delete this.timerRefStatic;\n      }\n    } // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n\n    var mapBounds =\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getZoom() > 3 ? new google.maps.LatLngBounds(\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getBounds().getSouthWest(),\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().getBounds().getNorthEast()) : new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472, -178.48388434375), new google.maps.LatLng(-85.08136444384544, 178.00048865625));\n    var bounds = this.getExtendedBounds(mapBounds);\n    var iLast = Math.min(iFirst + this.batchSize, this.markers.length);\n    for (var i = iFirst; i < iLast; i++) {\n      var marker = this.markers[i];\n      if (!marker.isAdded && this.isMarkerInBounds(marker, bounds)) {\n        if (!this.ignoreHidden || this.ignoreHidden && marker.getVisible()) {\n          this.addToClosestCluster(marker);\n        }\n      }\n    }\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout(\n      // eslint-disable-next-line @getify/proper-arrows/this, @getify/proper-arrows/name\n      function () {\n        _this3.createClusters(iLast);\n      }, 0);\n    } else {\n      this.timerRefStatic = null;\n      /**\r\n       * This event is fired when the <code>Clusterer</code> stops\r\n       *  clustering markers.\r\n       * @name Clusterer#clusteringend\r\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\r\n       * @event\r\n       */\n\n      google.maps.event.trigger(this, 'clusteringend', this);\n      for (var _i4 = 0; _i4 < this.clusters.length; _i4++) {\n        this.clusters[_i4].updateIcon();\n      }\n    }\n  };\n  _proto.extend = function extend(obj1, obj2) {\n    return function applyExtend(object) {\n      // eslint-disable-next-line guard-for-in\n      for (var property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.prototype[property] = object.prototype[property];\n      } // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n\n      return this;\n    }.apply(obj1, [obj2]);\n  };\n  return Clusterer;\n}();\nexport { Cluster, ClusterIcon, Clusterer };","map":{"version":3,"sources":["../src/ClusterIcon.tsx","../src/Cluster.tsx","../src/Clusterer.tsx"],"names":["ClusterIcon","cluster","styles","getClusterer","extend","google","maps","OverlayView","className","getClusterClass","center","undefined","div","sums","visible","boundsChangedListener","url","height","width","anchorText","anchorIcon","textColor","textSize","textDecoration","fontWeight","fontStyle","fontFamily","backgroundPosition","setMap","getMap","onAdd","cMouseDownInCluster","cDraggingMapByCluster","document","createElement","show","getPanes","overlayMouseTarget","appendChild","event","addListener","boundsChanged","addDomListener","onMouseDown","markerClusterer","trigger","getZoomOnClick","maxZoom","getMaxZoom","bounds","getBounds","fitBounds","setTimeout","timeout","getZoom","setZoom","cancelBubble","stopPropagation","onRemove","parentNode","hide","removeListener","clearInstanceListeners","removeChild","draw","x","y","getPosFromLatLng","style","top","left","display","img","divTitle","bp","split","spriteH","parseInt","replace","spriteV","pos","title","getTitle","cssText","createCss","enableRetinaIcons","innerHTML","text","useStyle","Math","min","length","max","index","setCenter","push","join","latlng","getProjection","fromLatLngToDivPixel","Cluster","map","gridSize","getGridSize","minClusterSize","getMinimumClusterSize","averageCenter","getAverageCenter","markers","clusterIcon","getStyles","getSize","getMarkers","getCenter","LatLngBounds","i","position","getPosition","remove","addMarker","marker","isMarkerAlreadyAdded","calculateBounds","LatLng","lat","lng","isAdded","mCount","isMarkerInClusterBounds","contains","getExtendedBounds","updateIcon","getCalculator","includes","CALCULATOR","numStyles","count","toString","dv","BATCH_SIZE","BATCH_SIZE_IE","IMAGE_PATH","IMAGE_EXTENSION","IMAGE_SIZES","CLUSTERER_CLASS","Clusterer","optMarkers","optOptions","clusters","listeners","activeMap","ready","minimumClusterSize","zoomOnClick","ignoreHidden","imagePath","imageExtension","imageSizes","calculator","batchSize","batchSizeIE","clusterClass","navigator","userAgent","toLowerCase","indexOf","timerRefStatic","setupStyles","addMarkers","repaint","resetViewport","get","redraw","fitMapToMarkers","setGridSize","setMinimumClusterSize","setMaxZoom","setStyles","setTitle","setZoomOnClick","setAverageCenter","getIgnoreHidden","setIgnoreHidden","getEnableRetinaIcons","setEnableRetinaIcons","getImageExtension","setImageExtension","getImagePath","setImagePath","getImageSizes","setImageSizes","setCalculator","getBatchSizeIE","setBatchSizeIE","setClusterClass","getTotalMarkers","getClusters","getTotalClusters","optNoDraw","pushMarkerTo","key","hasOwnProperty","getDraggable","removeMarker_","splice","removeMarker","removed","removeMarkers","clearMarkers","oldClusters","slice","projection","trPix","getNorthEast","blPix","getSouthWest","fromDivPixelToLatLng","createClusters","optHide","distanceBetweenPoints","p1","p2","R","dLat","PI","dLon","a","sin","cos","atan2","sqrt","isMarkerInBounds","addToClosestCluster","distance","clusterToAddTo","d","iFirst","window","clearTimeout","mapBounds","iLast","getVisible","obj1","obj2","applyExtend","object","property","prototype","apply"],"mappings":"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","sourcesContent":["/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\n\nimport { ClusterIconStyle, ClusterIconInfo } from './types'\n\nexport class ClusterIcon {\n  cluster: Cluster\n  className: string\n  styles: ClusterIconStyle[]\n  center: google.maps.LatLng | undefined\n  div: HTMLDivElement | null\n  sums: ClusterIconInfo | null\n  visible: boolean\n  url: string\n  height: number\n  width: number\n  anchorText: number[]\n  anchorIcon: number[]\n  textColor: string\n  textSize: number\n  textDecoration: string\n  fontWeight: string\n  fontStyle: string\n  fontFamily: string\n  backgroundPosition: string\n\n  boundsChangedListener: google.maps.MapsEventListener | null\n\n  constructor(cluster: Cluster, styles: ClusterIconStyle[]) {\n    cluster.getClusterer().extend(ClusterIcon, google.maps.OverlayView)\n    this.cluster = cluster\n    this.className = this.cluster.getClusterer().getClusterClass()\n    this.styles = styles\n    this.center = undefined\n    this.div = null\n    this.sums = null\n    this.visible = false\n    this.boundsChangedListener = null\n    this.url = ''\n    this.height = 0\n    this.width = 0\n    this.anchorText = [0, 0]\n    this.anchorIcon = [0, 0]\n    this.textColor = 'black'\n    this.textSize = 11\n    this.textDecoration = 'none'\n    this.fontWeight = 'bold'\n    this.fontStyle = 'normal'\n    this.fontFamily = 'Arial,sans-serif'\n    this.backgroundPosition = '0 0'\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(cluster.getMap()) // Note: this causes onAdd to be called\n  }\n\n  onAdd() {\n    let cMouseDownInCluster: boolean\n    let cDraggingMapByCluster: boolean\n\n    this.div = document.createElement('div')\n    this.div.className = this.className\n    if (this.visible) {\n      this.show()\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getPanes().overlayMouseTarget.appendChild(this.div)\n\n    // Fix for Issue 157\n    this.boundsChangedListener = google.maps.event.addListener(\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.getMap(),\n      'boundschanged',\n      function boundsChanged() {\n        cDraggingMapByCluster = cMouseDownInCluster\n      }\n    )\n\n    google.maps.event.addDomListener(this.div, 'mousedown', function onMouseDown() {\n      cMouseDownInCluster = true\n      cDraggingMapByCluster = false\n    })\n\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    google.maps.event.addDomListener(\n      this.div,\n      'click',\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      (event: Event) => {\n        cMouseDownInCluster = false\n\n        if (!cDraggingMapByCluster) {\n          const markerClusterer = this.cluster.getClusterer()\n\n          /**\n           * This event is fired when a cluster marker is clicked.\n           * @name MarkerClusterer#click\n           * @param {Cluster} c The cluster that was clicked.\n           * @event\n           */\n          google.maps.event.trigger(markerClusterer, 'click', this.cluster)\n          google.maps.event.trigger(markerClusterer, 'clusterclick', this.cluster) // deprecated name\n\n          // The default click handler follows. Disable it by setting\n          // the zoomOnClick property to false.\n          if (markerClusterer.getZoomOnClick()) {\n            // Zoom into the cluster.\n            const maxZoom = markerClusterer.getMaxZoom()\n\n            const bounds = this.cluster.getBounds()\n\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            markerClusterer.getMap().fitBounds(bounds)\n\n            // There is a fix for Issue 170 here:\n            setTimeout(function timeout() {\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              markerClusterer.getMap().fitBounds(bounds)\n\n              // Don't zoom beyond the max zoom level\n              // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n              // @ts-ignore\n              if (maxZoom !== null && markerClusterer.getMap().getZoom() > maxZoom) {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n                // @ts-ignore\n                markerClusterer.getMap().setZoom(maxZoom + 1)\n              }\n            }, 100)\n          }\n\n          // Prevent event propagation to the map:\n          event.cancelBubble = true\n\n          if (event.stopPropagation) {\n            event.stopPropagation()\n          }\n        }\n      }\n    )\n\n    google.maps.event.addDomListener(\n      this.div,\n      'mouseover',\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      () => {\n        /**\n         * This event is fired when the mouse moves over a cluster marker.\n         * @name MarkerClusterer#mouseover\n         * @param {Cluster} c The cluster that the mouse moved over.\n         * @event\n         */\n        google.maps.event.trigger(this.cluster.getClusterer(), 'mouseover', this.cluster)\n      }\n    )\n\n    // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n    google.maps.event.addDomListener(\n      this.div,\n      'mouseout',\n      // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n      () => {\n        /**\n         * This event is fired when the mouse moves out of a cluster marker.\n         * @name MarkerClusterer#mouseout\n         * @param {Cluster} c The cluster that the mouse moved out of.\n         * @event\n         */\n        google.maps.event.trigger(this.cluster.getClusterer(), 'mouseout', this.cluster)\n      }\n    )\n  }\n\n  onRemove() {\n    if (this.div && this.div.parentNode) {\n      this.hide()\n\n      if (this.boundsChangedListener !== null) {\n        google.maps.event.removeListener(this.boundsChangedListener)\n      }\n\n      google.maps.event.clearInstanceListeners(this.div)\n\n      this.div.parentNode.removeChild(this.div)\n\n      this.div = null\n    }\n  }\n\n  draw() {\n    if (this.visible && this.div !== null && this.center) {\n      const { x, y } = this.getPosFromLatLng(this.center)\n\n      this.div.style.top = y + 'px'\n      this.div.style.left = x + 'px'\n    }\n  }\n\n  hide() {\n    if (this.div) {\n      this.div.style.display = 'none'\n    }\n\n    this.visible = false\n  }\n\n  show() {\n    if (this.div && this.center) {\n      let img = '',\n        divTitle = ''\n\n      // NOTE: values must be specified in px units\n      const bp = this.backgroundPosition.split(' ')\n\n      const spriteH = parseInt(bp[0].replace(/^\\s+|\\s+$/g, ''), 10)\n\n      const spriteV = parseInt(bp[1].replace(/^\\s+|\\s+$/g, ''), 10)\n\n      const pos = this.getPosFromLatLng(this.center)\n\n      if (this.sums === null || typeof this.sums.title === 'undefined' || this.sums.title === '') {\n        divTitle = this.cluster.getClusterer().getTitle()\n      } else {\n        divTitle = this.sums.title\n      }\n\n      this.div.style.cssText = this.createCss(pos)\n\n      img =\n        \"<img alt='\" +\n        divTitle +\n        \"' src='\" +\n        this.url +\n        \"' style='position: absolute; top: \" +\n        spriteV +\n        'px; left: ' +\n        spriteH +\n        'px; '\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      //@ts-ignore\n      if (!this.cluster.getClusterer().enableRetinaIcons) {\n        img +=\n          'clip: rect(' +\n          -1 * spriteV +\n          'px, ' +\n          (-1 * spriteH + this.width) +\n          'px, ' +\n          (-1 * spriteV + this.height) +\n          'px, ' +\n          -1 * spriteH +\n          'px);'\n      }\n\n      img += \"'>\"\n\n      this.div.innerHTML =\n        img +\n        \"<div style='\" +\n        'position: absolute;' +\n        'top: ' +\n        this.anchorText[0] +\n        'px;' +\n        'left: ' +\n        this.anchorText[1] +\n        'px;' +\n        'color: ' +\n        this.textColor +\n        ';' +\n        'font-size: ' +\n        this.textSize +\n        'px;' +\n        'font-family: ' +\n        this.fontFamily +\n        ';' +\n        'font-weight: ' +\n        this.fontWeight +\n        ';' +\n        'font-style: ' +\n        this.fontStyle +\n        ';' +\n        'text-decoration: ' +\n        this.textDecoration +\n        ';' +\n        'text-align: center;' +\n        'width: ' +\n        this.width +\n        'px;' +\n        'line-height:' +\n        this.height +\n        'px;' +\n        \"'>\" +\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.sums.text +\n        '</div>'\n\n      this.div.title = divTitle\n\n      this.div.style.display = ''\n    }\n\n    this.visible = true\n  }\n\n  useStyle(sums: ClusterIconInfo) {\n    this.sums = sums\n\n    const style = this.styles[Math.min(this.styles.length - 1, Math.max(0, sums.index - 1))]\n\n    this.url = style.url\n    this.height = style.height\n    this.width = style.width\n    this.anchorText = style.anchorText || [0, 0]\n    this.anchorIcon = style.anchorIcon || [this.height / 2, this.width / 2]\n\n    this.textColor = style.textColor || 'black'\n\n    this.textSize = style.textSize || 11\n\n    this.textDecoration = style.textDecoration || 'none'\n\n    this.fontWeight = style.fontWeight || 'bold'\n\n    this.fontStyle = style.fontStyle || 'normal'\n\n    this.fontFamily = style.fontFamily || 'Arial,sans-serif'\n\n    this.backgroundPosition = style.backgroundPosition || '0 0'\n  }\n\n  setCenter(center: google.maps.LatLng) {\n    this.center = center\n  }\n\n  createCss(pos: google.maps.Point): string {\n    const style = []\n\n    style.push('cursor: pointer;')\n\n    style.push('position: absolute; top: ' + pos.y + 'px; left: ' + pos.x + 'px;')\n\n    style.push('width: ' + this.width + 'px; height: ' + this.height + 'px;')\n\n    return style.join('')\n  }\n\n  getPosFromLatLng(latlng: google.maps.LatLng): google.maps.Point {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const pos = this.getProjection().fromLatLngToDivPixel(latlng)\n\n    pos.x -= this.anchorIcon[1]\n\n    pos.y -= this.anchorIcon[0]\n\n    // pos.x = pos.x\n\n    // pos.y = pos.y\n\n    return pos\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Clusterer } from './Clusterer'\n\nimport { ClusterIcon } from './ClusterIcon'\n\nimport { MarkerExtended } from './types'\n\nexport class Cluster {\n  markerClusterer: Clusterer\n  map: google.maps.Map | google.maps.StreetViewPanorama\n  gridSize: number\n  minClusterSize: number\n  averageCenter: boolean\n  markers: MarkerExtended[]\n  center: google.maps.LatLng | undefined\n  bounds: google.maps.LatLngBounds | null\n  clusterIcon: ClusterIcon\n\n  constructor(markerClusterer: Clusterer) {\n    this.markerClusterer = markerClusterer\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.map = this.markerClusterer.getMap()\n\n    this.gridSize = this.markerClusterer.getGridSize()\n\n    this.minClusterSize = this.markerClusterer.getMinimumClusterSize()\n\n    this.averageCenter = this.markerClusterer.getAverageCenter()\n\n    this.markers = []\n\n    this.center = undefined\n\n    this.bounds = null\n\n    this.clusterIcon = new ClusterIcon(this, this.markerClusterer.getStyles())\n  }\n\n  getSize(): number {\n    return this.markers.length\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getCenter(): google.maps.LatLng | undefined {\n    return this.center\n  }\n\n  getMap(): google.maps.Map | google.maps.StreetViewPanorama {\n    return this.map\n  }\n\n  getClusterer(): Clusterer {\n    return this.markerClusterer\n  }\n\n  getBounds(): google.maps.LatLngBounds {\n    const bounds = new google.maps.LatLngBounds(this.center, this.center)\n\n    const markers = this.getMarkers()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    return bounds\n  }\n\n  remove() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.clusterIcon.setMap(null)\n\n    this.markers = []\n\n    delete this.markers\n  }\n\n  addMarker(marker: MarkerExtended): boolean {\n    if (this.isMarkerAlreadyAdded(marker)) {\n      return false\n    }\n\n    if (!this.center) {\n      const position = marker.getPosition()\n\n      if (position) {\n        this.center = position\n\n        this.calculateBounds()\n      }\n    } else {\n      if (this.averageCenter) {\n        const position = marker.getPosition()\n\n        if (position) {\n          const length = this.markers.length + 1\n\n          this.center = new google.maps.LatLng(\n            (this.center.lat() * (length - 1) + position.lat()) / length,\n            (this.center.lng() * (length - 1) + position.lng()) / length\n          )\n\n          this.calculateBounds()\n        }\n      }\n    }\n\n    marker.isAdded = true\n\n    this.markers.push(marker)\n\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      // Zoomed in past max zoom, so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount < this.minClusterSize) {\n      // Min cluster size not reached so show the marker.\n      if (marker.getMap() !== this.map) {\n        marker.setMap(this.map)\n      }\n    } else if (mCount === this.minClusterSize) {\n      // Hide the markers that were showing.\n      for (let i = 0; i < mCount; i++) {\n        this.markers[i].setMap(null)\n      }\n    } else {\n      marker.setMap(null)\n    }\n\n    return true\n  }\n\n  isMarkerInClusterBounds(marker: MarkerExtended): boolean {\n    if (this.bounds !== null) {\n      const position = marker.getPosition()\n\n      if (position) {\n        return this.bounds.contains(position)\n      }\n    }\n\n    return false\n  }\n\n  calculateBounds() {\n    this.bounds = this.markerClusterer.getExtendedBounds(\n      new google.maps.LatLngBounds(this.center, this.center)\n    )\n  }\n\n  updateIcon() {\n    const mCount = this.markers.length\n\n    const maxZoom = this.markerClusterer.getMaxZoom()\n\n    if (maxZoom !== null && this.map.getZoom() > maxZoom) {\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (mCount < this.minClusterSize) {\n      // Min cluster size not yet reached.\n      this.clusterIcon.hide()\n\n      return\n    }\n\n    if (this.center) {\n      this.clusterIcon.setCenter(this.center)\n    }\n\n    this.clusterIcon.useStyle(\n      this.markerClusterer.getCalculator()(this.markers, this.markerClusterer.getStyles().length)\n    )\n\n    this.clusterIcon.show()\n  }\n\n  isMarkerAlreadyAdded(marker: MarkerExtended): boolean {\n    if (this.markers.includes) {\n      return this.markers.includes(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          return true\n        }\n      }\n    }\n\n    return false\n  }\n}\n","/* global google */\n/* eslint-disable filenames/match-regex */\nimport { Cluster } from './Cluster'\n\nimport {\n  MarkerExtended,\n  ClustererOptions,\n  ClusterIconStyle,\n  TCalculator,\n  ClusterIconInfo,\n} from './types'\n\nconst CALCULATOR = function CALCULATOR(\n  markers: MarkerExtended[],\n  numStyles: number\n): ClusterIconInfo {\n  let index = 0\n\n  const title = ''\n\n  const count = markers.length.toString()\n\n  let dv: string | number = count\n\n  while (dv !== 0) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    dv = parseInt(dv, 10) / 10\n\n    index++\n  }\n\n  index = Math.min(index, numStyles)\n\n  return {\n    text: count,\n    index: index,\n    title: title,\n  }\n}\n\nconst BATCH_SIZE = 2000\n\nconst BATCH_SIZE_IE = 500\n\nconst IMAGE_PATH =\n  'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'\n\nconst IMAGE_EXTENSION = 'png'\n\nconst IMAGE_SIZES = [53, 56, 66, 78, 90]\n\nconst CLUSTERER_CLASS = 'cluster'\n\nexport class Clusterer {\n  markers: MarkerExtended[]\n  clusters: Cluster[]\n  listeners: google.maps.MapsEventListener[]\n  activeMap: google.maps.Map | google.maps.StreetViewPanorama | null\n  ready: boolean\n  gridSize: number\n  minClusterSize: number\n  maxZoom: number | null\n  styles: ClusterIconStyle[]\n  title: string\n  zoomOnClick: boolean\n  averageCenter: boolean\n  ignoreHidden: boolean\n  enableRetinaIcons: boolean\n  imagePath: string\n  imageExtension: string\n  imageSizes: number[]\n  calculator: TCalculator\n  batchSize: number\n  batchSizeIE: number\n  clusterClass: string\n  timerRefStatic: number | null\n\n  constructor(\n    map: google.maps.Map,\n    optMarkers: MarkerExtended[] = [],\n    optOptions: ClustererOptions = {}\n  ) {\n    this.extend(Clusterer, google.maps.OverlayView)\n\n    this.markers = []\n    this.clusters = []\n    this.listeners = []\n    this.activeMap = null\n    this.ready = false\n    this.gridSize = optOptions.gridSize || 60\n    this.minClusterSize = optOptions.minimumClusterSize || 2\n    this.maxZoom = optOptions.maxZoom || null\n    this.styles = optOptions.styles || []\n\n    this.title = optOptions.title || ''\n\n    this.zoomOnClick = true\n\n    if (optOptions.zoomOnClick !== undefined) {\n      this.zoomOnClick = optOptions.zoomOnClick\n    }\n\n    this.averageCenter = false\n\n    if (optOptions.averageCenter !== undefined) {\n      this.averageCenter = optOptions.averageCenter\n    }\n\n    this.ignoreHidden = false\n\n    if (optOptions.ignoreHidden !== undefined) {\n      this.ignoreHidden = optOptions.ignoreHidden\n    }\n\n    this.enableRetinaIcons = false\n\n    if (optOptions.enableRetinaIcons !== undefined) {\n      this.enableRetinaIcons = optOptions.enableRetinaIcons\n    }\n    this.imagePath = optOptions.imagePath || IMAGE_PATH\n\n    this.imageExtension = optOptions.imageExtension || IMAGE_EXTENSION\n\n    this.imageSizes = optOptions.imageSizes || IMAGE_SIZES\n\n    this.calculator = optOptions.calculator || CALCULATOR\n\n    this.batchSize = optOptions.batchSize || BATCH_SIZE\n\n    this.batchSizeIE = optOptions.batchSizeIE || BATCH_SIZE_IE\n\n    this.clusterClass = optOptions.clusterClass || CLUSTERER_CLASS\n\n    if (navigator.userAgent.toLowerCase().indexOf('msie') !== -1) {\n      // Try to avoid IE timeout when processing a huge number of markers:\n      this.batchSize = this.batchSizeIE\n    }\n\n    this.timerRefStatic = null\n\n    this.setupStyles()\n\n    this.addMarkers(optMarkers, true)\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.setMap(map) // Note: this causes onAdd to be called\n  }\n\n  onAdd() {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.activeMap = this.getMap()\n\n    this.ready = true\n\n    this.repaint()\n\n    // Add the map event listeners\n    this.listeners = [\n      google.maps.event.addListener(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.getMap(),\n        'zoom_changed',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.resetViewport(false)\n          // Workaround for this Google bug: when map is at level 0 and \"-\" of\n          // zoom slider is clicked, a \"zoom_changed\" event is fired even though\n          // the map doesn't zoom out any further. In this situation, no \"idle\"\n          // event is triggered so the cluster markers that have been removed\n          // do not get redrawn. Same goes for a zoom in at maxZoom.\n          if (\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap().getZoom() === (this.get('minZoom') || 0) ||\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap().getZoom() === this.get('maxZoom')\n          ) {\n            google.maps.event.trigger(this, 'idle')\n          }\n        }\n      ),\n      google.maps.event.addListener(\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.getMap(),\n        'idle',\n        // eslint-disable-next-line  @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.redraw()\n        }\n      ),\n    ]\n  }\n\n  // eslint-disable-next-line @getify/proper-arrows/this\n  onRemove() {\n    // Put all the managed markers back on the map:\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].getMap() !== this.activeMap) {\n        this.markers[i].setMap(this.activeMap)\n      }\n    }\n\n    // Remove all clusters:\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Remove map event listeners:\n    for (let i = 0; i < this.listeners.length; i++) {\n      google.maps.event.removeListener(this.listeners[i])\n    }\n\n    this.listeners = []\n\n    this.activeMap = null\n\n    this.ready = false\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  draw() {}\n\n  setupStyles() {\n    if (this.styles.length > 0) {\n      return\n    }\n\n    for (let i = 0; i < this.imageSizes.length; i++) {\n      this.styles.push({\n        url: this.imagePath + (i + 1) + '.' + this.imageExtension,\n        height: this.imageSizes[i],\n        width: this.imageSizes[i],\n      })\n    }\n  }\n\n  fitMapToMarkers() {\n    const markers = this.getMarkers()\n\n    const bounds = new google.maps.LatLngBounds()\n\n    for (let i = 0; i < markers.length; i++) {\n      const position = markers[i].getPosition()\n      if (position) {\n        bounds.extend(position)\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    this.getMap().fitBounds(bounds)\n  }\n\n  getGridSize(): number {\n    return this.gridSize\n  }\n\n  setGridSize(gridSize: number) {\n    this.gridSize = gridSize\n  }\n\n  getMinimumClusterSize(): number {\n    return this.minClusterSize\n  }\n\n  setMinimumClusterSize(minimumClusterSize: number) {\n    this.minClusterSize = minimumClusterSize\n  }\n\n  getMaxZoom(): number | null {\n    return this.maxZoom\n  }\n\n  setMaxZoom(maxZoom: number) {\n    this.maxZoom = maxZoom\n  }\n\n  getStyles(): ClusterIconStyle[] {\n    return this.styles\n  }\n\n  setStyles(styles: ClusterIconStyle[]) {\n    this.styles = styles\n  }\n\n  getTitle(): string {\n    return this.title\n  }\n\n  setTitle(title: string) {\n    this.title = title\n  }\n\n  getZoomOnClick(): boolean {\n    return this.zoomOnClick\n  }\n\n  setZoomOnClick(zoomOnClick: boolean) {\n    this.zoomOnClick = zoomOnClick\n  }\n\n  getAverageCenter(): boolean {\n    return this.averageCenter\n  }\n\n  setAverageCenter(averageCenter: boolean) {\n    this.averageCenter = averageCenter\n  }\n\n  getIgnoreHidden(): boolean {\n    return this.ignoreHidden\n  }\n\n  setIgnoreHidden(ignoreHidden: boolean) {\n    this.ignoreHidden = ignoreHidden\n  }\n\n  getEnableRetinaIcons(): boolean {\n    return this.enableRetinaIcons\n  }\n\n  setEnableRetinaIcons(enableRetinaIcons: boolean) {\n    this.enableRetinaIcons = enableRetinaIcons\n  }\n\n  getImageExtension(): string {\n    return this.imageExtension\n  }\n\n  setImageExtension(imageExtension: string) {\n    this.imageExtension = imageExtension\n  }\n\n  getImagePath(): string {\n    return this.imagePath\n  }\n\n  setImagePath(imagePath: string) {\n    this.imagePath = imagePath\n  }\n\n  getImageSizes(): number[] {\n    return this.imageSizes\n  }\n\n  setImageSizes(imageSizes: number[]) {\n    this.imageSizes = imageSizes\n  }\n\n  getCalculator(): TCalculator {\n    return this.calculator\n  }\n\n  setCalculator(calculator: TCalculator) {\n    this.calculator = calculator\n  }\n\n  getBatchSizeIE(): number {\n    return this.batchSizeIE\n  }\n\n  setBatchSizeIE(batchSizeIE: number) {\n    this.batchSizeIE = batchSizeIE\n  }\n\n  getClusterClass(): string {\n    return this.clusterClass\n  }\n\n  setClusterClass(clusterClass: string) {\n    this.clusterClass = clusterClass\n  }\n\n  getMarkers(): MarkerExtended[] {\n    return this.markers\n  }\n\n  getTotalMarkers(): number {\n    return this.markers.length\n  }\n\n  getClusters(): Cluster[] {\n    return this.clusters\n  }\n\n  getTotalClusters(): number {\n    return this.clusters.length\n  }\n\n  addMarker(marker: MarkerExtended, optNoDraw: boolean) {\n    this.pushMarkerTo(marker)\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  addMarkers(markers: MarkerExtended[], optNoDraw: boolean) {\n    for (const key in markers) {\n      if (markers.hasOwnProperty(key)) {\n        this.pushMarkerTo(markers[key])\n      }\n    }\n\n    if (!optNoDraw) {\n      this.redraw()\n    }\n  }\n\n  pushMarkerTo(marker: MarkerExtended) {\n    // If the marker is draggable add a listener so we can update the clusters on the dragend:\n    if (marker.getDraggable()) {\n      // eslint-disable-next-line @getify/proper-arrows/name, @getify/proper-arrows/this\n      google.maps.event.addListener(marker, 'dragend', () => {\n        if (this.ready) {\n          marker.isAdded = false\n\n          this.repaint()\n        }\n      })\n    }\n\n    marker.isAdded = false\n\n    this.markers.push(marker)\n  }\n\n  removeMarker_(marker: MarkerExtended): boolean {\n    let index = -1\n\n    if (this.markers.indexOf) {\n      index = this.markers.indexOf(marker)\n    } else {\n      for (let i = 0; i < this.markers.length; i++) {\n        if (marker === this.markers[i]) {\n          index = i\n\n          break\n        }\n      }\n    }\n\n    if (index === -1) {\n      // Marker is not in our list of markers, so do nothing:\n      return false\n    }\n\n    marker.setMap(null)\n\n    this.markers.splice(index, 1) // Remove the marker from the list of managed markers\n\n    return true\n  }\n\n  removeMarker(marker: MarkerExtended, optNoDraw: boolean): boolean {\n    const removed = this.removeMarker_(marker)\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  removeMarkers(markers: MarkerExtended[], optNoDraw: boolean): boolean {\n    let removed = false\n\n    for (let i = 0; i < markers.length; i++) {\n      removed = removed || this.removeMarker_(markers[i])\n    }\n\n    if (!optNoDraw && removed) {\n      this.repaint()\n    }\n\n    return removed\n  }\n\n  clearMarkers() {\n    this.resetViewport(true)\n\n    this.markers = []\n  }\n\n  repaint() {\n    const oldClusters = this.clusters.slice()\n\n    this.clusters = []\n\n    this.resetViewport(false)\n\n    this.redraw()\n\n    // Remove the old clusters.\n    // Do it in a timeout to prevent blinking effect.\n    setTimeout(function timeout() {\n      for (let i = 0; i < oldClusters.length; i++) {\n        oldClusters[i].remove()\n      }\n    }, 0)\n  }\n\n  getExtendedBounds(bounds: google.maps.LatLngBounds): google.maps.LatLngBounds {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n    // @ts-ignore\n    const projection = this.getProjection()\n    // Convert the points to pixels and the extend out by the grid size.\n    const trPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getNorthEast().lat(), bounds.getNorthEast().lng())\n    )\n\n    trPix.x += this.gridSize\n    trPix.y -= this.gridSize\n\n    const blPix = projection.fromLatLngToDivPixel(\n      // Turn the bounds into latlng.\n      new google.maps.LatLng(bounds.getSouthWest().lat(), bounds.getSouthWest().lng())\n    )\n\n    blPix.x -= this.gridSize\n    blPix.y += this.gridSize\n\n    // Extend the bounds to contain the new bounds.\n    bounds.extend(\n      // Convert the pixel points back to LatLng nw\n      projection.fromDivPixelToLatLng(trPix)\n    )\n\n    bounds.extend(\n      // Convert the pixel points back to LatLng sw\n      projection.fromDivPixelToLatLng(blPix)\n    )\n\n    return bounds\n  }\n\n  redraw() {\n    // Redraws all the clusters.\n    this.createClusters(0)\n  }\n\n  resetViewport(optHide: boolean) {\n    // Remove all the clusters\n    for (let i = 0; i < this.clusters.length; i++) {\n      this.clusters[i].remove()\n    }\n\n    this.clusters = []\n\n    // Reset the markers to not be added and to be removed from the map.\n    for (let i = 0; i < this.markers.length; i++) {\n      const marker = this.markers[i]\n\n      marker.isAdded = false\n\n      if (optHide) {\n        marker.setMap(null)\n      }\n    }\n  }\n\n  distanceBetweenPoints(p1: google.maps.LatLng, p2: google.maps.LatLng): number {\n    const R = 6371 // Radius of the Earth in km\n\n    const dLat = ((p2.lat() - p1.lat()) * Math.PI) / 180\n    const dLon = ((p2.lng() - p1.lng()) * Math.PI) / 180\n\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos((p1.lat() * Math.PI) / 180) *\n        Math.cos((p2.lat() * Math.PI) / 180) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2)\n\n    return R * (2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a)))\n  }\n\n  isMarkerInBounds(marker: MarkerExtended, bounds: google.maps.LatLngBounds): boolean {\n    const position = marker.getPosition()\n\n    if (position) {\n      return bounds.contains(position)\n    }\n\n    return false\n  }\n\n  addToClosestCluster(marker: MarkerExtended) {\n    let cluster\n\n    let distance = 40000 // Some large number\n\n    let clusterToAddTo = null\n\n    for (let i = 0; i < this.clusters.length; i++) {\n      cluster = this.clusters[i]\n\n      const center = cluster.getCenter()\n\n      const position = marker.getPosition()\n\n      if (center && position) {\n        const d = this.distanceBetweenPoints(center, position)\n\n        if (d < distance) {\n          distance = d\n\n          clusterToAddTo = cluster\n        }\n      }\n    }\n\n    if (clusterToAddTo && clusterToAddTo.isMarkerInClusterBounds(marker)) {\n      clusterToAddTo.addMarker(marker)\n    } else {\n      cluster = new Cluster(this)\n\n      cluster.addMarker(marker)\n\n      this.clusters.push(cluster)\n    }\n  }\n\n  createClusters(iFirst: number) {\n    if (!this.ready) {\n      return\n    }\n\n    // Cancel previous batch processing if we're working on the first batch:\n    if (iFirst === 0) {\n      /**\n       * This event is fired when the <code>Clusterer</code> begins\n       *  clustering markers.\n       * @name Clusterer#clusteringbegin\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringbegin', this)\n\n      if (this.timerRefStatic !== null) {\n        window.clearTimeout(this.timerRefStatic)\n\n        delete this.timerRefStatic\n      }\n    }\n\n    // Get our current map view bounds.\n    // Create a new bounds object so we don't affect the map.\n    //\n    // See Comments 9 & 11 on Issue 3651 relating to this workaround for a Google Maps bug:\n    const mapBounds =\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      this.getMap().getZoom() > 3\n        ? new google.maps.LatLngBounds(\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap()\n              .getBounds()\n              .getSouthWest(),\n            // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n            // @ts-ignore\n            this.getMap()\n              .getBounds()\n              .getNorthEast()\n          )\n        : new google.maps.LatLngBounds(\n            new google.maps.LatLng(85.02070771743472, -178.48388434375),\n            new google.maps.LatLng(-85.08136444384544, 178.00048865625)\n          )\n\n    const bounds = this.getExtendedBounds(mapBounds)\n\n    const iLast = Math.min(iFirst + this.batchSize, this.markers.length)\n\n    for (let i = iFirst; i < iLast; i++) {\n      const marker = this.markers[i]\n\n      if (!marker.isAdded && this.isMarkerInBounds(marker, bounds)) {\n        if (!this.ignoreHidden || (this.ignoreHidden && marker.getVisible())) {\n          this.addToClosestCluster(marker)\n        }\n      }\n    }\n\n    if (iLast < this.markers.length) {\n      this.timerRefStatic = window.setTimeout(\n        // eslint-disable-next-line @getify/proper-arrows/this, @getify/proper-arrows/name\n        () => {\n          this.createClusters(iLast)\n        },\n        0\n      )\n    } else {\n      this.timerRefStatic = null\n\n      /**\n       * This event is fired when the <code>Clusterer</code> stops\n       *  clustering markers.\n       * @name Clusterer#clusteringend\n       * @param {Clusterer} mc The Clusterer whose markers are being clustered.\n       * @event\n       */\n      google.maps.event.trigger(this, 'clusteringend', this)\n\n      for (let i = 0; i < this.clusters.length; i++) {\n        this.clusters[i].updateIcon()\n      }\n    }\n  }\n\n  extend(obj1: any, obj2: any): any {\n    return function applyExtend(object: any) {\n      // eslint-disable-next-line guard-for-in\n      for (const property in object.prototype) {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n        // @ts-ignore\n        this.prototype[property] = object.prototype[property]\n      }\n\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      // @ts-ignore\n      return this\n    }.apply(obj1, [obj2])\n  }\n}\n"]},"metadata":{},"sourceType":"module"}