{"ast":null,"code":"var _jsxFileName = \"H:\\\\BAKCO\\\\pj\\\\data reconciliation\\\\src\\\\quarantine\\\\components\\\\waiting\\\\ApproveSubjectModal.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Form, Button, Select, Checkbox } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAvailableRooms } from 'quarantine/actions/quarantine';\nimport { useForm } from 'react-hook-form';\nimport { KeyboardDatePicker } from 'app/components/shared';\nconst ApproveSubjectModal = props => {\n  const {\n    open,\n    zoneId,\n    loading,\n    onSubmit,\n    onClose\n  } = props;\n  const {\n    watch,\n    register,\n    setValue,\n    handleSubmit,\n    clearErrors,\n    setError,\n    errors\n  } = useForm({\n    defaultValues: {}\n  });\n  useEffect(() => {\n    register({\n      name: 'roomId'\n    });\n    register({\n      name: 'enterRoomDate'\n    });\n    register({\n      name: 'useCurrentTime'\n    });\n    setValue('useCurrentTime', false);\n  }, [register, setValue]);\n  const useCurrentTime = watch('useCurrentTime');\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (zoneId) {\n      dispatch(getAvailableRooms(zoneId));\n    }\n  }, [dispatch, zoneId]);\n  const {\n    availableRoomsList,\n    getAvailableRoomsLoading\n  } = useSelector(state => state.quarantine);\n  const availableRoomOptions = availableRoomsList.map(r => ({\n    key: r.id,\n    text: `${r.name} - Số giường: ${r.numberOfBed}`,\n    value: r.id\n  }));\n  return /*#__PURE__*/React.createElement(Modal, {\n    size: \"small\",\n    open: open,\n    onClose: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Ch\\u1ECDn ph\\xF2ng cho \\u0111\\u1ED1i t\\u01B0\\u1EE3ng\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    loading: loading,\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    clearable: true,\n    loading: getAvailableRoomsLoading,\n    label: \"T\\xEAn ph\\xF2ng\",\n    control: Select,\n    options: availableRoomOptions,\n    value: watch('roomId') || '',\n    onChange: (e, _ref) => {\n      let {\n        value\n      } = _ref;\n      setValue('roomId', value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    required: true,\n    label: \"Ng\\xE0y nh\\u1EADn v\\xE0o ph\\xF2ng\",\n    control: KeyboardDatePicker,\n    value: watch('enterRoomDate') || '',\n    onChange: date => {\n      clearErrors('enterRoomDate');\n      setValue('enterRoomDate', date);\n    },\n    onError: e => setError('enterRoomDate', e),\n    error: Boolean(errors.enterRoomDate),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    radio: true,\n    label: \"B\\u1EAFt \\u0111\\u1EA7u c\\xE1ch ly ngay h\\xF4m sau\",\n    name: \"checkboxRadioGroup\",\n    checked: useCurrentTime,\n    onChange: () => {\n      setValue('useCurrentTime', true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Form.Field, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    radio: true,\n    label: \"B\\u1EAFt \\u0111\\u1EA7u c\\xE1ch ly t\\u1EEB th\\u1EDDi gian \\u0111\\xE3 nh\\u1EADp khi x\\u1EED l\\xFD \\u0111\\u1ED1i t\\u01B0\\u1EE3ng\",\n    name: \"checkboxRadioGroup\",\n    checked: !useCurrentTime,\n    onChange: () => setValue('useCurrentTime', false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    primary: true,\n    content: \"X\\xE1c nh\\u1EADn\",\n    disabled: !watch('roomId') || !watch('enterRoomDate'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }))));\n};\nApproveSubjectModal.propTypes = {\n  open: PropTypes.bool,\n  zoneId: PropTypes.string,\n  loading: PropTypes.bool,\n  onClose: PropTypes.func,\n  onSubmit: PropTypes.func\n};\nApproveSubjectModal.defaultProps = {\n  open: false,\n  zoneId: '',\n  loading: false,\n  onClose: () => {},\n  onSubmit: () => {}\n};\nexport default ApproveSubjectModal;","map":{"version":3,"names":["React","useEffect","PropTypes","Modal","Form","Button","Select","Checkbox","useDispatch","useSelector","getAvailableRooms","useForm","KeyboardDatePicker","ApproveSubjectModal","props","open","zoneId","loading","onSubmit","onClose","watch","register","setValue","handleSubmit","clearErrors","setError","errors","defaultValues","name","useCurrentTime","dispatch","availableRoomsList","getAvailableRoomsLoading","state","quarantine","availableRoomOptions","map","r","key","id","text","numberOfBed","value","createElement","size","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Header","Content","Field","required","clearable","label","control","options","onChange","e","_ref","date","onError","error","Boolean","enterRoomDate","radio","checked","primary","content","disabled","propTypes","bool","string","func","defaultProps"],"sources":["H:/BAKCO/pj/data reconciliation/src/quarantine/components/waiting/ApproveSubjectModal.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Modal,\n  Form,\n  Button,\n  Select,\n  Checkbox,\n} from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAvailableRooms } from 'quarantine/actions/quarantine';\nimport { useForm } from 'react-hook-form';\nimport { KeyboardDatePicker } from 'app/components/shared';\n\nconst ApproveSubjectModal = (props) => {\n  const {\n    open,\n    zoneId,\n    loading,\n    onSubmit,\n    onClose,\n  } = props;\n\n  const {\n    watch,\n    register,\n    setValue,\n    handleSubmit,\n    clearErrors,\n    setError,\n    errors,\n  } = useForm({ defaultValues: {} });\n\n  useEffect(() => {\n    register({ name: 'roomId' });\n    register({ name: 'enterRoomDate' });\n    register({ name: 'useCurrentTime' });\n    setValue('useCurrentTime', false);\n  }, [register, setValue]);\n\n  const useCurrentTime = watch('useCurrentTime');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (zoneId) {\n      dispatch(getAvailableRooms(zoneId));\n    }\n  }, [dispatch, zoneId]);\n\n  const { availableRoomsList, getAvailableRoomsLoading } = useSelector((state) => state.quarantine);\n  const availableRoomOptions = availableRoomsList.map((r) => ({\n    key: r.id,\n    text: `${r.name} - Số giường: ${r.numberOfBed}`,\n    value: r.id,\n  }));\n\n  return (\n    <Modal size=\"small\" open={open} onClose={onClose}>\n      <Modal.Header>Chọn phòng cho đối tượng</Modal.Header>\n      <Modal.Content>\n        <Form loading={loading} onSubmit={handleSubmit(onSubmit)}>\n          <Form.Field\n            required\n            clearable\n            loading={getAvailableRoomsLoading}\n            label=\"Tên phòng\"\n            control={Select}\n            options={availableRoomOptions}\n            value={watch('roomId') || ''}\n            onChange={(e, { value }) => {\n              setValue('roomId', value);\n            }}\n          />\n          <Form.Field\n            required\n            label=\"Ngày nhận vào phòng\"\n            control={KeyboardDatePicker}\n            value={watch('enterRoomDate') || ''}\n            onChange={(date) => {\n              clearErrors('enterRoomDate');\n              setValue('enterRoomDate', date);\n            }}\n            onError={(e) => setError('enterRoomDate', e)}\n            error={Boolean(errors.enterRoomDate)}\n          />\n          <Form.Field>\n            <Checkbox\n              radio\n              label=\"Bắt đầu cách ly ngay hôm sau\"\n              name=\"checkboxRadioGroup\"\n              checked={useCurrentTime}\n              onChange={() => {\n                setValue('useCurrentTime', true);\n              }}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Checkbox\n              radio\n              label=\"Bắt đầu cách ly từ thời gian đã nhập khi xử lý đối tượng\"\n              name=\"checkboxRadioGroup\"\n              checked={!useCurrentTime}\n              onChange={() => setValue('useCurrentTime', false)}\n            />\n          </Form.Field>\n          <Button\n            primary\n            content=\"Xác nhận\"\n            disabled={!watch('roomId') || !watch('enterRoomDate')}\n          />\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nApproveSubjectModal.propTypes = {\n  open: PropTypes.bool,\n  zoneId: PropTypes.string,\n  loading: PropTypes.bool,\n  onClose: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nApproveSubjectModal.defaultProps = {\n  open: false,\n  zoneId: '',\n  loading: false,\n  onClose: () => {},\n  onSubmit: () => {},\n};\nexport default ApproveSubjectModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}